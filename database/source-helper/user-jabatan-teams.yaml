app:
  isDir: true
  content:
    Console:
      isDir: true
      content:
        Kernel.php:
          isDir: false
          content: |
            <?php

            namespace App\Console;

            use Illuminate\Console\Scheduling\Schedule;
            use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

            class Kernel extends ConsoleKernel
            {
                /**
                 * Define the application's command schedule.
                 */
                protected function schedule(Schedule $schedule): void
                {
                    // $schedule->command('inspire')->hourly();
                }

                /**
                 * Register the commands for the application.
                 */
                protected function commands(): void
                {
                    $this->load(__DIR__.'/Commands');

                    require base_path('routes/console.php');
                }
            }
          uuid: 3d00e8b9a6effcd6
      uuid: 8e0b14cf4eba5151
    Exceptions:
      isDir: true
      content:
        Handler.php:
          isDir: false
          content: |
            <?php

            namespace App\Exceptions;

            use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
            use Throwable;

            class Handler extends ExceptionHandler
            {
                /**
                 * A list of exception types with their corresponding custom log levels.
                 *
                 * @var array<class-string<\Throwable>, \Psr\Log\LogLevel::*>
                 */
                protected $levels = [
                    //
                ];

                /**
                 * A list of the exception types that are not reported.
                 *
                 * @var array<int, class-string<\Throwable>>
                 */
                protected $dontReport = [
                    //
                ];

                /**
                 * A list of the inputs that are never flashed to the session on validation exceptions.
                 *
                 * @var array<int, string>
                 */
                protected $dontFlash = [
                    'current_password',
                    'password',
                    'password_confirmation',
                ];

                /**
                 * Register the exception handling callbacks for the application.
                 */
                public function register(): void
                {
                    $this->reportable(function (Throwable $e) {
                        //
                    });
                }
            }
          uuid: 815a2ef6bb9ef1be
      uuid: 7101c450c58cd88a
    Http:
      isDir: true
      content:
        Controllers:
          isDir: true
          content:
            Admin:
              isDir: true
              content:
                AuditLogsController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Models\AuditLog;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;
                    use Yajra\DataTables\Facades\DataTables;

                    class AuditLogsController extends Controller
                    {
                        public function index(Request $request)
                        {
                            abort_if(Gate::denies('audit_log_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            if ($request->ajax()) {
                                $query = AuditLog::query()->select(sprintf('%s.*', (new AuditLog)->table));
                                $table = Datatables::of($query);

                                $table->addColumn('placeholder', '&nbsp;');
                                $table->addColumn('actions', '&nbsp;');

                                $table->editColumn('actions', function ($row) {
                                    $viewGate      = 'audit_log_show';
                                    $editGate      = 'audit_log_edit';
                                    $deleteGate    = 'audit_log_delete';
                                    $crudRoutePart = 'audit-logs';

                                    return view('partials.datatablesActions', compact(
                                        'viewGate',
                                        'editGate',
                                        'deleteGate',
                                        'crudRoutePart',
                                        'row'
                                    ));
                                });

                                $table->editColumn('id', function ($row) {
                                    return $row->id ? $row->id : '';
                                });
                                $table->editColumn('description', function ($row) {
                                    return $row->description ? $row->description : '';
                                });
                                $table->editColumn('subject_id', function ($row) {
                                    return $row->subject_id ? $row->subject_id : '';
                                });
                                $table->editColumn('subject_type', function ($row) {
                                    return $row->subject_type ? $row->subject_type : '';
                                });
                                $table->editColumn('user_id', function ($row) {
                                    return $row->user_id ? $row->user_id : '';
                                });
                                $table->editColumn('host', function ($row) {
                                    return $row->host ? $row->host : '';
                                });

                                $table->rawColumns(['actions', 'placeholder']);

                                return $table->make(true);
                            }

                            return view('admin.auditLogs.index');
                        }

                        public function show(AuditLog $auditLog)
                        {
                            abort_if(Gate::denies('audit_log_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.auditLogs.show', compact('auditLog'));
                        }
                    }
                  uuid: ad7a7328c4726170
                HomeController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    class HomeController
                    {
                        public function index()
                        {
                            return view('home');
                        }
                    }
                  uuid: c0a1998857fefe0b
                JabatanController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\MassDestroyJabatanRequest;
                    use App\Http\Requests\StoreJabatanRequest;
                    use App\Http\Requests\UpdateJabatanRequest;
                    use App\Models\Jabatan;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;
                    use Yajra\DataTables\Facades\DataTables;

                    class JabatanController extends Controller
                    {
                        public function index(Request $request)
                        {
                            abort_if(Gate::denies('jabatan_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            if ($request->ajax()) {
                                $query = Jabatan::with(['team'])->select(sprintf('%s.*', (new Jabatan)->table));
                                $table = Datatables::of($query);

                                $table->addColumn('placeholder', '&nbsp;');
                                $table->addColumn('actions', '&nbsp;');

                                $table->editColumn('actions', function ($row) {
                                    $viewGate      = 'jabatan_show';
                                    $editGate      = 'jabatan_edit';
                                    $deleteGate    = 'jabatan_delete';
                                    $crudRoutePart = 'jabatans';

                                    return view('partials.datatablesActions', compact(
                                        'viewGate',
                                        'editGate',
                                        'deleteGate',
                                        'crudRoutePart',
                                        'row'
                                    ));
                                });

                                $table->editColumn('nama', function ($row) {
                                    return $row->nama ? $row->nama : '';
                                });
                                $table->editColumn('aktif', function ($row) {
                                    return '<input type="checkbox" disabled ' . ($row->aktif ? 'checked' : null) . '>';
                                });

                                $table->rawColumns(['actions', 'placeholder', 'aktif']);

                                return $table->make(true);
                            }

                            return view('admin.jabatans.index');
                        }

                        public function create()
                        {
                            abort_if(Gate::denies('jabatan_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.jabatans.create');
                        }

                        public function store(StoreJabatanRequest $request)
                        {
                            $jabatan = Jabatan::create($request->all());

                            return redirect()->route('admin.jabatans.index');
                        }

                        public function edit(Jabatan $jabatan)
                        {
                            abort_if(Gate::denies('jabatan_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $jabatan->load('team');

                            return view('admin.jabatans.edit', compact('jabatan'));
                        }

                        public function update(UpdateJabatanRequest $request, Jabatan $jabatan)
                        {
                            $jabatan->update($request->all());

                            return redirect()->route('admin.jabatans.index');
                        }

                        public function show(Jabatan $jabatan)
                        {
                            abort_if(Gate::denies('jabatan_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $jabatan->load('team', 'jabatanUsers');

                            return view('admin.jabatans.show', compact('jabatan'));
                        }

                        public function destroy(Jabatan $jabatan)
                        {
                            abort_if(Gate::denies('jabatan_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $jabatan->delete();

                            return back();
                        }

                        public function massDestroy(MassDestroyJabatanRequest $request)
                        {
                            $jabatans = Jabatan::find(request('ids'));

                            foreach ($jabatans as $jabatan) {
                                $jabatan->delete();
                            }

                            return response(null, Response::HTTP_NO_CONTENT);
                        }
                    }
                  uuid: d930f0cf28cd6298
                PermissionsController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\MassDestroyPermissionRequest;
                    use App\Http\Requests\StorePermissionRequest;
                    use App\Http\Requests\UpdatePermissionRequest;
                    use App\Models\Permission;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;

                    class PermissionsController extends Controller
                    {
                        public function index()
                        {
                            abort_if(Gate::denies('permission_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $permissions = Permission::all();

                            return view('admin.permissions.index', compact('permissions'));
                        }

                        public function create()
                        {
                            abort_if(Gate::denies('permission_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.permissions.create');
                        }

                        public function store(StorePermissionRequest $request)
                        {
                            $permission = Permission::create($request->all());

                            return redirect()->route('admin.permissions.index');
                        }

                        public function edit(Permission $permission)
                        {
                            abort_if(Gate::denies('permission_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.permissions.edit', compact('permission'));
                        }

                        public function update(UpdatePermissionRequest $request, Permission $permission)
                        {
                            $permission->update($request->all());

                            return redirect()->route('admin.permissions.index');
                        }

                        public function show(Permission $permission)
                        {
                            abort_if(Gate::denies('permission_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.permissions.show', compact('permission'));
                        }

                        public function destroy(Permission $permission)
                        {
                            abort_if(Gate::denies('permission_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $permission->delete();

                            return back();
                        }

                        public function massDestroy(MassDestroyPermissionRequest $request)
                        {
                            $permissions = Permission::find(request('ids'));

                            foreach ($permissions as $permission) {
                                $permission->delete();
                            }

                            return response(null, Response::HTTP_NO_CONTENT);
                        }
                    }
                  uuid: 6ffe58036b4e07af
                RolesController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\MassDestroyRoleRequest;
                    use App\Http\Requests\StoreRoleRequest;
                    use App\Http\Requests\UpdateRoleRequest;
                    use App\Models\Permission;
                    use App\Models\Role;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;
                    use Yajra\DataTables\Facades\DataTables;

                    class RolesController extends Controller
                    {
                        public function index(Request $request)
                        {
                            abort_if(Gate::denies('role_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            if ($request->ajax()) {
                                $query = Role::with(['permissions'])->select(sprintf('%s.*', (new Role)->table));
                                $table = Datatables::of($query);

                                $table->addColumn('placeholder', '&nbsp;');
                                $table->addColumn('actions', '&nbsp;');

                                $table->editColumn('actions', function ($row) {
                                    $viewGate      = 'role_show';
                                    $editGate      = 'role_edit';
                                    $deleteGate    = 'role_delete';
                                    $crudRoutePart = 'roles';

                                    return view('partials.datatablesActions', compact(
                                        'viewGate',
                                        'editGate',
                                        'deleteGate',
                                        'crudRoutePart',
                                        'row'
                                    ));
                                });

                                $table->editColumn('title', function ($row) {
                                    return $row->title ? $row->title : '';
                                });
                                $table->editColumn('permissions', function ($row) {
                                    $labels = [];
                                    foreach ($row->permissions as $permission) {
                                        $labels[] = sprintf('<span class="label label-info label-many">%s</span>', $permission->title);
                                    }

                                    return implode(' ', $labels);
                                });
                                $table->editColumn('aktif', function ($row) {
                                    return '<input type="checkbox" disabled ' . ($row->aktif ? 'checked' : null) . '>';
                                });

                                $table->rawColumns(['actions', 'placeholder', 'permissions', 'aktif']);

                                return $table->make(true);
                            }

                            return view('admin.roles.index');
                        }

                        public function create()
                        {
                            abort_if(Gate::denies('role_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $permissions = Permission::pluck('title', 'id');

                            return view('admin.roles.create', compact('permissions'));
                        }

                        public function store(StoreRoleRequest $request)
                        {
                            $role = Role::create($request->all());
                            $role->permissions()->sync($request->input('permissions', []));

                            return redirect()->route('admin.roles.index');
                        }

                        public function edit(Role $role)
                        {
                            abort_if(Gate::denies('role_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $permissions = Permission::pluck('title', 'id');

                            $role->load('permissions');

                            return view('admin.roles.edit', compact('permissions', 'role'));
                        }

                        public function update(UpdateRoleRequest $request, Role $role)
                        {
                            $role->update($request->all());
                            $role->permissions()->sync($request->input('permissions', []));

                            return redirect()->route('admin.roles.index');
                        }

                        public function show(Role $role)
                        {
                            abort_if(Gate::denies('role_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $role->load('permissions', 'rolesUsers');

                            return view('admin.roles.show', compact('role'));
                        }

                        public function destroy(Role $role)
                        {
                            abort_if(Gate::denies('role_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $role->delete();

                            return back();
                        }

                        public function massDestroy(MassDestroyRoleRequest $request)
                        {
                            $roles = Role::find(request('ids'));

                            foreach ($roles as $role) {
                                $role->delete();
                            }

                            return response(null, Response::HTTP_NO_CONTENT);
                        }
                    }
                  uuid: 3e6d5c65898a1e11
                TeamController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\MassDestroyTeamRequest;
                    use App\Http\Requests\StoreTeamRequest;
                    use App\Http\Requests\UpdateTeamRequest;
                    use App\Models\Team;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;

                    class TeamController extends Controller
                    {
                        public function index()
                        {
                            abort_if(Gate::denies('team_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $teams = Team::with(['owner'])->get();

                            return view('admin.teams.index', compact('teams'));
                        }

                        public function create()
                        {
                            abort_if(Gate::denies('team_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('admin.teams.create');
                        }

                        public function store(StoreTeamRequest $request)
                        {
                            $data             = $request->all();
                            $data['owner_id'] = auth()->user()->id;
                            $team             = Team::create($data);

                            return redirect()->route('admin.teams.index');
                        }

                        public function edit(Team $team)
                        {
                            abort_if(Gate::denies('team_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $team->load('owner');

                            return view('admin.teams.edit', compact('team'));
                        }

                        public function update(UpdateTeamRequest $request, Team $team)
                        {
                            $team->update($request->all());

                            return redirect()->route('admin.teams.index');
                        }

                        public function show(Team $team)
                        {
                            abort_if(Gate::denies('team_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $team->load('owner');

                            return view('admin.teams.show', compact('team'));
                        }

                        public function destroy(Team $team)
                        {
                            abort_if(Gate::denies('team_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $team->delete();

                            return back();
                        }

                        public function massDestroy(MassDestroyTeamRequest $request)
                        {
                            $teams = Team::find(request('ids'));

                            foreach ($teams as $team) {
                                $team->delete();
                            }

                            return response(null, Response::HTTP_NO_CONTENT);
                        }
                    }
                  uuid: c8512a433833ad24
                TeamMembersController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Models\Role;
                    use App\Models\Team;
                    use App\Models\User;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Illuminate\Support\Facades\Notification;
                    use Illuminate\Support\Facades\URL;
                    use Symfony\Component\HttpFoundation\Response;

                    class TeamMembersController extends Controller
                    {
                        public function index()
                        {
                            $team  = Team::where('owner_id', auth()->user()->id)->first();
                            $roles = Role::get(['id', 'title']);
                            $users = User::where('team_id', $team->id)->get();

                            return view('admin.team-members.index', compact('team', 'users', 'roles'));
                        }

                        public function invite(Request $request)
                        {
                            $request->validate(['email' => 'email']);
                            $team    = Team::where('owner_id', auth()->user()->id)->first();
                            $url     = URL::signedRoute('register', ['team' => $team->id]);
                            $message = new \App\Notifications\TeamMemberInvite($url);
                            Notification::route('mail', $request->input('email'))->notify($message);

                            return redirect()->back()->with('message', 'Invite sent.');
                        }
                    }
                  uuid: e450feed81d8e329
                UsersController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Admin;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\MassDestroyUserRequest;
                    use App\Http\Requests\StoreUserRequest;
                    use App\Http\Requests\UpdateUserRequest;
                    use App\Models\Jabatan;
                    use App\Models\Role;
                    use App\Models\Team;
                    use App\Models\User;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;
                    use Yajra\DataTables\Facades\DataTables;

                    class UsersController extends Controller
                    {
                        public function index(Request $request)
                        {
                            abort_if(Gate::denies('user_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            if ($request->ajax()) {
                                $query = User::with(['roles', 'jabatan', 'team'])->select(sprintf('%s.*', (new User)->table));
                                $table = Datatables::of($query);

                                $table->addColumn('placeholder', '&nbsp;');
                                $table->addColumn('actions', '&nbsp;');

                                $table->editColumn('actions', function ($row) {
                                    $viewGate      = 'user_show';
                                    $editGate      = 'user_edit';
                                    $deleteGate    = 'user_delete';
                                    $crudRoutePart = 'users';

                                    return view('partials.datatablesActions', compact(
                                        'viewGate',
                                        'editGate',
                                        'deleteGate',
                                        'crudRoutePart',
                                        'row'
                                    ));
                                });

                                $table->editColumn('name', function ($row) {
                                    return $row->name ? $row->name : '';
                                });
                                $table->editColumn('email', function ($row) {
                                    return $row->email ? $row->email : '';
                                });

                                $table->editColumn('roles', function ($row) {
                                    $labels = [];
                                    foreach ($row->roles as $role) {
                                        $labels[] = sprintf('<span class="label label-info label-many">%s</span>', $role->title);
                                    }

                                    return implode(' ', $labels);
                                });
                                $table->editColumn('aktif', function ($row) {
                                    return '<input type="checkbox" disabled ' . ($row->aktif ? 'checked' : null) . '>';
                                });
                                $table->addColumn('jabatan_nama', function ($row) {
                                    return $row->jabatan ? $row->jabatan->nama : '';
                                });

                                $table->editColumn('jabatan.aktif', function ($row) {
                                    return $row->jabatan ? (is_string($row->jabatan) ? $row->jabatan : $row->jabatan->aktif) : '';
                                });

                                $table->rawColumns(['actions', 'placeholder', 'roles', 'aktif', 'jabatan']);

                                return $table->make(true);
                            }

                            return view('admin.users.index');
                        }

                        public function create()
                        {
                            abort_if(Gate::denies('user_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $roles = Role::pluck('title', 'id');

                            $jabatans = Jabatan::pluck('nama', 'id')->prepend(trans('global.pleaseSelect'), '');

                            $teams = Team::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');

                            return view('admin.users.create', compact('jabatans', 'roles', 'teams'));
                        }

                        public function store(StoreUserRequest $request)
                        {
                            $user = User::create($request->all());
                            $user->roles()->sync($request->input('roles', []));

                            return redirect()->route('admin.users.index');
                        }

                        public function edit(User $user)
                        {
                            abort_if(Gate::denies('user_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $roles = Role::pluck('title', 'id');

                            $jabatans = Jabatan::pluck('nama', 'id')->prepend(trans('global.pleaseSelect'), '');

                            $teams = Team::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');

                            $user->load('roles', 'jabatan', 'team');

                            return view('admin.users.edit', compact('jabatans', 'roles', 'teams', 'user'));
                        }

                        public function update(UpdateUserRequest $request, User $user)
                        {
                            $user->update($request->all());
                            $user->roles()->sync($request->input('roles', []));

                            return redirect()->route('admin.users.index');
                        }

                        public function show(User $user)
                        {
                            abort_if(Gate::denies('user_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $user->load('roles', 'jabatan', 'team');

                            return view('admin.users.show', compact('user'));
                        }

                        public function destroy(User $user)
                        {
                            abort_if(Gate::denies('user_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            $user->delete();

                            return back();
                        }

                        public function massDestroy(MassDestroyUserRequest $request)
                        {
                            $users = User::find(request('ids'));

                            foreach ($users as $user) {
                                $user->delete();
                            }

                            return response(null, Response::HTTP_NO_CONTENT);
                        }
                    }
                  uuid: 74fbc3b706bda846
              uuid: 0408f351e9eca73f
            Api:
              isDir: true
              content:
                V1:
                  isDir: true
                  content:
                    Admin:
                      isDir: true
                      content:
                        JabatanApiController.php:
                          isDir: false
                          content: |
                            <?php

                            namespace App\Http\Controllers\Api\V1\Admin;

                            use App\Http\Controllers\Controller;
                            use App\Http\Requests\StoreJabatanRequest;
                            use App\Http\Requests\UpdateJabatanRequest;
                            use App\Http\Resources\Admin\JabatanResource;
                            use App\Models\Jabatan;
                            use Gate;
                            use Illuminate\Http\Request;
                            use Symfony\Component\HttpFoundation\Response;

                            class JabatanApiController extends Controller
                            {
                                public function index()
                                {
                                    abort_if(Gate::denies('jabatan_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new JabatanResource(Jabatan::with(['team'])->get());
                                }

                                public function store(StoreJabatanRequest $request)
                                {
                                    $jabatan = Jabatan::create($request->all());

                                    return (new JabatanResource($jabatan))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_CREATED);
                                }

                                public function show(Jabatan $jabatan)
                                {
                                    abort_if(Gate::denies('jabatan_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new JabatanResource($jabatan->load(['team']));
                                }

                                public function update(UpdateJabatanRequest $request, Jabatan $jabatan)
                                {
                                    $jabatan->update($request->all());

                                    return (new JabatanResource($jabatan))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_ACCEPTED);
                                }

                                public function destroy(Jabatan $jabatan)
                                {
                                    abort_if(Gate::denies('jabatan_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    $jabatan->delete();

                                    return response(null, Response::HTTP_NO_CONTENT);
                                }
                            }
                          uuid: 5b313344c08923c0
                        RolesApiController.php:
                          isDir: false
                          content: |
                            <?php

                            namespace App\Http\Controllers\Api\V1\Admin;

                            use App\Http\Controllers\Controller;
                            use App\Http\Requests\StoreRoleRequest;
                            use App\Http\Requests\UpdateRoleRequest;
                            use App\Http\Resources\Admin\RoleResource;
                            use App\Models\Role;
                            use Gate;
                            use Illuminate\Http\Request;
                            use Symfony\Component\HttpFoundation\Response;

                            class RolesApiController extends Controller
                            {
                                public function index()
                                {
                                    abort_if(Gate::denies('role_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new RoleResource(Role::with(['permissions'])->get());
                                }

                                public function store(StoreRoleRequest $request)
                                {
                                    $role = Role::create($request->all());
                                    $role->permissions()->sync($request->input('permissions', []));

                                    return (new RoleResource($role))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_CREATED);
                                }

                                public function show(Role $role)
                                {
                                    abort_if(Gate::denies('role_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new RoleResource($role->load(['permissions']));
                                }

                                public function update(UpdateRoleRequest $request, Role $role)
                                {
                                    $role->update($request->all());
                                    $role->permissions()->sync($request->input('permissions', []));

                                    return (new RoleResource($role))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_ACCEPTED);
                                }

                                public function destroy(Role $role)
                                {
                                    abort_if(Gate::denies('role_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    $role->delete();

                                    return response(null, Response::HTTP_NO_CONTENT);
                                }
                            }
                          uuid: ead9e745961ffd5e
                        UsersApiController.php:
                          isDir: false
                          content: |
                            <?php

                            namespace App\Http\Controllers\Api\V1\Admin;

                            use App\Http\Controllers\Controller;
                            use App\Http\Requests\StoreUserRequest;
                            use App\Http\Requests\UpdateUserRequest;
                            use App\Http\Resources\Admin\UserResource;
                            use App\Models\User;
                            use Gate;
                            use Illuminate\Http\Request;
                            use Symfony\Component\HttpFoundation\Response;

                            class UsersApiController extends Controller
                            {
                                public function index()
                                {
                                    abort_if(Gate::denies('user_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new UserResource(User::with(['roles', 'jabatan', 'team'])->get());
                                }

                                public function store(StoreUserRequest $request)
                                {
                                    $user = User::create($request->all());
                                    $user->roles()->sync($request->input('roles', []));

                                    return (new UserResource($user))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_CREATED);
                                }

                                public function show(User $user)
                                {
                                    abort_if(Gate::denies('user_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    return new UserResource($user->load(['roles', 'jabatan', 'team']));
                                }

                                public function update(UpdateUserRequest $request, User $user)
                                {
                                    $user->update($request->all());
                                    $user->roles()->sync($request->input('roles', []));

                                    return (new UserResource($user))
                                        ->response()
                                        ->setStatusCode(Response::HTTP_ACCEPTED);
                                }

                                public function destroy(User $user)
                                {
                                    abort_if(Gate::denies('user_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                                    $user->delete();

                                    return response(null, Response::HTTP_NO_CONTENT);
                                }
                            }
                          uuid: 0c2b3ab90d6b018a
                      uuid: 4382e3dfad3d69e8
                  uuid: 550c05f5cf5ac8da
              uuid: 8f4bee414b4aea84
            Auth:
              isDir: true
              content:
                ChangePasswordController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Http\Requests\UpdatePasswordRequest;
                    use App\Http\Requests\UpdateProfileRequest;
                    use Gate;
                    use Illuminate\Http\Request;
                    use Symfony\Component\HttpFoundation\Response;

                    class ChangePasswordController extends Controller
                    {
                        public function edit()
                        {
                            abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                            return view('auth.passwords.edit');
                        }

                        public function update(UpdatePasswordRequest $request)
                        {
                            auth()->user()->update($request->validated());

                            return redirect()->route('profile.password.edit')->with('message', __('global.change_password_success'));
                        }

                        public function updateProfile(UpdateProfileRequest $request)
                        {
                            $user = auth()->user();

                            $user->update($request->validated());

                            return redirect()->route('profile.password.edit')->with('message', __('global.update_profile_success'));
                        }

                        public function destroy()
                        {
                            $user = auth()->user();

                            $user->update([
                                'email' => time() . '_' . $user->email,
                            ]);

                            $user->delete();

                            return redirect()->route('login')->with('message', __('global.delete_account_success'));
                        }
                    }
                  uuid: 5894cfc75a001fe9
                ConfirmPasswordController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Providers\RouteServiceProvider;
                    use Illuminate\Foundation\Auth\ConfirmsPasswords;

                    class ConfirmPasswordController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Confirm Password Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller is responsible for handling password confirmations and
                        | uses a simple trait to include the behavior. You're free to explore
                        | this trait and override any functions that require customization.
                        |
                        */

                        use ConfirmsPasswords;

                        /**
                         * Where to redirect users when the intended url fails.
                         *
                         * @var string
                         */
                        protected $redirectTo = RouteServiceProvider::HOME;

                        /**
                         * Create a new controller instance.
                         *
                         * @return void
                         */
                        public function __construct()
                        {
                            $this->middleware('auth');
                        }
                    }
                  uuid: 301a571f37bfe5b8
                ForgotPasswordController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use Illuminate\Foundation\Auth\SendsPasswordResetEmails;

                    class ForgotPasswordController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Password Reset Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller is responsible for handling password reset emails and
                        | includes a trait which assists in sending these notifications from
                        | your application to your users. Feel free to explore this trait.
                        |
                        */

                        use SendsPasswordResetEmails;
                    }
                  uuid: eb880b27e6b35a0e
                LoginController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Providers\RouteServiceProvider;
                    use Illuminate\Foundation\Auth\AuthenticatesUsers;

                    class LoginController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Login Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller handles authenticating users for the application and
                        | redirecting them to your home screen. The controller uses a trait
                        | to conveniently provide its functionality to your applications.
                        |
                        */

                        use AuthenticatesUsers;

                        /**
                         * Where to redirect users after login.
                         *
                         * @var string
                         */
                        protected $redirectTo = RouteServiceProvider::HOME;

                        /**
                         * Create a new controller instance.
                         *
                         * @return void
                         */
                        public function __construct()
                        {
                            $this->middleware('guest')->except('logout');
                        }
                    }
                  uuid: e4731dfe83b09360
                RegisterController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Models\User;
                    use App\Providers\RouteServiceProvider;
                    use Illuminate\Foundation\Auth\RegistersUsers;
                    use Illuminate\Support\Facades\Hash;
                    use Illuminate\Support\Facades\Validator;

                    class RegisterController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Register Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller handles the registration of new users as well as their
                        | validation and creation. By default this controller uses a trait to
                        | provide this functionality without requiring any additional code.
                        |
                        */

                        use RegistersUsers;

                        /**
                         * Where to redirect users after registration.
                         *
                         * @var string
                         */
                        protected $redirectTo = RouteServiceProvider::HOME;

                        /**
                         * Create a new controller instance.
                         *
                         * @return void
                         */
                        public function __construct()
                        {
                            $this->middleware('guest');
                        }

                        /**
                         * Get a validator for an incoming registration request.
                         *
                         * @param  array  $data
                         * @return \Illuminate\Contracts\Validation\Validator
                         */
                        protected function validator(array $data)
                        {
                            return Validator::make($data, [
                                'name'     => ['required', 'string', 'max:255'],
                                'email'    => ['required', 'string', 'email', 'max:255', 'unique:users'],
                                'password' => ['required', 'string', 'min:8', 'confirmed'],
                            ]);
                        }

                             /**
                              * Create a new user instance after a valid registration.
                              *
                              * @param  array  $data
                              * @return \App\User
                              */
                             protected function create(array $data)
                             {
                                 $user = User::create([
                                     'name'     => $data['name'],
                                     'email'    => $data['email'],
                                     'password' => Hash::make($data['password']),
                                     'team_id'  => request()->input('team', null),
                                 ]);

                                 if (! request()->has('team')) {
                                     $team = \App\Models\Team::create([
                                         'owner_id' => $user->id,
                                         'name'     => $data['email'],
                                     ]);

                                     $user->update(['team_id' => $team->id]);
                                 }

                                 return $user;
                             }

                        public function showRegistrationForm()
                        {
                            if (request()->has('signature') && ! request()->hasValidSignature()) {
                                return redirect()->route('register');
                            }

                            return view('auth.register');
                        }
                    }
                  uuid: 319f644a4d295bb1
                ResetPasswordController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Providers\RouteServiceProvider;
                    use Illuminate\Foundation\Auth\ResetsPasswords;

                    class ResetPasswordController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Password Reset Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller is responsible for handling password reset requests
                        | and uses a simple trait to include this behavior. You're free to
                        | explore this trait and override any methods you wish to tweak.
                        |
                        */

                        use ResetsPasswords;

                        /**
                         * Where to redirect users after resetting their password.
                         *
                         * @var string
                         */
                        protected $redirectTo = RouteServiceProvider::HOME;
                    }
                  uuid: 8c7cf2ef03de8f24
                VerificationController.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Controllers\Auth;

                    use App\Http\Controllers\Controller;
                    use App\Providers\RouteServiceProvider;
                    use Illuminate\Foundation\Auth\VerifiesEmails;

                    class VerificationController extends Controller
                    {
                        /*
                        |--------------------------------------------------------------------------
                        | Email Verification Controller
                        |--------------------------------------------------------------------------
                        |
                        | This controller is responsible for handling email verification for any
                        | user that recently registered with the application. Emails may also
                        | be re-sent if the user didn't receive the original email message.
                        |
                        */

                        use VerifiesEmails;

                        /**
                         * Where to redirect users after verification.
                         *
                         * @var string
                         */
                        protected $redirectTo = RouteServiceProvider::HOME;

                        /**
                         * Create a new controller instance.
                         *
                         * @return void
                         */
                        public function __construct()
                        {
                            $this->middleware('auth');
                            $this->middleware('signed')->only('verify');
                            $this->middleware('throttle:6,1')->only('verify', 'resend');
                        }
                    }
                  uuid: df4169220b2ce41d
              uuid: 613fc926acf5ef90
            Controller.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Controllers;

                use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
                use Illuminate\Foundation\Validation\ValidatesRequests;
                use Illuminate\Routing\Controller as BaseController;

                class Controller extends BaseController
                {
                    use AuthorizesRequests, ValidatesRequests;
                }
              uuid: fe4a046d7229415e
            HomeController.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Controllers;

                use Illuminate\Http\Request;

                class HomeController extends Controller
                {
                    /**
                     * Create a new controller instance.
                     *
                     * @return void
                     */
                    public function __construct()
                    {
                        $this->middleware('auth');
                    }

                    /**
                     * Show the application dashboard.
                     *
                     * @return \Illuminate\Contracts\Support\Renderable
                     */
                    public function index()
                    {
                        return view('home');
                    }
                }
              uuid: c88652cd1d2eaf17
          uuid: 7b25fe4e9eed7c7d
        Middleware:
          isDir: true
          content:
            AuthGates.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use App\Models\Role;
                use Closure;
                use Illuminate\Support\Facades\Gate;

                class AuthGates
                {
                    public function handle($request, Closure $next)
                    {
                        $user = auth()->user();

                        if (! $user) {
                            return $next($request);
                        }

                        $roles            = Role::with('permissions')->get();
                        $permissionsArray = [];

                        foreach ($roles as $role) {
                            foreach ($role->permissions as $permissions) {
                                $permissionsArray[$permissions->title][] = $role->id;
                            }
                        }

                        foreach ($permissionsArray as $title => $roles) {
                            Gate::define($title, function ($user) use ($roles) {
                                return count(array_intersect($user->roles->pluck('id')->toArray(), $roles)) > 0;
                            });
                        }

                        return $next($request);
                    }
                }
              uuid: 50717d4722dc9584
            Authenticate.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use Illuminate\Auth\Middleware\Authenticate as Middleware;
                use Illuminate\Http\Request;

                class Authenticate extends Middleware
                {
                    /**
                     * Get the path the user should be redirected to when they are not authenticated.
                     */
                    protected function redirectTo(Request $request): ?string
                    {
                        return $request->expectsJson() ? null : route('login');
                    }
                }
              uuid: b19830108e72e685
            EncryptCookies.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;

                class EncryptCookies extends Middleware
                {
                    /**
                     * The names of the cookies that should not be encrypted.
                     *
                     * @var array<int, string>
                     */
                    protected $except = [
                        //
                    ];
                }
              uuid: a2c6471d41bd81c5
            PreventRequestsDuringMaintenance.php:
              isDir: false
              content: >
                <?php


                namespace App\Http\Middleware;


                use
                Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                as Middleware;


                class PreventRequestsDuringMaintenance extends Middleware

                {
                    /**
                     * The URIs that should be reachable while maintenance mode is enabled.
                     *
                     * @var array<int, string>
                     */
                    protected $except = [
                        //
                    ];
                }
              uuid: 04f781055fe0f2a1
            RedirectIfAuthenticated.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use App\Providers\RouteServiceProvider;
                use Closure;
                use Illuminate\Http\Request;
                use Illuminate\Support\Facades\Auth;
                use Symfony\Component\HttpFoundation\Response;

                class RedirectIfAuthenticated
                {
                    /**
                     * Handle an incoming request.
                     *
                     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
                     */
                    public function handle(Request $request, Closure $next, string ...$guards): Response
                    {
                        $guards = empty($guards) ? [null] : $guards;

                        foreach ($guards as $guard) {
                            if (Auth::guard($guard)->check()) {
                                return redirect(RouteServiceProvider::HOME);
                            }
                        }

                        return $next($request);
                    }
                }
              uuid: aca2008c367eb6a8
            SetLocale.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use Closure;

                class SetLocale
                {
                    public function handle($request, Closure $next)
                    {
                        if (request('change_language')) {
                            session()->put('language', request('change_language'));
                            $language = request('change_language');
                        } elseif (session('language')) {
                            $language = session('language');
                        } elseif (config('panel.primary_language')) {
                            $language = config('panel.primary_language');
                        }

                        if (isset($language)) {
                            app()->setLocale($language);
                        }

                        return $next($request);
                    }
                }
              uuid: ad590d37d33f5e0b
            TrimStrings.php:
              isDir: false
              content: >
                <?php


                namespace App\Http\Middleware;


                use Illuminate\Foundation\Http\Middleware\TrimStrings as
                Middleware;


                class TrimStrings extends Middleware

                {
                    /**
                     * The names of the attributes that should not be trimmed.
                     *
                     * @var array<int, string>
                     */
                    protected $except = [
                        'current_password',
                        'password',
                        'password_confirmation',
                    ];
                }
              uuid: 7a885dc8d02bf37c
            TrustHosts.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use Illuminate\Http\Middleware\TrustHosts as Middleware;

                class TrustHosts extends Middleware
                {
                    /**
                     * Get the host patterns that should be trusted.
                     *
                     * @return array<int, string|null>
                     */
                    public function hosts(): array
                    {
                        return [
                            $this->allSubdomainsOfApplicationUrl(),
                        ];
                    }
                }
              uuid: 4aebd654c7898b64
            TrustProxies.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Middleware;

                use Illuminate\Http\Middleware\TrustProxies as Middleware;
                use Illuminate\Http\Request;

                class TrustProxies extends Middleware
                {
                    /**
                     * The trusted proxies for this application.
                     *
                     * @var array<int, string>|string|null
                     */
                    protected $proxies;

                    /**
                     * The headers that should be used to detect proxies.
                     *
                     * @var int
                     */
                    protected $headers =
                        Request::HEADER_X_FORWARDED_FOR |
                        Request::HEADER_X_FORWARDED_HOST |
                        Request::HEADER_X_FORWARDED_PORT |
                        Request::HEADER_X_FORWARDED_PROTO |
                        Request::HEADER_X_FORWARDED_AWS_ELB;
                }
              uuid: 7f2e4abd92c86ec2
            ValidateSignature.php:
              isDir: false
              content: >
                <?php


                namespace App\Http\Middleware;


                use Illuminate\Routing\Middleware\ValidateSignature as
                Middleware;


                class ValidateSignature extends Middleware

                {
                    /**
                     * The names of the query string parameters that should be ignored.
                     *
                     * @var array<int, string>
                     */
                    protected $except = [
                        // 'fbclid',
                        // 'utm_campaign',
                        // 'utm_content',
                        // 'utm_medium',
                        // 'utm_source',
                        // 'utm_term',
                    ];
                }
              uuid: b6bc2d41d897d116
            VerifyCsrfToken.php:
              isDir: false
              content: >
                <?php


                namespace App\Http\Middleware;


                use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as
                Middleware;


                class VerifyCsrfToken extends Middleware

                {
                    /**
                     * The URIs that should be excluded from CSRF verification.
                     *
                     * @var array<int, string>
                     */
                    protected $except = [
                        //
                    ];
                }
              uuid: 4d00fe105b209202
          uuid: dd3f6b1a0b66a623
        Requests:
          isDir: true
          content:
            MassDestroyJabatanRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Jabatan;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Symfony\Component\HttpFoundation\Response;

                class MassDestroyJabatanRequest extends FormRequest
                {
                    public function authorize()
                    {
                        abort_if(Gate::denies('jabatan_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    public function rules()
                    {
                        return [
                            'ids'   => 'required|array',
                            'ids.*' => 'exists:jabatans,id',
                        ];
                    }
                }
              uuid: 8cfc822c56440642
            MassDestroyPermissionRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Permission;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Symfony\Component\HttpFoundation\Response;

                class MassDestroyPermissionRequest extends FormRequest
                {
                    public function authorize()
                    {
                        abort_if(Gate::denies('permission_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    public function rules()
                    {
                        return [
                            'ids'   => 'required|array',
                            'ids.*' => 'exists:permissions,id',
                        ];
                    }
                }
              uuid: 94c93e9d2b7cb087
            MassDestroyRoleRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Role;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Symfony\Component\HttpFoundation\Response;

                class MassDestroyRoleRequest extends FormRequest
                {
                    public function authorize()
                    {
                        abort_if(Gate::denies('role_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    public function rules()
                    {
                        return [
                            'ids'   => 'required|array',
                            'ids.*' => 'exists:roles,id',
                        ];
                    }
                }
              uuid: 2a7218217a4dc55e
            MassDestroyTeamRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Team;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Symfony\Component\HttpFoundation\Response;

                class MassDestroyTeamRequest extends FormRequest
                {
                    public function authorize()
                    {
                        abort_if(Gate::denies('team_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    public function rules()
                    {
                        return [
                            'ids'   => 'required|array',
                            'ids.*' => 'exists:teams,id',
                        ];
                    }
                }
              uuid: 49b9a72e9d4a49d1
            MassDestroyUserRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\User;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Symfony\Component\HttpFoundation\Response;

                class MassDestroyUserRequest extends FormRequest
                {
                    public function authorize()
                    {
                        abort_if(Gate::denies('user_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    public function rules()
                    {
                        return [
                            'ids'   => 'required|array',
                            'ids.*' => 'exists:users,id',
                        ];
                    }
                }
              uuid: 80f5270c5ff6eaa8
            StoreJabatanRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Jabatan;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class StoreJabatanRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('jabatan_create');
                    }

                    public function rules()
                    {
                        return [
                            'nama' => [
                                'string',
                                'max:150',
                                'nullable',
                            ],
                        ];
                    }
                }
              uuid: 44404c58383f1bc1
            StorePermissionRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Permission;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class StorePermissionRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('permission_create');
                    }

                    public function rules()
                    {
                        return [
                            'title' => [
                                'string',
                                'required',
                            ],
                        ];
                    }
                }
              uuid: 947cfd4423bfc2a4
            StoreRoleRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Role;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class StoreRoleRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('role_create');
                    }

                    public function rules()
                    {
                        return [
                            'title' => [
                                'string',
                                'required',
                            ],
                            'permissions.*' => [
                                'integer',
                            ],
                            'permissions' => [
                                'required',
                                'array',
                            ],
                        ];
                    }
                }
              uuid: 95ed9bfae5da0af7
            StoreTeamRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Team;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class StoreTeamRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('team_create');
                    }

                    public function rules()
                    {
                        return [
                            'name' => [
                                'string',
                                'required',
                            ],
                        ];
                    }
                }
              uuid: 809e4214d20f8b92
            StoreUserRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\User;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class StoreUserRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('user_create');
                    }

                    public function rules()
                    {
                        return [
                            'name' => [
                                'string',
                                'required',
                            ],
                            'email' => [
                                'required',
                                'unique:users',
                            ],
                            'password' => [
                                'required',
                            ],
                            'roles.*' => [
                                'integer',
                            ],
                            'roles' => [
                                'required',
                                'array',
                            ],
                        ];
                    }
                }
              uuid: 5136241d6243930f
            UpdateJabatanRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Jabatan;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class UpdateJabatanRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('jabatan_edit');
                    }

                    public function rules()
                    {
                        return [
                            'nama' => [
                                'string',
                                'max:150',
                                'nullable',
                            ],
                        ];
                    }
                }
              uuid: 73fa1cd8e60e2de1
            UpdatePasswordRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;
                use Illuminate\Validation\Rule;

                class UpdatePasswordRequest extends FormRequest
                {
                    /**
                     * Determine if the user is authorized to make this request.
                     *
                     * @return bool
                     */
                    public function authorize()
                    {
                        abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    /**
                     * Get the validation rules that apply to the request.
                     *
                     * @return array
                     */
                    public function rules()
                    {
                        return [
                            'password' => ['required', 'string', 'min:8', 'confirmed'],
                        ];
                    }
                }
              uuid: 84ea7966e4121990
            UpdatePermissionRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Permission;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class UpdatePermissionRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('permission_edit');
                    }

                    public function rules()
                    {
                        return [
                            'title' => [
                                'string',
                                'required',
                            ],
                        ];
                    }
                }
              uuid: f6dae16cf509cf47
            UpdateProfileRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;
                use Illuminate\Validation\Rule;

                class UpdateProfileRequest extends FormRequest
                {
                    /**
                     * Determine if the user is authorized to make this request.
                     *
                     * @return bool
                     */
                    public function authorize()
                    {
                        abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

                        return true;
                    }

                    /**
                     * Get the validation rules that apply to the request.
                     *
                     * @return array
                     */
                    public function rules()
                    {
                        return [
                            'name'  => ['required', 'string', 'max:255'],
                            'email' => ['required', 'string', 'email', 'max:255', 'unique:users,email,' . auth()->id()],
                        ];
                    }
                }
              uuid: 939a377b423407cc
            UpdateRoleRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Role;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class UpdateRoleRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('role_edit');
                    }

                    public function rules()
                    {
                        return [
                            'title' => [
                                'string',
                                'required',
                            ],
                            'permissions.*' => [
                                'integer',
                            ],
                            'permissions' => [
                                'required',
                                'array',
                            ],
                        ];
                    }
                }
              uuid: 83b106e584055b16
            UpdateTeamRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\Team;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class UpdateTeamRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('team_edit');
                    }

                    public function rules()
                    {
                        return [
                            'name' => [
                                'string',
                                'required',
                            ],
                        ];
                    }
                }
              uuid: 2d20d68d62f3b953
            UpdateUserRequest.php:
              isDir: false
              content: |
                <?php

                namespace App\Http\Requests;

                use App\Models\User;
                use Gate;
                use Illuminate\Foundation\Http\FormRequest;
                use Illuminate\Http\Response;

                class UpdateUserRequest extends FormRequest
                {
                    public function authorize()
                    {
                        return Gate::allows('user_edit');
                    }

                    public function rules()
                    {
                        return [
                            'name' => [
                                'string',
                                'required',
                            ],
                            'email' => [
                                'required',
                                'unique:users,email,' . request()->route('user')->id,
                            ],
                            'roles.*' => [
                                'integer',
                            ],
                            'roles' => [
                                'required',
                                'array',
                            ],
                        ];
                    }
                }
              uuid: 8effe734979a52a1
          uuid: 9b843193012f03aa
        Resources:
          isDir: true
          content:
            Admin:
              isDir: true
              content:
                JabatanResource.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Resources\Admin;

                    use Illuminate\Http\Resources\Json\JsonResource;

                    class JabatanResource extends JsonResource
                    {
                        public function toArray($request)
                        {
                            return parent::toArray($request);
                        }
                    }
                  uuid: cdfe163839789a2a
                RoleResource.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Resources\Admin;

                    use Illuminate\Http\Resources\Json\JsonResource;

                    class RoleResource extends JsonResource
                    {
                        public function toArray($request)
                        {
                            return parent::toArray($request);
                        }
                    }
                  uuid: 058c90c8cf5abb3c
                UserResource.php:
                  isDir: false
                  content: |
                    <?php

                    namespace App\Http\Resources\Admin;

                    use Illuminate\Http\Resources\Json\JsonResource;

                    class UserResource extends JsonResource
                    {
                        public function toArray($request)
                        {
                            return parent::toArray($request);
                        }
                    }
                  uuid: 054b4841ae500524
              uuid: 669ebfa453436ba6
          uuid: 47ca7613dd7c111f
        Kernel.php:
          isDir: false
          content: |
            <?php

            namespace App\Http;

            use Illuminate\Foundation\Http\Kernel as HttpKernel;

            class Kernel extends HttpKernel
            {
                protected $middleware = [
                    // \App\Http\Middleware\TrustHosts::class,
                    \App\Http\Middleware\TrustProxies::class,
                    \Illuminate\Http\Middleware\HandleCors::class,
                    \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
                    \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
                    \App\Http\Middleware\TrimStrings::class,
                    \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
                ];

                protected $middlewareAliases = [
                    'auth'             => \App\Http\Middleware\Authenticate::class,
                    'auth.basic'       => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
                    'auth.session'     => \Illuminate\Session\Middleware\AuthenticateSession::class,
                    'cache.headers'    => \Illuminate\Http\Middleware\SetCacheHeaders::class,
                    'can'              => \Illuminate\Auth\Middleware\Authorize::class,
                    'guest'            => \App\Http\Middleware\RedirectIfAuthenticated::class,
                    'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
                    'signed'           => \App\Http\Middleware\ValidateSignature::class,
                    'throttle'         => \Illuminate\Routing\Middleware\ThrottleRequests::class,
                    'verified'         => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
                ];

                protected $middlewareGroups = [
                    'web' => [
                        \App\Http\Middleware\EncryptCookies::class,
                        \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
                        \Illuminate\Session\Middleware\StartSession::class,
                        \Illuminate\View\Middleware\ShareErrorsFromSession::class,
                        \App\Http\Middleware\VerifyCsrfToken::class,
                        \Illuminate\Routing\Middleware\SubstituteBindings::class,
                        \App\Http\Middleware\AuthGates::class,
                        \App\Http\Middleware\SetLocale::class,
                    ],
                    'api' => [
                        // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
                        \Illuminate\Routing\Middleware\ThrottleRequests::class . ':api',
                        \Illuminate\Routing\Middleware\SubstituteBindings::class,
                    ],
                ];
            }
          uuid: b37ecb69eb43d611
      uuid: d09d55e5532ab8b3
    Models:
      isDir: true
      content:
        AuditLog.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use DateTimeInterface;
            use Illuminate\Database\Eloquent\Model;

            class AuditLog extends Model
            {
                public $table = 'audit_logs';

                protected $fillable = [
                    'description',
                    'subject_id',
                    'subject_type',
                    'user_id',
                    'properties',
                    'host',
                ];

                protected $casts = [
                    'properties' => 'collection',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }
            }
          uuid: 4253c210f81d60e0
        Jabatan.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use App\Traits\Auditable;
            use App\Traits\MultiTenantModelTrait;
            use DateTimeInterface;
            use Illuminate\Database\Eloquent\Factories\HasFactory;
            use Illuminate\Database\Eloquent\Model;
            use Illuminate\Database\Eloquent\SoftDeletes;

            class Jabatan extends Model
            {
                use SoftDeletes, MultiTenantModelTrait, Auditable, HasFactory;

                public $table = 'jabatans';

                protected $dates = [
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected $fillable = [
                    'nama',
                    'aktif',
                    'created_at',
                    'updated_at',
                    'deleted_at',
                    'team_id',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }

                public function jabatanUsers()
                {
                    return $this->hasMany(User::class, 'jabatan_id', 'id');
                }

                public function team()
                {
                    return $this->belongsTo(Team::class, 'team_id');
                }
            }
          uuid: d762037a5acc44de
        Permission.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use DateTimeInterface;
            use Illuminate\Database\Eloquent\Factories\HasFactory;
            use Illuminate\Database\Eloquent\Model;
            use Illuminate\Database\Eloquent\SoftDeletes;

            class Permission extends Model
            {
                use SoftDeletes, HasFactory;

                public $table = 'permissions';

                protected $dates = [
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected $fillable = [
                    'title',
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }
            }
          uuid: 2bd169ba1dceec28
        Role.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use App\Traits\Auditable;
            use DateTimeInterface;
            use Illuminate\Database\Eloquent\Factories\HasFactory;
            use Illuminate\Database\Eloquent\Model;
            use Illuminate\Database\Eloquent\SoftDeletes;

            class Role extends Model
            {
                use SoftDeletes, Auditable, HasFactory;

                public $table = 'roles';

                protected $dates = [
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected $fillable = [
                    'title',
                    'aktif',
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }

                public function rolesUsers()
                {
                    return $this->belongsToMany(User::class);
                }

                public function permissions()
                {
                    return $this->belongsToMany(Permission::class);
                }
            }
          uuid: c7b5488c21101b01
        Team.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use DateTimeInterface;
            use Illuminate\Database\Eloquent\Factories\HasFactory;
            use Illuminate\Database\Eloquent\Model;
            use Illuminate\Database\Eloquent\SoftDeletes;

            class Team extends Model
            {
                use SoftDeletes, HasFactory;

                public $table = 'teams';

                protected $dates = [
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected $fillable = [
                    'created_at',
                    'updated_at',
                    'deleted_at',
                    'name',
                    'owner_id',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }

                public function owner()
                {
                    return $this->belongsTo(User::class, 'owner_id');
                }
            }
          uuid: d0a155c731ef1a43
        User.php:
          isDir: false
          content: |
            <?php

            namespace App\Models;

            use App\Notifications\VerifyUserNotification;
            use App\Traits\Auditable;
            use Carbon\Carbon;
            use DateTimeInterface;
            use Hash;
            use Illuminate\Auth\Notifications\ResetPassword;
            use Illuminate\Contracts\Auth\MustVerifyEmail;
            use Illuminate\Database\Eloquent\Factories\HasFactory;
            use Illuminate\Database\Eloquent\SoftDeletes;
            use Illuminate\Foundation\Auth\User as Authenticatable;
            use Illuminate\Notifications\Notifiable;
            use Illuminate\Support\Str;

            class User extends Authenticatable
            {
                use SoftDeletes, Notifiable, Auditable, HasFactory;

                public $table = 'users';

                protected $hidden = [
                    'remember_token',
                    'password',
                ];

                protected $dates = [
                    'email_verified_at',
                    'created_at',
                    'updated_at',
                    'deleted_at',
                ];

                protected $fillable = [
                    'name',
                    'email',
                    'email_verified_at',
                    'password',
                    'remember_token',
                    'created_at',
                    'aktif',
                    'jabatan_id',
                    'updated_at',
                    'deleted_at',
                    'team_id',
                ];

                protected function serializeDate(DateTimeInterface $date)
                {
                    return $date->format('Y-m-d H:i:s');
                }

                public function getIsAdminAttribute()
                {
                    return $this->roles()->where('id', 1)->exists();
                }

                public function __construct(array $attributes = [])
                {
                    parent::__construct($attributes);
                    self::created(function (self $user) {
                        $registrationRole = config('panel.registration_default_role');
                        if (! $user->roles()->get()->contains($registrationRole)) {
                            $user->roles()->attach($registrationRole);
                        }
                    });
                }

                public function getEmailVerifiedAtAttribute($value)
                {
                    return $value ? Carbon::createFromFormat('Y-m-d H:i:s', $value)->format(config('panel.date_format') . ' ' . config('panel.time_format')) : null;
                }

                public function setEmailVerifiedAtAttribute($value)
                {
                    $this->attributes['email_verified_at'] = $value ? Carbon::createFromFormat(config('panel.date_format') . ' ' . config('panel.time_format'), $value)->format('Y-m-d H:i:s') : null;
                }

                public function setPasswordAttribute($input)
                {
                    if ($input) {
                        $this->attributes['password'] = app('hash')->needsRehash($input) ? Hash::make($input) : $input;
                    }
                }

                public function sendPasswordResetNotification($token)
                {
                    $this->notify(new ResetPassword($token));
                }

                public function roles()
                {
                    return $this->belongsToMany(Role::class);
                }

                public function jabatan()
                {
                    return $this->belongsTo(Jabatan::class, 'jabatan_id');
                }

                public function team()
                {
                    return $this->belongsTo(Team::class, 'team_id');
                }
            }
          uuid: cd7c67cf9e564528
      uuid: 8bbb3defbf00de35
    Notifications:
      isDir: true
      content:
        TeamMemberInvite.php:
          isDir: false
          content: |
            <?php

            namespace App\Notifications;

            use Illuminate\Bus\Queueable;
            use Illuminate\Contracts\Queue\ShouldQueue;
            use Illuminate\Notifications\Messages\MailMessage;
            use Illuminate\Notifications\Notification;

            class TeamMemberInvite extends Notification
            {
                use Queueable;

                protected $url;

                public function __construct($url)
                {
                    $this->url = $url;
                }

                public function via($notifiable)
                {
                    return ['mail'];
                }

                public function toMail($notifiable)
                {
                    return $this->getMessage();
                }

                public function getMessage()
                {
                    return (new MailMessage)
                        ->subject(config('app.name') . ': invitation ')
                        ->greeting('Hi,')
                        ->line('We invite you to join our team!')
                        ->line('Please click the link bellow.')
                        ->action('Register', $this->url)
                        ->line('Thank you')
                        ->line(config('app.name') . ' Team')
                        ->salutation(' ');
                }
            }
          uuid: 92c11e03b1400b27
      uuid: 43e793ce9d82779d
    Providers:
      isDir: true
      content:
        AppServiceProvider.php:
          isDir: false
          content: |
            <?php

            namespace App\Providers;

            use Illuminate\Support\ServiceProvider;

            class AppServiceProvider extends ServiceProvider
            {
                /**
                 * Register any application services.
                 */
                public function register(): void
                {
                    //
                }

                /**
                 * Bootstrap any application services.
                 */
                public function boot(): void
                {
                    //
                }
            }
          uuid: b8c840a18cc86a1b
        AuthServiceProvider.php:
          isDir: false
          content: >
            <?php


            namespace App\Providers;


            // use Illuminate\Support\Facades\Gate;

            use Illuminate\Foundation\Support\Providers\AuthServiceProvider as
            ServiceProvider;


            class AuthServiceProvider extends ServiceProvider

            {
                /**
                 * The model to policy mappings for the application.
                 *
                 * @var array<class-string, class-string>
                 */
                protected $policies = [
                    // 'App\Models\Model' => 'App\Policies\ModelPolicy',
                ];

                /**
                 * Register any authentication / authorization services.
                 */
                public function boot(): void
                {
                    $this->registerPolicies();

                    //
                }
            }
          uuid: a223554622e23ef7
        BroadcastServiceProvider.php:
          isDir: false
          content: |
            <?php

            namespace App\Providers;

            use Illuminate\Support\Facades\Broadcast;
            use Illuminate\Support\ServiceProvider;

            class BroadcastServiceProvider extends ServiceProvider
            {
                /**
                 * Bootstrap any application services.
                 */
                public function boot(): void
                {
                    Broadcast::routes();

                    require base_path('routes/channels.php');
                }
            }
          uuid: 79de327fae53d98a
        EventServiceProvider.php:
          isDir: false
          content: >
            <?php


            namespace App\Providers;


            use Illuminate\Auth\Events\Registered;

            use Illuminate\Auth\Listeners\SendEmailVerificationNotification;

            use Illuminate\Foundation\Support\Providers\EventServiceProvider as
            ServiceProvider;

            use Illuminate\Support\Facades\Event;


            class EventServiceProvider extends ServiceProvider

            {
                /**
                 * The event to listener mappings for the application.
                 *
                 * @var array<class-string, array<int, class-string>>
                 */
                protected $listen = [
                    Registered::class => [
                        SendEmailVerificationNotification::class,
                    ],
                ];

                /**
                 * Register any events for your application.
                 */
                public function boot(): void
                {
                    //
                }

                /**
                 * Determine if events and listeners should be automatically discovered.
                 */
                public function shouldDiscoverEvents(): bool
                {
                    return false;
                }
            }
          uuid: 5f8a7ae64f5df98d
        RouteServiceProvider.php:
          isDir: false
          content: >
            <?php


            namespace App\Providers;


            use Illuminate\Cache\RateLimiting\Limit;

            use Illuminate\Foundation\Support\Providers\RouteServiceProvider as
            ServiceProvider;

            use Illuminate\Http\Request;

            use Illuminate\Support\Facades\RateLimiter;

            use Illuminate\Support\Facades\Route;


            class RouteServiceProvider extends ServiceProvider

            {
                /**
                 * The path to the "home" route for your application.
                 *
                 * This is used by Laravel authentication to redirect users after login.
                 *
                 * @var string
                 */
                public const HOME = '/home';

                /**
                 * The controller namespace for the application.
                 *
                 * When present, controller route declarations will automatically be prefixed with this namespace.
                 *
                 * @var string|null
                 */
                protected $namespace = 'App\\Http\\Controllers';

                /**
                 * Define your route model bindings, pattern filters, etc.
                 */
                public function boot(): void
                {
                    $this->configureRateLimiting();

                    $this->routes(function () {
                        Route::prefix('api')
                            ->middleware('api')
                            ->namespace($this->namespace)
                            ->group(base_path('routes/api.php'));

                        Route::middleware('web')
                            ->namespace($this->namespace)
                            ->group(base_path('routes/web.php'));
                    });
                }

                /**
                 * Configure the rate limiters for the application.
                 */
                protected function configureRateLimiting(): void
                {
                    RateLimiter::for('api', function (Request $request) {
                        return Limit::perMinute(60)->by(optional($request->user())->id ?: $request->ip());
                    });
                }
            }
          uuid: 484f72a0dccfa0e7
      uuid: 9872bb49284fabae
    Traits:
      isDir: true
      content:
        Auditable.php:
          isDir: false
          content: |
            <?php

            namespace App\Traits;

            use App\Models\AuditLog;
            use Illuminate\Database\Eloquent\Model;

            trait Auditable
            {
                public static function bootAuditable()
                {
                    static::created(function (Model $model) {
                        self::audit('audit:created', $model);
                    });

                    static::updated(function (Model $model) {
                        self::audit('audit:updated', $model, $model->getChanges());
                    });

                    static::deleted(function (Model $model) {
                        self::audit('audit:deleted', $model);
                    });
                }

                protected static function audit($description, $model, $changes = [])
                {
                    AuditLog::create([
                        'description'  => $description,
                        'subject_id'   => $model->id ?? null,
                        'subject_type' => sprintf('%s#%s', get_class($model), $model->id) ?? null,
                        'user_id'      => auth()->id() ?? null,
                        'properties'   => $changes ?: $model,
                        'host'         => request()->ip() ?? null,
                    ]);
                }
            }
          uuid: 5236172d270142d8
        MultiTenantModelTrait.php:
          isDir: false
          content: |
            <?php

            namespace App\Traits;

            use Illuminate\Database\Eloquent\Builder;
            use Illuminate\Database\Eloquent\Model;

            trait MultiTenantModelTrait
            {
                public static function bootMultiTenantModelTrait()
                {
                    if (! app()->runningInConsole() && auth()->check()) {
                        $isAdmin = auth()->user()->roles->contains(1);
                        static::creating(function ($model) use ($isAdmin) {
                            // Prevent admin from setting his own id - admin entries are global.
                            // If required, remove the surrounding IF condition and admins will act as users
                            if (! $isAdmin) {
                                $model->team_id = auth()->user()->team_id;
                            }
                        });
                        if (! $isAdmin) {
                            static::addGlobalScope('team_id', function (Builder $builder) {
                                $field = sprintf('%s.%s', $builder->getQuery()->from, 'team_id');

                                $builder->where($field, auth()->user()->team_id)->orWhereNull($field);
                            });
                        }
                    }
                }
            }
          uuid: ed66574f470a3226
      uuid: cf091e6ec5dc3ef4
  uuid: 091d840bb34726f6
config:
  isDir: true
  content:
    app.php:
      isDir: false
      content: |
        <?php

        use Illuminate\Support\Facades\Facade;

        return [

            /*
            |--------------------------------------------------------------------------
            | Application Name
            |--------------------------------------------------------------------------
            |
            | This value is the name of your application. This value is used when the
            | framework needs to place the application's name in a notification or
            | any other location as required by the application or its packages.
            |
            */

            'name' => env('APP_NAME', 'Laravel'),

            /*
            |--------------------------------------------------------------------------
            | Application Environment
            |--------------------------------------------------------------------------
            |
            | This value determines the "environment" your application is currently
            | running in. This may determine how you prefer to configure various
            | services the application utilizes. Set this in your ".env" file.
            |
            */

            'env' => env('APP_ENV', 'production'),

            /*
            |--------------------------------------------------------------------------
            | Application Debug Mode
            |--------------------------------------------------------------------------
            |
            | When your application is in debug mode, detailed error messages with
            | stack traces will be shown on every error that occurs within your
            | application. If disabled, a simple generic error page is shown.
            |
            */

            'debug' => (bool) env('APP_DEBUG', false),

            /*
            |--------------------------------------------------------------------------
            | Application URL
            |--------------------------------------------------------------------------
            |
            | This URL is used by the console to properly generate URLs when using
            | the Artisan command line tool. You should set this to the root of
            | your application so that it is used when running Artisan tasks.
            |
            */

            'url' => env('APP_URL', 'http://localhost'),

            'asset_url' => env('ASSET_URL', '/'),

            /*
            |--------------------------------------------------------------------------
            | Application Timezone
            |--------------------------------------------------------------------------
            |
            | Here you may specify the default timezone for your application, which
            | will be used by the PHP date and date-time functions. We have gone
            | ahead and set this to a sensible default for you out of the box.
            |
            */

            'timezone' => 'UTC',

            /*
            |--------------------------------------------------------------------------
            | Application Locale Configuration
            |--------------------------------------------------------------------------
            |
            | The application locale determines the default locale that will be used
            | by the translation service provider. You are free to set this value
            | to any of the locales which will be supported by the application.
            |
            */

            'locale' => 'en',

            /*
            |--------------------------------------------------------------------------
            | Application Fallback Locale
            |--------------------------------------------------------------------------
            |
            | The fallback locale determines the locale to use when the current one
            | is not available. You may change the value to correspond to any of
            | the language folders that are provided through your application.
            |
            */

            'fallback_locale' => 'en',

            /*
            |--------------------------------------------------------------------------
            | Faker Locale
            |--------------------------------------------------------------------------
            |
            | This locale will be used by the Faker PHP library when generating fake
            | data for your database seeds. For example, this will be used to get
            | localized telephone numbers, street address information and more.
            |
            */

            'faker_locale' => 'en_US',

            /*
            |--------------------------------------------------------------------------
            | Encryption Key
            |--------------------------------------------------------------------------
            |
            | This key is used by the Illuminate encrypter service and should be set
            | to a random, 32 character string, otherwise these encrypted strings
            | will not be safe. Please do this before deploying an application!
            |
            */

            'key' => env('APP_KEY'),

            'cipher' => 'AES-256-CBC',

            /*
            |--------------------------------------------------------------------------
            | Maintenance Mode Driver
            |--------------------------------------------------------------------------
            |
            | These configuration options determine the driver used to determine and
            | manage Laravel's "maintenance mode" status. The "cache" driver will
            | allow maintenance mode to be controlled across multiple machines.
            |
            | Supported drivers: "file", "cache"
            |
            */

            'maintenance' => [
                'driver' => 'file',
                // 'store'  => 'redis',
            ],

            /*
            |--------------------------------------------------------------------------
            | Autoloaded Service Providers
            |--------------------------------------------------------------------------
            |
            | The service providers listed here will be automatically loaded on the
            | request to your application. Feel free to add your own services to
            | this array to grant expanded functionality to your applications.
            |
            */

            'providers' => [

                /*
                 * Laravel Framework Service Providers...
                 */
                Illuminate\Auth\AuthServiceProvider::class,
                Illuminate\Broadcasting\BroadcastServiceProvider::class,
                Illuminate\Bus\BusServiceProvider::class,
                Illuminate\Cache\CacheServiceProvider::class,
                Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,
                Illuminate\Cookie\CookieServiceProvider::class,
                Illuminate\Database\DatabaseServiceProvider::class,
                Illuminate\Encryption\EncryptionServiceProvider::class,
                Illuminate\Filesystem\FilesystemServiceProvider::class,
                Illuminate\Foundation\Providers\FoundationServiceProvider::class,
                Illuminate\Hashing\HashServiceProvider::class,
                Illuminate\Mail\MailServiceProvider::class,
                Illuminate\Notifications\NotificationServiceProvider::class,
                Illuminate\Pagination\PaginationServiceProvider::class,
                Illuminate\Pipeline\PipelineServiceProvider::class,
                Illuminate\Queue\QueueServiceProvider::class,
                Illuminate\Redis\RedisServiceProvider::class,
                Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,
                Illuminate\Session\SessionServiceProvider::class,
                Illuminate\Translation\TranslationServiceProvider::class,
                Illuminate\Validation\ValidationServiceProvider::class,
                Illuminate\View\ViewServiceProvider::class,

                /*
                 * Package Service Providers...
                 */

                /*
                 * Application Service Providers...
                 */
                App\Providers\AppServiceProvider::class,
                App\Providers\AuthServiceProvider::class,
                // App\Providers\BroadcastServiceProvider::class,
                App\Providers\EventServiceProvider::class,
                App\Providers\RouteServiceProvider::class,

            ],

            /*
            |--------------------------------------------------------------------------
            | Class Aliases
            |--------------------------------------------------------------------------
            |
            | This array of class aliases will be registered when this application
            | is started. However, feel free to register as many as you wish as
            | the aliases are "lazy" loaded so they don't hinder performance.
            |
            */

            'aliases' => Facade::defaultAliases()->merge([
                // 'ExampleClass' => App\Example\ExampleClass::class,
            ])->toArray(),

        ];
      uuid: dbdccaece90ad00a
    auth.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Authentication Defaults
            |--------------------------------------------------------------------------
            |
            | This option controls the default authentication "guard" and password
            | reset options for your application. You may change these defaults
            | as required, but they're a perfect start for most applications.
            |
            */

            'defaults' => [
                'guard'     => 'web',
                'passwords' => 'users',
            ],

            /*
            |--------------------------------------------------------------------------
            | Authentication Guards
            |--------------------------------------------------------------------------
            |
            | Next, you may define every authentication guard for your application.
            | Of course, a great default configuration has been defined for you
            | here which uses session storage and the Eloquent user provider.
            |
            | All authentication drivers have a user provider. This defines how the
            | users are actually retrieved out of your database or other storage
            | mechanisms used by this application to persist your user's data.
            |
            | Supported: "session", "token"
            |
            */

            'guards' => [
                'web' => [
                    'driver'   => 'session',
                    'provider' => 'users',
                ],

                'api' => [
                    'driver'   => 'token',
                    'provider' => 'users',
                    'hash'     => false,
                ],
            ],

            /*
            |--------------------------------------------------------------------------
            | User Providers
            |--------------------------------------------------------------------------
            |
            | All authentication drivers have a user provider. This defines how the
            | users are actually retrieved out of your database or other storage
            | mechanisms used by this application to persist your user's data.
            |
            | If you have multiple user tables or models you may configure multiple
            | sources which represent each model / table. These sources may then
            | be assigned to any extra authentication guards you have defined.
            |
            | Supported: "database", "eloquent"
            |
            */

            'providers' => [
                'users' => [
                    'driver' => 'eloquent',
                    'model'  => App\Models\User::class,
                ],

                // 'users' => [
                //     'driver' => 'database',
                //     'table' => 'users',
                // ],
            ],

            /*
            |--------------------------------------------------------------------------
            | Resetting Passwords
            |--------------------------------------------------------------------------
            |
            | You may specify multiple password reset configurations if you have more
            | than one user table or model in the application and you want to have
            | separate password reset settings based on the specific user types.
            |
            | The expire time is the number of minutes that the reset token should be
            | considered valid. This security feature keeps tokens short-lived so
            | they have less time to be guessed. You may change this as needed.
            |
            */

            'passwords' => [
                'users' => [
                    'provider' => 'users',
                    'table'    => 'password_resets',
                    'expire'   => 60,
                ],
            ],

        ];
      uuid: 1847b6a2edbafe2d
    broadcasting.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Broadcaster
            |--------------------------------------------------------------------------
            |
            | This option controls the default broadcaster that will be used by the
            | framework when an event needs to be broadcast. You may set this to
            | any of the connections defined in the "connections" array below.
            |
            | Supported: "pusher", "ably", "redis", "log", "null"
            |
            */

            'default' => env('BROADCAST_DRIVER', 'null'),

            /*
            |--------------------------------------------------------------------------
            | Broadcast Connections
            |--------------------------------------------------------------------------
            |
            | Here you may define all of the broadcast connections that will be used
            | to broadcast events to other systems or over websockets. Samples of
            | each available type of connection are provided inside this array.
            |
            */

            'connections' => [

                'pusher' => [
                    'driver' => 'pusher',
                    'key' => env('PUSHER_APP_KEY'),
                    'secret' => env('PUSHER_APP_SECRET'),
                    'app_id' => env('PUSHER_APP_ID'),
                    'options' => [
                        'host' => env('PUSHER_HOST') ?: 'api-'.env('PUSHER_APP_CLUSTER', 'mt1').'.pusher.com',
                        'port' => env('PUSHER_PORT', 443),
                        'scheme' => env('PUSHER_SCHEME', 'https'),
                        'encrypted' => true,
                        'useTLS' => env('PUSHER_SCHEME', 'https') === 'https',
                    ],
                    'client_options' => [
                        // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html
                    ],
                ],

                'ably' => [
                    'driver' => 'ably',
                    'key' => env('ABLY_KEY'),
                ],

                'redis' => [
                    'driver' => 'redis',
                    'connection' => 'default',
                ],

                'log' => [
                    'driver' => 'log',
                ],

                'null' => [
                    'driver' => 'null',
                ],

            ],

        ];
      uuid: c417ff2e708c8ea9
    cache.php:
      isDir: false
      content: |
        <?php

        use Illuminate\Support\Str;

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Cache Store
            |--------------------------------------------------------------------------
            |
            | This option controls the default cache connection that gets used while
            | using this caching library. This connection is used when another is
            | not explicitly specified when executing a given caching function.
            |
            */

            'default' => env('CACHE_DRIVER', 'file'),

            /*
            |--------------------------------------------------------------------------
            | Cache Stores
            |--------------------------------------------------------------------------
            |
            | Here you may define all of the cache "stores" for your application as
            | well as their drivers. You may even define multiple stores for the
            | same cache driver to group types of items stored in your caches.
            |
            | Supported drivers: "apc", "array", "database", "file",
            |         "memcached", "redis", "dynamodb", "octane", "null"
            |
            */

            'stores' => [

                'apc' => [
                    'driver' => 'apc',
                ],

                'array' => [
                    'driver' => 'array',
                    'serialize' => false,
                ],

                'database' => [
                    'driver' => 'database',
                    'table' => 'cache',
                    'connection' => null,
                    'lock_connection' => null,
                ],

                'file' => [
                    'driver' => 'file',
                    'path' => storage_path('framework/cache/data'),
                ],

                'memcached' => [
                    'driver' => 'memcached',
                    'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
                    'sasl' => [
                        env('MEMCACHED_USERNAME'),
                        env('MEMCACHED_PASSWORD'),
                    ],
                    'options' => [
                        // Memcached::OPT_CONNECT_TIMEOUT => 2000,
                    ],
                    'servers' => [
                        [
                            'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                            'port' => env('MEMCACHED_PORT', 11211),
                            'weight' => 100,
                        ],
                    ],
                ],

                'redis' => [
                    'driver' => 'redis',
                    'connection' => 'cache',
                    'lock_connection' => 'default',
                ],

                'dynamodb' => [
                    'driver' => 'dynamodb',
                    'key' => env('AWS_ACCESS_KEY_ID'),
                    'secret' => env('AWS_SECRET_ACCESS_KEY'),
                    'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
                    'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
                    'endpoint' => env('DYNAMODB_ENDPOINT'),
                ],

                'octane' => [
                    'driver' => 'octane',
                ],

            ],

            /*
            |--------------------------------------------------------------------------
            | Cache Key Prefix
            |--------------------------------------------------------------------------
            |
            | When utilizing the APC, database, memcached, Redis, or DynamoDB cache
            | stores there might be other applications using the same cache. For
            | that reason, you may prefix every cache key to avoid collisions.
            |
            */

            'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

        ];
      uuid: 513b04e33033bb66
    cors.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Cross-Origin Resource Sharing (CORS) Configuration
            |--------------------------------------------------------------------------
            |
            | Here you may configure your settings for cross-origin resource sharing
            | or "CORS". This determines what cross-origin operations may execute
            | in web browsers. You are free to adjust these settings as needed.
            |
            | To learn more: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
            |
            */

            'paths' => ['api/*', 'sanctum/csrf-cookie'],

            'allowed_methods' => ['*'],

            'allowed_origins' => ['*'],

            'allowed_origins_patterns' => [],

            'allowed_headers' => ['*'],

            'exposed_headers' => [],

            'max_age' => 0,

            'supports_credentials' => false,

        ];
      uuid: 77855da1e31c9f2d
    database.php:
      isDir: false
      content: |
        <?php

        use Illuminate\Support\Str;

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Database Connection Name
            |--------------------------------------------------------------------------
            |
            | Here you may specify which of the database connections below you wish
            | to use as your default connection for all database work. Of course
            | you may use many connections at once using the Database library.
            |
            */

            'default' => env('DB_CONNECTION', 'mysql'),

            /*
            |--------------------------------------------------------------------------
            | Database Connections
            |--------------------------------------------------------------------------
            |
            | Here are each of the database connections setup for your application.
            | Of course, examples of configuring each database platform that is
            | supported by Laravel is shown below to make development simple.
            |
            |
            | All database work in Laravel is done through the PHP PDO facilities
            | so make sure you have the driver for your particular database of
            | choice installed on your machine before you begin development.
            |
            */

            'connections' => [

                'sqlite' => [
                    'driver' => 'sqlite',
                    'url' => env('DATABASE_URL'),
                    'database' => env('DB_DATABASE', database_path('database.sqlite')),
                    'prefix' => '',
                    'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
                ],

                'mysql' => [
                    'driver' => 'mysql',
                    'url' => env('DATABASE_URL'),
                    'host' => env('DB_HOST', '127.0.0.1'),
                    'port' => env('DB_PORT', '3306'),
                    'database' => env('DB_DATABASE', 'forge'),
                    'username' => env('DB_USERNAME', 'forge'),
                    'password' => env('DB_PASSWORD', ''),
                    'unix_socket' => env('DB_SOCKET', ''),
                    'charset' => 'utf8mb4',
                    'collation' => 'utf8mb4_unicode_ci',
                    'prefix' => '',
                    'prefix_indexes' => true,
                    'strict' => true,
                    'engine' => null,
                    'options' => extension_loaded('pdo_mysql') ? array_filter([
                        PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
                    ]) : [],
                ],

                'pgsql' => [
                    'driver' => 'pgsql',
                    'url' => env('DATABASE_URL'),
                    'host' => env('DB_HOST', '127.0.0.1'),
                    'port' => env('DB_PORT', '5432'),
                    'database' => env('DB_DATABASE', 'forge'),
                    'username' => env('DB_USERNAME', 'forge'),
                    'password' => env('DB_PASSWORD', ''),
                    'charset' => 'utf8',
                    'prefix' => '',
                    'prefix_indexes' => true,
                    'search_path' => 'public',
                    'sslmode' => 'prefer',
                ],

                'sqlsrv' => [
                    'driver' => 'sqlsrv',
                    'url' => env('DATABASE_URL'),
                    'host' => env('DB_HOST', 'localhost'),
                    'port' => env('DB_PORT', '1433'),
                    'database' => env('DB_DATABASE', 'forge'),
                    'username' => env('DB_USERNAME', 'forge'),
                    'password' => env('DB_PASSWORD', ''),
                    'charset' => 'utf8',
                    'prefix' => '',
                    'prefix_indexes' => true,
                    // 'encrypt' => env('DB_ENCRYPT', 'yes'),
                    // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
                ],

            ],

            /*
            |--------------------------------------------------------------------------
            | Migration Repository Table
            |--------------------------------------------------------------------------
            |
            | This table keeps track of all the migrations that have already run for
            | your application. Using this information, we can determine which of
            | the migrations on disk haven't actually been run in the database.
            |
            */

            'migrations' => 'migrations',

            /*
            |--------------------------------------------------------------------------
            | Redis Databases
            |--------------------------------------------------------------------------
            |
            | Redis is an open source, fast, and advanced key-value store that also
            | provides a richer body of commands than a typical key-value system
            | such as APC or Memcached. Laravel makes it easy to dig right in.
            |
            */

            'redis' => [

                'client' => env('REDIS_CLIENT', 'phpredis'),

                'options' => [
                    'cluster' => env('REDIS_CLUSTER', 'redis'),
                    'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
                ],

                'default' => [
                    'url' => env('REDIS_URL'),
                    'host' => env('REDIS_HOST', '127.0.0.1'),
                    'username' => env('REDIS_USERNAME'),
                    'password' => env('REDIS_PASSWORD'),
                    'port' => env('REDIS_PORT', '6379'),
                    'database' => env('REDIS_DB', '0'),
                ],

                'cache' => [
                    'url' => env('REDIS_URL'),
                    'host' => env('REDIS_HOST', '127.0.0.1'),
                    'username' => env('REDIS_USERNAME'),
                    'password' => env('REDIS_PASSWORD'),
                    'port' => env('REDIS_PORT', '6379'),
                    'database' => env('REDIS_CACHE_DB', '1'),
                ],

            ],

        ];
      uuid: e9512f4871d73d7a
    filesystems.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Filesystem Disk
            |--------------------------------------------------------------------------
            |
            | Here you may specify the default filesystem disk that should be used
            | by the framework. The "local" disk, as well as a variety of cloud
            | based disks are available to your application. Just store away!
            |
            */

            'default' => env('FILESYSTEM_DISK', 'local'),

            /*
            |--------------------------------------------------------------------------
            | Filesystem Disks
            |--------------------------------------------------------------------------
            |
            | Here you may configure as many filesystem "disks" as you wish, and you
            | may even configure multiple disks of the same driver. Defaults have
            | been set up for each driver as an example of the required values.
            |
            | Supported Drivers: "local", "ftp", "sftp", "s3"
            |
            */

            'disks' => [

                'local' => [
                    'driver' => 'local',
                    'root' => storage_path('app'),
                    'throw' => false,
                ],

                'public' => [
                    'driver' => 'local',
                    'root' => storage_path('app/public'),
                    'url' => env('APP_URL').'/storage',
                    'visibility' => 'public',
                    'throw' => false,
                ],

                's3' => [
                    'driver' => 's3',
                    'key' => env('AWS_ACCESS_KEY_ID'),
                    'secret' => env('AWS_SECRET_ACCESS_KEY'),
                    'region' => env('AWS_DEFAULT_REGION'),
                    'bucket' => env('AWS_BUCKET'),
                    'url' => env('AWS_URL'),
                    'endpoint' => env('AWS_ENDPOINT'),
                    'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
                    'throw' => false,
                ],

            ],

            /*
            |--------------------------------------------------------------------------
            | Symbolic Links
            |--------------------------------------------------------------------------
            |
            | Here you may configure the symbolic links that will be created when the
            | `storage:link` Artisan command is executed. The array keys should be
            | the locations of the links and the values should be their targets.
            |
            */

            'links' => [
                public_path('storage') => storage_path('app/public'),
            ],

        ];
      uuid: 57ec2dfa6b5d2a16
    hashing.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Hash Driver
            |--------------------------------------------------------------------------
            |
            | This option controls the default hash driver that will be used to hash
            | passwords for your application. By default, the bcrypt algorithm is
            | used; however, you remain free to modify this option if you wish.
            |
            | Supported: "bcrypt", "argon", "argon2id"
            |
            */

            'driver' => 'bcrypt',

            /*
            |--------------------------------------------------------------------------
            | Bcrypt Options
            |--------------------------------------------------------------------------
            |
            | Here you may specify the configuration options that should be used when
            | passwords are hashed using the Bcrypt algorithm. This will allow you
            | to control the amount of time it takes to hash the given password.
            |
            */

            'bcrypt' => [
                'rounds' => env('BCRYPT_ROUNDS', 10),
            ],

            /*
            |--------------------------------------------------------------------------
            | Argon Options
            |--------------------------------------------------------------------------
            |
            | Here you may specify the configuration options that should be used when
            | passwords are hashed using the Argon algorithm. These will allow you
            | to control the amount of time it takes to hash the given password.
            |
            */

            'argon' => [
                'memory' => 65536,
                'threads' => 1,
                'time' => 4,
            ],

        ];
      uuid: 46e2b48fbf21dd82
    logging.php:
      isDir: false
      content: |
        <?php

        use Monolog\Handler\NullHandler;
        use Monolog\Handler\StreamHandler;
        use Monolog\Handler\SyslogUdpHandler;

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Log Channel
            |--------------------------------------------------------------------------
            |
            | This option defines the default log channel that gets used when writing
            | messages to the logs. The name specified in this option should match
            | one of the channels defined in the "channels" configuration array.
            |
            */

            'default' => env('LOG_CHANNEL', 'stack'),

            /*
            |--------------------------------------------------------------------------
            | Deprecations Log Channel
            |--------------------------------------------------------------------------
            |
            | This option controls the log channel that should be used to log warnings
            | regarding deprecated PHP and library features. This allows you to get
            | your application ready for upcoming major versions of dependencies.
            |
            */

            'deprecations' => [
                'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
                'trace' => false,
            ],

            /*
            |--------------------------------------------------------------------------
            | Log Channels
            |--------------------------------------------------------------------------
            |
            | Here you may configure the log channels for your application. Out of
            | the box, Laravel uses the Monolog PHP logging library. This gives
            | you a variety of powerful log handlers / formatters to utilize.
            |
            | Available Drivers: "single", "daily", "slack", "syslog",
            |                    "errorlog", "monolog",
            |                    "custom", "stack"
            |
            */

            'channels' => [
                'stack' => [
                    'driver' => 'stack',
                    'channels' => ['single'],
                    'ignore_exceptions' => false,
                ],

                'single' => [
                    'driver' => 'single',
                    'path' => storage_path('logs/laravel.log'),
                    'level' => env('LOG_LEVEL', 'debug'),
                ],

                'daily' => [
                    'driver' => 'daily',
                    'path' => storage_path('logs/laravel.log'),
                    'level' => env('LOG_LEVEL', 'debug'),
                    'days' => 14,
                ],

                'slack' => [
                    'driver' => 'slack',
                    'url' => env('LOG_SLACK_WEBHOOK_URL'),
                    'username' => 'Laravel Log',
                    'emoji' => ':boom:',
                    'level' => env('LOG_LEVEL', 'critical'),
                ],

                'papertrail' => [
                    'driver' => 'monolog',
                    'level' => env('LOG_LEVEL', 'debug'),
                    'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
                    'handler_with' => [
                        'host' => env('PAPERTRAIL_URL'),
                        'port' => env('PAPERTRAIL_PORT'),
                        'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
                    ],
                ],

                'stderr' => [
                    'driver' => 'monolog',
                    'level' => env('LOG_LEVEL', 'debug'),
                    'handler' => StreamHandler::class,
                    'formatter' => env('LOG_STDERR_FORMATTER'),
                    'with' => [
                        'stream' => 'php://stderr',
                    ],
                ],

                'syslog' => [
                    'driver' => 'syslog',
                    'level' => env('LOG_LEVEL', 'debug'),
                ],

                'errorlog' => [
                    'driver' => 'errorlog',
                    'level' => env('LOG_LEVEL', 'debug'),
                ],

                'null' => [
                    'driver' => 'monolog',
                    'handler' => NullHandler::class,
                ],

                'emergency' => [
                    'path' => storage_path('logs/laravel.log'),
                ],
            ],

        ];
      uuid: 3ffddaf28fcfa1a6
    mail.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Mailer
            |--------------------------------------------------------------------------
            |
            | This option controls the default mailer that is used to send any email
            | messages sent by your application. Alternative mailers may be setup
            | and used as needed; however, this mailer will be used by default.
            |
            */

            'default' => env('MAIL_MAILER', 'smtp'),

            /*
            |--------------------------------------------------------------------------
            | Mailer Configurations
            |--------------------------------------------------------------------------
            |
            | Here you may configure all of the mailers used by your application plus
            | their respective settings. Several examples have been configured for
            | you and you are free to add your own as your application requires.
            |
            | Laravel supports a variety of mail "transport" drivers to be used while
            | sending an e-mail. You will specify which one you are using for your
            | mailers below. You are free to add additional mailers as required.
            |
            | Supported: "smtp", "sendmail", "mailgun", "ses",
            |            "postmark", "log", "array", "failover"
            |
            */

            'mailers' => [
                'smtp' => [
                    'transport' => 'smtp',
                    'host' => env('MAIL_HOST', 'smtp.mailgun.org'),
                    'port' => env('MAIL_PORT', 587),
                    'encryption' => env('MAIL_ENCRYPTION', 'tls'),
                    'username' => env('MAIL_USERNAME'),
                    'password' => env('MAIL_PASSWORD'),
                    'timeout' => null,
                    'local_domain' => env('MAIL_EHLO_DOMAIN'),
                ],

                'ses' => [
                    'transport' => 'ses',
                ],

                'mailgun' => [
                    'transport' => 'mailgun',
                    // 'client' => [
                    //     'timeout' => 5,
                    // ],
                ],

                'postmark' => [
                    'transport' => 'postmark',
                    // 'client' => [
                    //     'timeout' => 5,
                    // ],
                ],

                'sendmail' => [
                    'transport' => 'sendmail',
                    'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
                ],

                'log' => [
                    'transport' => 'log',
                    'channel' => env('MAIL_LOG_CHANNEL'),
                ],

                'array' => [
                    'transport' => 'array',
                ],

                'failover' => [
                    'transport' => 'failover',
                    'mailers' => [
                        'smtp',
                        'log',
                    ],
                ],
            ],

            /*
            |--------------------------------------------------------------------------
            | Global "From" Address
            |--------------------------------------------------------------------------
            |
            | You may wish for all e-mails sent by your application to be sent from
            | the same address. Here, you may specify a name and address that is
            | used globally for all e-mails that are sent by your application.
            |
            */

            'from' => [
                'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
                'name' => env('MAIL_FROM_NAME', 'Example'),
            ],

            /*
            |--------------------------------------------------------------------------
            | Markdown Mail Settings
            |--------------------------------------------------------------------------
            |
            | If you are using Markdown based email rendering, you may configure your
            | theme and component paths here, allowing you to customize the design
            | of the emails. Or, you may simply stick with the Laravel defaults!
            |
            */

            'markdown' => [
                'theme' => 'default',

                'paths' => [
                    resource_path('views/vendor/mail'),
                ],
            ],

        ];
      uuid: 79caa1b9ae0a1ede
    panel.php:
      isDir: false
      content: |
        <?php

        return [
            'date_format'         => 'Y-m-d',
            'time_format'         => 'H:i:s',
            'primary_language'    => 'en',
            'available_languages' => [
                'en' => 'English',
                'id' => 'Indonesian',
            ],
            'registration_default_role' => '2',

        ];
      uuid: 57d7d5429372d313
    queue.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Queue Connection Name
            |--------------------------------------------------------------------------
            |
            | Laravel's queue API supports an assortment of back-ends via a single
            | API, giving you convenient access to each back-end using the same
            | syntax for every one. Here you may define a default connection.
            |
            */

            'default' => env('QUEUE_CONNECTION', 'sync'),

            /*
            |--------------------------------------------------------------------------
            | Queue Connections
            |--------------------------------------------------------------------------
            |
            | Here you may configure the connection information for each server that
            | is used by your application. A default configuration has been added
            | for each back-end shipped with Laravel. You are free to add more.
            |
            | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
            |
            */

            'connections' => [

                'sync' => [
                    'driver' => 'sync',
                ],

                'database' => [
                    'driver' => 'database',
                    'table' => 'jobs',
                    'queue' => 'default',
                    'retry_after' => 90,
                    'after_commit' => false,
                ],

                'beanstalkd' => [
                    'driver' => 'beanstalkd',
                    'host' => 'localhost',
                    'queue' => 'default',
                    'retry_after' => 90,
                    'block_for' => 0,
                    'after_commit' => false,
                ],

                'sqs' => [
                    'driver' => 'sqs',
                    'key' => env('AWS_ACCESS_KEY_ID'),
                    'secret' => env('AWS_SECRET_ACCESS_KEY'),
                    'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
                    'queue' => env('SQS_QUEUE', 'default'),
                    'suffix' => env('SQS_SUFFIX'),
                    'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
                    'after_commit' => false,
                ],

                'redis' => [
                    'driver' => 'redis',
                    'connection' => 'default',
                    'queue' => env('REDIS_QUEUE', 'default'),
                    'retry_after' => 90,
                    'block_for' => null,
                    'after_commit' => false,
                ],

            ],

            /*
            |--------------------------------------------------------------------------
            | Failed Queue Jobs
            |--------------------------------------------------------------------------
            |
            | These options configure the behavior of failed queue job logging so you
            | can control which database and table are used to store the jobs that
            | have failed. You may change them to any database / table you wish.
            |
            */

            'failed' => [
                'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
                'database' => env('DB_CONNECTION', 'mysql'),
                'table' => 'failed_jobs',
            ],

        ];
      uuid: 7f7dbbe0e8692704
    sanctum.php:
      isDir: false
      content: |
        <?php

        use Laravel\Sanctum\Sanctum;

        return [

            /*
            |--------------------------------------------------------------------------
            | Stateful Domains
            |--------------------------------------------------------------------------
            |
            | Requests from the following domains / hosts will receive stateful API
            | authentication cookies. Typically, these should include your local
            | and production domains which access your API via a frontend SPA.
            |
            */

            'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
                '%s%s',
                'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
                Sanctum::currentApplicationUrlWithPort()
            ))),

            /*
            |--------------------------------------------------------------------------
            | Sanctum Guards
            |--------------------------------------------------------------------------
            |
            | This array contains the authentication guards that will be checked when
            | Sanctum is trying to authenticate a request. If none of these guards
            | are able to authenticate the request, Sanctum will use the bearer
            | token that's present on an incoming request for authentication.
            |
            */

            'guard' => ['web'],

            /*
            |--------------------------------------------------------------------------
            | Expiration Minutes
            |--------------------------------------------------------------------------
            |
            | This value controls the number of minutes until an issued token will be
            | considered expired. If this value is null, personal access tokens do
            | not expire. This won't tweak the lifetime of first-party sessions.
            |
            */

            'expiration' => null,

            /*
            |--------------------------------------------------------------------------
            | Sanctum Middleware
            |--------------------------------------------------------------------------
            |
            | When authenticating your first-party SPA with Sanctum you may need to
            | customize some of the middleware Sanctum uses while processing the
            | request. You may change the middleware listed below as required.
            |
            */

            'middleware' => [
                'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,
                'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,
            ],

        ];
      uuid: f8659b45c6ea36bc
    services.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | Third Party Services
            |--------------------------------------------------------------------------
            |
            | This file is for storing the credentials for third party services such
            | as Mailgun, Postmark, AWS and more. This file provides the de facto
            | location for this type of information, allowing packages to have
            | a conventional file to locate the various service credentials.
            |
            */

            'mailgun' => [
                'domain' => env('MAILGUN_DOMAIN'),
                'secret' => env('MAILGUN_SECRET'),
                'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),
                'scheme' => 'https',
            ],

            'postmark' => [
                'token' => env('POSTMARK_TOKEN'),
            ],

            'ses' => [
                'key' => env('AWS_ACCESS_KEY_ID'),
                'secret' => env('AWS_SECRET_ACCESS_KEY'),
                'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            ],

        ];
      uuid: f2b5e0f9b42b857f
    session.php:
      isDir: false
      content: |
        <?php

        use Illuminate\Support\Str;

        return [

            /*
            |--------------------------------------------------------------------------
            | Default Session Driver
            |--------------------------------------------------------------------------
            |
            | This option controls the default session "driver" that will be used on
            | requests. By default, we will use the lightweight native driver but
            | you may specify any of the other wonderful drivers provided here.
            |
            | Supported: "file", "cookie", "database", "apc",
            |            "memcached", "redis", "dynamodb", "array"
            |
            */

            'driver' => env('SESSION_DRIVER', 'file'),

            /*
            |--------------------------------------------------------------------------
            | Session Lifetime
            |--------------------------------------------------------------------------
            |
            | Here you may specify the number of minutes that you wish the session
            | to be allowed to remain idle before it expires. If you want them
            | to immediately expire on the browser closing, set that option.
            |
            */

            'lifetime' => env('SESSION_LIFETIME', 120),

            'expire_on_close' => false,

            /*
            |--------------------------------------------------------------------------
            | Session Encryption
            |--------------------------------------------------------------------------
            |
            | This option allows you to easily specify that all of your session data
            | should be encrypted before it is stored. All encryption will be run
            | automatically by Laravel and you can use the Session like normal.
            |
            */

            'encrypt' => false,

            /*
            |--------------------------------------------------------------------------
            | Session File Location
            |--------------------------------------------------------------------------
            |
            | When using the native session driver, we need a location where session
            | files may be stored. A default has been set for you but a different
            | location may be specified. This is only needed for file sessions.
            |
            */

            'files' => storage_path('framework/sessions'),

            /*
            |--------------------------------------------------------------------------
            | Session Database Connection
            |--------------------------------------------------------------------------
            |
            | When using the "database" or "redis" session drivers, you may specify a
            | connection that should be used to manage these sessions. This should
            | correspond to a connection in your database configuration options.
            |
            */

            'connection' => env('SESSION_CONNECTION'),

            /*
            |--------------------------------------------------------------------------
            | Session Database Table
            |--------------------------------------------------------------------------
            |
            | When using the "database" session driver, you may specify the table we
            | should use to manage the sessions. Of course, a sensible default is
            | provided for you; however, you are free to change this as needed.
            |
            */

            'table' => 'sessions',

            /*
            |--------------------------------------------------------------------------
            | Session Cache Store
            |--------------------------------------------------------------------------
            |
            | While using one of the framework's cache driven session backends you may
            | list a cache store that should be used for these sessions. This value
            | must match with one of the application's configured cache "stores".
            |
            | Affects: "apc", "dynamodb", "memcached", "redis"
            |
            */

            'store' => env('SESSION_STORE'),

            /*
            |--------------------------------------------------------------------------
            | Session Sweeping Lottery
            |--------------------------------------------------------------------------
            |
            | Some session drivers must manually sweep their storage location to get
            | rid of old sessions from storage. Here are the chances that it will
            | happen on a given request. By default, the odds are 2 out of 100.
            |
            */

            'lottery' => [2, 100],

            /*
            |--------------------------------------------------------------------------
            | Session Cookie Name
            |--------------------------------------------------------------------------
            |
            | Here you may change the name of the cookie used to identify a session
            | instance by ID. The name specified here will get used every time a
            | new session cookie is created by the framework for every driver.
            |
            */

            'cookie' => env(
                'SESSION_COOKIE',
                Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
            ),

            /*
            |--------------------------------------------------------------------------
            | Session Cookie Path
            |--------------------------------------------------------------------------
            |
            | The session cookie path determines the path for which the cookie will
            | be regarded as available. Typically, this will be the root path of
            | your application but you are free to change this when necessary.
            |
            */

            'path' => '/',

            /*
            |--------------------------------------------------------------------------
            | Session Cookie Domain
            |--------------------------------------------------------------------------
            |
            | Here you may change the domain of the cookie used to identify a session
            | in your application. This will determine which domains the cookie is
            | available to in your application. A sensible default has been set.
            |
            */

            'domain' => env('SESSION_DOMAIN'),

            /*
            |--------------------------------------------------------------------------
            | HTTPS Only Cookies
            |--------------------------------------------------------------------------
            |
            | By setting this option to true, session cookies will only be sent back
            | to the server if the browser has a HTTPS connection. This will keep
            | the cookie from being sent to you when it can't be done securely.
            |
            */

            'secure' => env('SESSION_SECURE_COOKIE'),

            /*
            |--------------------------------------------------------------------------
            | HTTP Access Only
            |--------------------------------------------------------------------------
            |
            | Setting this value to true will prevent JavaScript from accessing the
            | value of the cookie and the cookie will only be accessible through
            | the HTTP protocol. You are free to modify this option if needed.
            |
            */

            'http_only' => true,

            /*
            |--------------------------------------------------------------------------
            | Same-Site Cookies
            |--------------------------------------------------------------------------
            |
            | This option determines how your cookies behave when cross-site requests
            | take place, and can be used to mitigate CSRF attacks. By default, we
            | will set this value to "lax" since this is a secure default value.
            |
            | Supported: "lax", "strict", "none", null
            |
            */

            'same_site' => 'lax',

        ];
      uuid: d0901f3d38f697df
    view.php:
      isDir: false
      content: |
        <?php

        return [

            /*
            |--------------------------------------------------------------------------
            | View Storage Paths
            |--------------------------------------------------------------------------
            |
            | Most templating systems load templates from disk. Here you may specify
            | an array of paths that should be checked for your views. Of course
            | the usual Laravel view path has already been registered for you.
            |
            */

            'paths' => [
                resource_path('views'),
            ],

            /*
            |--------------------------------------------------------------------------
            | Compiled View Path
            |--------------------------------------------------------------------------
            |
            | This option determines where all the compiled Blade templates will be
            | stored for your application. Typically, this is within the storage
            | directory. However, as usual, you are free to change this value.
            |
            */

            'compiled' => env(
                'VIEW_COMPILED_PATH',
                realpath(storage_path('framework/views'))
            ),

        ];
      uuid: 6056319341fb80a5
  uuid: 26acfcc839c508e0
database:
  isDir: true
  content:
    factories:
      isDir: true
      content:
        UserFactory.php:
          isDir: false
          content: |
            <?php

            namespace Database\Factories;

            use Illuminate\Database\Eloquent\Factories\Factory;
            use Illuminate\Support\Str;

            /**
             * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
             */
            class UserFactory extends Factory
            {
                /**
                 * Define the model's default state.
                 *
                 * @return array<string, mixed>
                 */
                public function definition(): array
                {
                    return [
                        'name' => fake()->name(),
                        'email' => fake()->unique()->safeEmail(),
                        'email_verified_at' => now(),
                        'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
                        'remember_token' => Str::random(10),
                    ];
                }

                /**
                 * Indicate that the model's email address should be unverified.
                 *
                 * @return $this
                 */
                public function unverified(): static
                {
                    return $this->state(fn (array $attributes) => [
                        'email_verified_at' => null,
                    ]);
                }
            }
          uuid: dfb660fd77999359
      uuid: a3204c67a16b0783
    migrations:
      isDir: true
      content:
        2014_10_12_100000_create_password_resets_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreatePasswordResetsTable extends Migration
            {
                /**
                 * Run the migrations.
                 *
                 * @return void
                 */
                public function up()
                {
                    Schema::create('password_resets', function (Blueprint $table) {
                        $table->string('email')->index();
                        $table->string('token');
                        $table->timestamp('created_at')->nullable();
                    });
                }

                /**
                 * Reverse the migrations.
                 *
                 * @return void
                 */
                public function down()
                {
                    Schema::dropIfExists('password_resets');
                }
            }
          uuid: d0dc0500f723bd94
        2024_09_21_000001_create_audit_logs_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateAuditLogsTable extends Migration
            {
                public function up()
                {
                    Schema::create('audit_logs', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->text('description');
                        $table->unsignedBigInteger('subject_id')->nullable();
                        $table->string('subject_type')->nullable();
                        $table->unsignedBigInteger('user_id')->nullable();
                        $table->text('properties')->nullable();
                        $table->string('host', 46)->nullable();
                        $table->timestamps();
                    });
                }
            }
          uuid: 46ef01c98b845533
        2024_09_21_000002_create_permissions_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreatePermissionsTable extends Migration
            {
                public function up()
                {
                    Schema::create('permissions', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->string('title')->nullable();
                        $table->timestamps();
                        $table->softDeletes();
                    });
                }
            }
          uuid: ac2598b7aa4f7606
        2024_09_21_000003_create_roles_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateRolesTable extends Migration
            {
                public function up()
                {
                    Schema::create('roles', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->string('title')->nullable();
                        $table->boolean('aktif')->default(0)->nullable();
                        $table->timestamps();
                        $table->softDeletes();
                    });
                }
            }
          uuid: 1fd91befcba67fcb
        2024_09_21_000004_create_users_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateUsersTable extends Migration
            {
                public function up()
                {
                    Schema::create('users', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->string('name')->nullable();
                        $table->string('email')->nullable()->unique();
                        $table->datetime('email_verified_at')->nullable();
                        $table->string('password')->nullable();
                        $table->string('remember_token')->nullable();
                        $table->boolean('aktif')->default(0)->nullable();
                        $table->timestamps();
                        $table->softDeletes();
                    });
                }
            }
          uuid: 74e0083e0e946676
        2024_09_21_000005_create_teams_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateTeamsTable extends Migration
            {
                public function up()
                {
                    Schema::create('teams', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->string('name')->nullable();
                        $table->timestamps();
                        $table->softDeletes();
                    });
                }
            }
          uuid: 1fc7608ffca9559a
        2024_09_21_000006_create_jabatans_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateJabatansTable extends Migration
            {
                public function up()
                {
                    Schema::create('jabatans', function (Blueprint $table) {
                        $table->bigIncrements('id');
                        $table->string('nama')->nullable();
                        $table->boolean('aktif')->default(0)->nullable();
                        $table->timestamps();
                        $table->softDeletes();
                    });
                }
            }
          uuid: ec0007114aca451a
        2024_09_21_000007_create_permission_role_pivot_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreatePermissionRolePivotTable extends Migration
            {
                public function up()
                {
                    Schema::create('permission_role', function (Blueprint $table) {
                        $table->unsignedBigInteger('role_id');
                        $table->foreign('role_id', 'role_id_fk_10135382')->references('id')->on('roles')->onDelete('cascade');
                        $table->unsignedBigInteger('permission_id');
                        $table->foreign('permission_id', 'permission_id_fk_10135382')->references('id')->on('permissions')->onDelete('cascade');
                    });
                }
            }
          uuid: bdad14b8cda49d86
        2024_09_21_000008_create_role_user_pivot_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class CreateRoleUserPivotTable extends Migration
            {
                public function up()
                {
                    Schema::create('role_user', function (Blueprint $table) {
                        $table->unsignedBigInteger('user_id');
                        $table->foreign('user_id', 'user_id_fk_10135391')->references('id')->on('users')->onDelete('cascade');
                        $table->unsignedBigInteger('role_id');
                        $table->foreign('role_id', 'role_id_fk_10135391')->references('id')->on('roles')->onDelete('cascade');
                    });
                }
            }
          uuid: 97aa58732fe2ad2f
        2024_09_21_000009_add_relationship_fields_to_users_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class AddRelationshipFieldsToUsersTable extends Migration
            {
                public function up()
                {
                    Schema::table('users', function (Blueprint $table) {
                        $table->unsignedBigInteger('jabatan_id')->nullable();
                        $table->foreign('jabatan_id', 'jabatan_fk_10135463')->references('id')->on('jabatans');
                        $table->unsignedBigInteger('team_id')->nullable();
                        $table->foreign('team_id', 'team_fk_10135411')->references('id')->on('teams');
                    });
                }
            }
          uuid: 3f7336cab5990caf
        2024_09_21_000010_add_relationship_fields_to_teams_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class AddRelationshipFieldsToTeamsTable extends Migration
            {
                public function up()
                {
                    Schema::table('teams', function (Blueprint $table) {
                        $table->unsignedBigInteger('owner_id')->nullable();
                        $table->foreign('owner_id', 'owner_fk_10135410')->references('id')->on('users');
                    });
                }
            }
          uuid: d20e83d2e17ae6e0
        2024_09_21_000011_add_relationship_fields_to_jabatans_table.php:
          isDir: false
          content: |
            <?php

            use Illuminate\Database\Migrations\Migration;
            use Illuminate\Database\Schema\Blueprint;
            use Illuminate\Support\Facades\Schema;

            class AddRelationshipFieldsToJabatansTable extends Migration
            {
                public function up()
                {
                    Schema::table('jabatans', function (Blueprint $table) {
                        $table->unsignedBigInteger('team_id')->nullable();
                        $table->foreign('team_id', 'team_fk_10135462')->references('id')->on('teams');
                    });
                }
            }
          uuid: e2d71b7d1a1c69a8
      uuid: 5bbd326679c35a81
    seeders:
      isDir: true
      content:
        DatabaseSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use Illuminate\Database\Seeder;

            class DatabaseSeeder extends Seeder
            {
                public function run()
                {
                    $this->call([
                        PermissionsTableSeeder::class,
                        RolesTableSeeder::class,
                        PermissionRoleTableSeeder::class,
                        UsersTableSeeder::class,
                        RoleUserTableSeeder::class,
                    ]);
                }
            }
          uuid: 844c3cd14c3b3d33
        PermissionRoleTableSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use App\Models\Permission;
            use App\Models\Role;
            use Illuminate\Database\Seeder;

            class PermissionRoleTableSeeder extends Seeder
            {
                public function run()
                {
                    $admin_permissions = Permission::all();
                    Role::findOrFail(1)->permissions()->sync($admin_permissions->pluck('id'));
                    $user_permissions = $admin_permissions->filter(function ($permission) {
                        return substr($permission->title, 0, 5) != 'user_' && substr($permission->title, 0, 5) != 'role_' && substr($permission->title, 0, 11) != 'permission_' && substr($permission->title, 0, 5) != 'team_';
                    });
                    Role::findOrFail(2)->permissions()->sync($user_permissions);
                }
            }
          uuid: 00a50798807348cf
        PermissionsTableSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use App\Models\Permission;
            use Illuminate\Database\Seeder;

            class PermissionsTableSeeder extends Seeder
            {
                public function run()
                {
                    $permissions = [
                        [
                            'id'    => 1,
                            'title' => 'user_management_access',
                        ],
                        [
                            'id'    => 2,
                            'title' => 'permission_create',
                        ],
                        [
                            'id'    => 3,
                            'title' => 'permission_edit',
                        ],
                        [
                            'id'    => 4,
                            'title' => 'permission_show',
                        ],
                        [
                            'id'    => 5,
                            'title' => 'permission_delete',
                        ],
                        [
                            'id'    => 6,
                            'title' => 'permission_access',
                        ],
                        [
                            'id'    => 7,
                            'title' => 'role_create',
                        ],
                        [
                            'id'    => 8,
                            'title' => 'role_edit',
                        ],
                        [
                            'id'    => 9,
                            'title' => 'role_show',
                        ],
                        [
                            'id'    => 10,
                            'title' => 'role_delete',
                        ],
                        [
                            'id'    => 11,
                            'title' => 'role_access',
                        ],
                        [
                            'id'    => 12,
                            'title' => 'user_create',
                        ],
                        [
                            'id'    => 13,
                            'title' => 'user_edit',
                        ],
                        [
                            'id'    => 14,
                            'title' => 'user_show',
                        ],
                        [
                            'id'    => 15,
                            'title' => 'user_delete',
                        ],
                        [
                            'id'    => 16,
                            'title' => 'user_access',
                        ],
                        [
                            'id'    => 17,
                            'title' => 'audit_log_show',
                        ],
                        [
                            'id'    => 18,
                            'title' => 'audit_log_access',
                        ],
                        [
                            'id'    => 19,
                            'title' => 'team_create',
                        ],
                        [
                            'id'    => 20,
                            'title' => 'team_edit',
                        ],
                        [
                            'id'    => 21,
                            'title' => 'team_show',
                        ],
                        [
                            'id'    => 22,
                            'title' => 'team_delete',
                        ],
                        [
                            'id'    => 23,
                            'title' => 'team_access',
                        ],
                        [
                            'id'    => 24,
                            'title' => 'jabatan_create',
                        ],
                        [
                            'id'    => 25,
                            'title' => 'jabatan_edit',
                        ],
                        [
                            'id'    => 26,
                            'title' => 'jabatan_show',
                        ],
                        [
                            'id'    => 27,
                            'title' => 'jabatan_delete',
                        ],
                        [
                            'id'    => 28,
                            'title' => 'jabatan_access',
                        ],
                        [
                            'id'    => 29,
                            'title' => 'profile_password_edit',
                        ],
                    ];

                    Permission::insert($permissions);
                }
            }
          uuid: c3ce0eae5a874edb
        RoleUserTableSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use App\Models\User;
            use Illuminate\Database\Seeder;

            class RoleUserTableSeeder extends Seeder
            {
                public function run()
                {
                    User::findOrFail(1)->roles()->sync(1);
                }
            }
          uuid: af806be1b49e3d8c
        RolesTableSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use App\Models\Role;
            use Illuminate\Database\Seeder;

            class RolesTableSeeder extends Seeder
            {
                public function run()
                {
                    $roles = [
                        [
                            'id'    => 1,
                            'title' => 'Admin',
                        ],
                        [
                            'id'    => 2,
                            'title' => 'User',
                        ],
                    ];

                    Role::insert($roles);
                }
            }
          uuid: 9e6ea5551426ab12
        UsersTableSeeder.php:
          isDir: false
          content: |
            <?php

            namespace Database\Seeders;

            use App\Models\User;
            use Illuminate\Database\Seeder;

            class UsersTableSeeder extends Seeder
            {
                public function run()
                {
                    $users = [
                        [
                            'id'             => 1,
                            'name'           => 'Admin',
                            'email'          => 'admin@admin.com',
                            'password'       => bcrypt('password'),
                            'remember_token' => null,
                        ],
                    ];

                    User::insert($users);
                }
            }
          uuid: bbac5183765bbd6a
      uuid: c3c32a417e1708b3
  uuid: 237fcde8081165a3
public:
  isDir: true
  content:
    css:
      isDir: true
      content:
        adminltev3.css:
          isDir: false
          content: "/*!\n *   AdminLTE v3.0.0-alpha\n *   Author: Abdullah Almsaeed\n *\t Website: AdminLTE.io <http://adminlte.io>\n *   License: Open source - MIT <http://opensource.org/licenses/MIT>\n *//*!\n * Bootstrap v4.1.0 (https://getbootstrap.com/)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#ffffff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#0056b3;text-decoration:none}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg:not(:root){overflow:hidden}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.2;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.chart-legend,.contacts-list,.list-unstyled,.mailbox-attachments,.users-list{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:\"\\2014 \\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;box-shadow:0 1px 2px rgba(0,0,0,.075);max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem;box-shadow:inset 0 -.1rem 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;box-shadow:none}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:7.5px;padding-left:7.5px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{width:100%;padding-right:7.5px;padding-left:7.5px;margin-right:auto;margin-left:auto}.row{display:flex;flex-wrap:wrap;margin-right:-7.5px;margin-left:-7.5px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;min-height:1px;padding-right:7.5px;padding-left:7.5px}.col{flex-basis:0;flex-grow:1;max-width:100%}.col-auto{flex:0 0 auto;width:auto;max-width:none}.col-1{flex:0 0 8.333333%;max-width:8.333333%}.col-2{flex:0 0 16.666667%;max-width:16.666667%}.col-3{flex:0 0 25%;max-width:25%}.col-4{flex:0 0 33.333333%;max-width:33.333333%}.col-5{flex:0 0 41.666667%;max-width:41.666667%}.col-6{flex:0 0 50%;max-width:50%}.col-7{flex:0 0 58.333333%;max-width:58.333333%}.col-8{flex:0 0 66.666667%;max-width:66.666667%}.col-9{flex:0 0 75%;max-width:75%}.col-10{flex:0 0 83.333333%;max-width:83.333333%}.col-11{flex:0 0 91.666667%;max-width:91.666667%}.col-12{flex:0 0 100%;max-width:100%}.order-first{order:-1}.order-last{order:13}.order-0{order:0}.order-1{order:1}.order-2{order:2}.order-3{order:3}.order-4{order:4}.order-5{order:5}.order-6{order:6}.order-7{order:7}.order-8{order:8}.order-9{order:9}.order-10{order:10}.order-11{order:11}.order-12{order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{flex-basis:0;flex-grow:1;max-width:100%}.col-sm-auto{flex:0 0 auto;width:auto;max-width:none}.col-sm-1{flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{flex:0 0 25%;max-width:25%}.col-sm-4{flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{flex:0 0 50%;max-width:50%}.col-sm-7{flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{flex:0 0 75%;max-width:75%}.col-sm-10{flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{flex:0 0 100%;max-width:100%}.order-sm-first{order:-1}.order-sm-last{order:13}.order-sm-0{order:0}.order-sm-1{order:1}.order-sm-2{order:2}.order-sm-3{order:3}.order-sm-4{order:4}.order-sm-5{order:5}.order-sm-6{order:6}.order-sm-7{order:7}.order-sm-8{order:8}.order-sm-9{order:9}.order-sm-10{order:10}.order-sm-11{order:11}.order-sm-12{order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{flex-basis:0;flex-grow:1;max-width:100%}.col-md-auto{flex:0 0 auto;width:auto;max-width:none}.col-md-1{flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{flex:0 0 25%;max-width:25%}.col-md-4{flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{flex:0 0 50%;max-width:50%}.col-md-7{flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{flex:0 0 75%;max-width:75%}.col-md-10{flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{flex:0 0 100%;max-width:100%}.order-md-first{order:-1}.order-md-last{order:13}.order-md-0{order:0}.order-md-1{order:1}.order-md-2{order:2}.order-md-3{order:3}.order-md-4{order:4}.order-md-5{order:5}.order-md-6{order:6}.order-md-7{order:7}.order-md-8{order:8}.order-md-9{order:9}.order-md-10{order:10}.order-md-11{order:11}.order-md-12{order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{flex-basis:0;flex-grow:1;max-width:100%}.col-lg-auto{flex:0 0 auto;width:auto;max-width:none}.col-lg-1{flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{flex:0 0 25%;max-width:25%}.col-lg-4{flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{flex:0 0 50%;max-width:50%}.col-lg-7{flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{flex:0 0 75%;max-width:75%}.col-lg-10{flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{flex:0 0 100%;max-width:100%}.order-lg-first{order:-1}.order-lg-last{order:13}.order-lg-0{order:0}.order-lg-1{order:1}.order-lg-2{order:2}.order-lg-3{order:3}.order-lg-4{order:4}.order-lg-5{order:5}.order-lg-6{order:6}.order-lg-7{order:7}.order-lg-8{order:8}.order-lg-9{order:9}.order-lg-10{order:10}.order-lg-11{order:11}.order-lg-12{order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{flex-basis:0;flex-grow:1;max-width:100%}.col-xl-auto{flex:0 0 auto;width:auto;max-width:none}.col-xl-1{flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{flex:0 0 25%;max-width:25%}.col-xl-4{flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{flex:0 0 50%;max-width:50%}.col-xl-7{flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{flex:0 0 75%;max-width:75%}.col-xl-10{flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{flex:0 0 100%;max-width:100%}.order-xl-first{order:-1}.order-xl-last{order:13}.order-xl-0{order:0}.order-xl-1{order:1}.order-xl-2{order:2}.order-xl-3{order:3}.order-xl-4{order:4}.order-xl-5{order:5}.order-xl-6{order:6}.order-xl-7{order:7}.order-xl-8{order:8}.order-xl-9{order:9}.order-xl-10{order:10}.order-xl-11{order:11}.order-xl-12{order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;max-width:100%;margin-bottom:1rem;background-color:transparent}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#212529;border-color:#32383e}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#212529}.table-dark td,.table-dark th,.table-dark thead th{border-color:#32383e}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 0 0 transparent;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,123,255,.25)}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:not([size]):not([multiple]){height:calc(2.25rem + 2px)}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:.375rem;padding-bottom:.375rem;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm,.input-group-lg>.form-control-plaintext.form-control,.input-group-lg>.input-group-append>.form-control-plaintext.btn,.input-group-lg>.input-group-append>.form-control-plaintext.input-group-text,.input-group-lg>.input-group-prepend>.form-control-plaintext.btn,.input-group-lg>.input-group-prepend>.form-control-plaintext.input-group-text,.input-group-sm>.form-control-plaintext.form-control,.input-group-sm>.input-group-append>.form-control-plaintext.btn,.input-group-sm>.input-group-append>.form-control-plaintext.input-group-text,.input-group-sm>.input-group-prepend>.form-control-plaintext.btn,.input-group-sm>.input-group-prepend>.form-control-plaintext.input-group-text{padding-right:0;padding-left:0}.form-control-sm,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-sm>.input-group-append>select.btn:not([size]):not([multiple]),.input-group-sm>.input-group-append>select.input-group-text:not([size]):not([multiple]),.input-group-sm>.input-group-prepend>select.btn:not([size]):not([multiple]),.input-group-sm>.input-group-prepend>select.input-group-text:not([size]):not([multiple]),.input-group-sm>select.form-control:not([size]):not([multiple]),select.form-control-sm:not([size]):not([multiple]){height:calc(1.8125rem + 2px)}.form-control-lg,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-lg>.input-group-append>select.btn:not([size]):not([multiple]),.input-group-lg>.input-group-append>select.input-group-text:not([size]):not([multiple]),.input-group-lg>.input-group-prepend>select.btn:not([size]):not([multiple]),.input-group-lg>.input-group-prepend>select.input-group-text:not([size]):not([multiple]),.input-group-lg>select.form-control:not([size]):not([multiple]),select.form-control-lg:not([size]):not([multiple]){height:calc(2.875rem + 2px)}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:flex;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:inline-flex;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.5rem;margin-top:.1rem;font-size:.875rem;line-height:1;color:#fff;background-color:rgba(40,167,69,.8);border-radius:.2rem}.custom-select.is-valid,.form-control.is-valid,.was-validated .custom-select:valid,.was-validated .form-control:valid{border-color:#28a745}.custom-select.is-valid:focus,.form-control.is-valid:focus,.was-validated .custom-select:valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip,.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip,.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip,.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip{display:block}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{background-color:#71dd8a}.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip,.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(40,167,69,.25)}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label::before,.was-validated .custom-file-input:valid~.custom-file-label::before{border-color:inherit}.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip,.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip{display:block}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.5rem;margin-top:.1rem;font-size:.875rem;line-height:1;color:#fff;background-color:rgba(220,53,69,.8);border-radius:.2rem}.custom-select.is-invalid,.form-control.is-invalid,.was-validated .custom-select:invalid,.was-validated .form-control:invalid{border-color:#dc3545}.custom-select.is-invalid:focus,.form-control.is-invalid:focus,.was-validated .custom-select:invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{background-color:#efa2a9}.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip,.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(220,53,69,.25)}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label::before,.was-validated .custom-file-input:invalid~.custom-file-label::before{border-color:inherit}.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip,.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip{display:block}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:flex;flex-flow:row wrap;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:flex;align-items:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:flex;flex:0 0 auto;flex-flow:row wrap;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:flex;align-items:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{align-items:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;user-select:none;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:focus,.btn:hover{text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65;box-shadow:none}.btn:not(:disabled):not(.disabled){cursor:pointer}.btn:not(:disabled):not(.disabled).active,.btn:not(:disabled):not(.disabled):active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn:not(:disabled):not(.disabled).active:focus,.btn:not(:disabled):not(.disabled):active:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.25),inset 0 3px 5px rgba(0,0,0,.125)}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(0,123,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(0,123,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(108,117,125,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(108,117,125,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(40,167,69,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(40,167,69,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(23,162,184,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(23,162,184,.5)}.btn-warning{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-warning:hover{color:#1f2d3d;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(255,193,7,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#1f2d3d;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(255,193,7,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(220,53,69,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(220,53,69,.5)}.btn-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-light:hover{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(248,249,250,.5)}.btn-light.disabled,.btn-light:disabled{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#1f2d3d;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(248,249,250,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(52,58,64,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-primary{color:#007bff;background-color:transparent;background-image:none;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;background-color:transparent;background-image:none;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;background-color:transparent;background-image:none;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;background-color:transparent;background-image:none;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;background-color:transparent;background-image:none;border-color:#ffc107}.btn-outline-warning:hover{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;background-color:transparent;background-image:none;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;background-color:transparent;background-image:none;border-color:#f8f9fa}.btn-outline-light:hover{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;background-color:transparent;background-image:none;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;background-color:transparent}.btn-link:hover{color:#0056b3;text-decoration:none;background-color:transparent;border-color:transparent}.btn-link.focus,.btn-link:focus{text-decoration:none;border-color:transparent;box-shadow:none}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media screen and (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media screen and (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.175)}.dropdown-menu-right{right:0;left:auto}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;width:0;height:0;margin-right:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;flex:0 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group,.btn-group-vertical .btn+.btn,.btn-group-vertical .btn+.btn-group,.btn-group-vertical .btn-group+.btn,.btn-group-vertical .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group.show .dropdown-toggle{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.show .dropdown-toggle.btn-link{box-shadow:none}.btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.btn-group-vertical .btn,.btn-group-vertical .btn-group{width:100%}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file:focus,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control{margin-left:-1px}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:flex;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label,.input-group>.custom-file:not(:first-child) .custom-file-label::after{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;background-color:#007bff;box-shadow:none}.custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;box-shadow:none}.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{margin-bottom:0}.custom-control-label::before{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";user-select:none;background-color:#dee2e6;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-control-label::after{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;content:\"\";background-repeat:no-repeat;background-position:center center;background-size:50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23ffffff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{background-color:#007bff;box-shadow:none}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23ffffff' d='M0 2h4'/%3E%3C/svg%3E\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23ffffff'/%3E%3C/svg%3E\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\") no-repeat right .75rem center;background-size:8px 10px;border:1px solid #ced4da;border-radius:.25rem;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:inset 0 1px 2px rgba(0,0,0,.075),0 0 5px rgba(128,189,255,.5)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{height:calc(1.8125rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-select-lg{height:calc(2.875rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:125%}.custom-file{position:relative;display:inline-block;width:100%;height:calc(2.25rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(2.25rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-file-input:focus~.custom-file-label::after{border-color:#80bdff}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(2.25rem + 2px);padding:.375rem .75rem;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 0 0 transparent}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(calc(2.25rem + 2px) - 1px * 2);padding:.375rem .75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:1px solid #ced4da;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;padding-left:0;background-color:transparent;appearance:none}.custom-range:focus{outline:0}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-webkit-slider-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-moz-range-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-ms-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.nav{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{flex:1 1 auto;text-align:center}.nav-justified .nav-item{flex-basis:0;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding:.5rem .5rem}.navbar>.container,.navbar>.container-fluid{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:.5rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler:not(:disabled):not(.disabled){cursor:pointer}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-sm .navbar-nav{flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-md .navbar-nav{flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-xl .navbar-nav{flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand>.container,.navbar-expand>.container-fluid{flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:#fff}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.75);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.75)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.75)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:0 solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-body{flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:0 solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 0) calc(.25rem - 0) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:0 solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 0) calc(.25rem - 0)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(.25rem - 0)}.card-img-top{width:100%;border-top-left-radius:calc(.25rem - 0);border-top-right-radius:calc(.25rem - 0)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(.25rem - 0);border-bottom-left-radius:calc(.25rem - 0)}.card-deck{display:flex;flex-direction:column}.card-deck .card{margin-bottom:7.5px}@media (min-width:576px){.card-deck{flex-flow:row wrap;margin-right:-7.5px;margin-left:-7.5px}.card-deck .card{display:flex;flex:1 0 0%;flex-direction:column;margin-right:7.5px;margin-bottom:0;margin-left:7.5px}}.card-group{display:flex;flex-direction:column}.card-group>.card{margin-bottom:7.5px}@media (min-width:576px){.card-group{flex-flow:row wrap}.card-group>.card{flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:first-child .card-header,.card-group>.card:first-child .card-img-top{border-top-right-radius:0}.card-group>.card:first-child .card-footer,.card-group>.card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:last-child .card-header,.card-group>.card:last-child .card-img-top{border-top-left-radius:0}.card-group>.card:last-child .card-footer,.card-group>.card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group>.card:only-child{border-radius:.25rem}.card-group>.card:only-child .card-header,.card-group>.card:only-child .card-img-top{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card-group>.card:only-child .card-footer,.card-group>.card:only-child .card-img-bottom{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-group>.card:not(:first-child):not(:last-child):not(:only-child){border-radius:0}.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-footer,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-header,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-top{border-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{column-count:3;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion .card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion .card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion .card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion .card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.breadcrumb{display:flex;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:2;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-link:not(:disabled):not(.disabled){cursor:pointer}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}.badge-primary[href]:focus,.badge-primary[href]:hover{color:#fff;text-decoration:none;background-color:#0062cc}.badge-secondary{color:#fff;background-color:#6c757d}.badge-secondary[href]:focus,.badge-secondary[href]:hover{color:#fff;text-decoration:none;background-color:#545b62}.badge-success{color:#fff;background-color:#28a745}.badge-success[href]:focus,.badge-success[href]:hover{color:#fff;text-decoration:none;background-color:#1e7e34}.badge-info{color:#fff;background-color:#17a2b8}.badge-info[href]:focus,.badge-info[href]:hover{color:#fff;text-decoration:none;background-color:#117a8b}.badge-warning{color:#1f2d3d;background-color:#ffc107}.badge-warning[href]:focus,.badge-warning[href]:hover{color:#1f2d3d;text-decoration:none;background-color:#d39e00}.badge-danger{color:#fff;background-color:#dc3545}.badge-danger[href]:focus,.badge-danger[href]:hover{color:#fff;text-decoration:none;background-color:#bd2130}.badge-light{color:#1f2d3d;background-color:#f8f9fa}.badge-light[href]:focus,.badge-light[href]:hover{color:#1f2d3d;text-decoration:none;background-color:#dae0e5}.badge-dark{color:#fff;background-color:#343a40}.badge-dark[href]:focus,.badge-dark[href]:hover{color:#fff;text-decoration:none;background-color:#1d2124}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close,.alert-dismissible .mailbox-attachment-close{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem;box-shadow:inset 0 .1rem .1rem rgba(0,0,0,.1)}.progress-bar{display:flex;flex-direction:column;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media screen and (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{animation:progress-bar-stripes 1s linear infinite}.media{display:flex;align-items:flex-start}.media-body{flex:1}.list-group{display:flex;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item:focus,.list-group-item:hover{z-index:1;text-decoration:none}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close,.mailbox-attachment-close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:focus,.close:hover,.mailbox-attachment-close:focus,.mailbox-attachment-close:hover{color:#000;text-decoration:none;opacity:.75}.close:not(:disabled):not(.disabled),.mailbox-attachment-close:not(:disabled):not(.disabled){cursor:pointer}button.close,button.mailbox-attachment-close{padding:0;background-color:transparent;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-25%)}@media screen and (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:translate(0,0)}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - (.5rem * 2))}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.5);outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:flex;align-items:flex-start;justify-content:space-between;padding:1rem;border-bottom:1px solid #e9ecef;border-top-left-radius:.3rem;border-top-right-radius:.3rem}.modal-header .close,.modal-header .mailbox-attachment-close{padding:1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;align-items:center;justify-content:flex-end;padding:1rem;border-top:1px solid #e9ecef}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-centered{min-height:calc(100% - (1.75rem * 2))}.modal-content{box-shadow:0 .5rem 1rem rgba(0,0,0,.5)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:800px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.2)}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top] .arrow,.bs-popover-top .arrow{bottom:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::after,.bs-popover-top .arrow::before{border-width:.5rem .5rem 0}.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::before{bottom:0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-top .arrow::after{bottom:1px;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right] .arrow,.bs-popover-right .arrow{left:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::after,.bs-popover-right .arrow::before{border-width:.5rem .5rem .5rem 0}.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::before{left:0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-right .arrow::after{left:1px;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom] .arrow,.bs-popover-bottom .arrow{top:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::after,.bs-popover-bottom .arrow::before{border-width:0 .5rem .5rem .5rem}.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::before{top:0;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-bottom .arrow::after{top:1px;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left] .arrow,.bs-popover-left .arrow{right:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::after,.bs-popover-left .arrow::before{border-width:.5rem 0 .5rem .5rem}.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::before{right:0;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-left .arrow::after{right:1px;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;color:inherit;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-item{position:relative;display:none;align-items:center;width:100%;transition:transform .6s ease;backface-visibility:hidden;perspective:1000px}@media screen and (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.carousel-item-next,.carousel-item-prev{position:absolute;top:0}.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{transform:translateX(0)}@supports (transform-style:preserve-3d){.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{transform:translate3d(0,0,0)}}.active.carousel-item-right,.carousel-item-next{transform:translateX(100%)}@supports (transform-style:preserve-3d){.active.carousel-item-right,.carousel-item-next{transform:translate3d(100%,0,0)}}.active.carousel-item-left,.carousel-item-prev{transform:translateX(-100%)}@supports (transform-style:preserve-3d){.active.carousel-item-left,.carousel-item-prev{transform:translate3d(-100%,0,0)}}.carousel-fade .carousel-item{opacity:0;transition-duration:.6s;transition-property:opacity}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{opacity:0}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{transform:translateX(0)}@supports (transform-style:preserve-3d){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{transform:translate3d(0,0,0)}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;display:flex;align-items:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:transparent no-repeat center center;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\")}.carousel-indicators{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:flex;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{position:relative;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;background-color:rgba(255,255,255,.5)}.carousel-indicators li::before{position:absolute;top:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators li::after{position:absolute;bottom:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators .active{background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary,.label-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,a.label-primary:focus,a.label-primary:hover,button.bg-primary:focus,button.bg-primary:hover,button.label-primary:focus,button.label-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.alert-success,.bg-success,.label-success{background-color:#28a745!important}a.alert-success:focus,a.alert-success:hover,a.bg-success:focus,a.bg-success:hover,a.label-success:focus,a.label-success:hover,button.alert-success:focus,button.alert-success:hover,button.bg-success:focus,button.bg-success:hover,button.label-success:focus,button.label-success:hover{background-color:#1e7e34!important}.alert-info,.bg-info,.label-info{background-color:#17a2b8!important}a.alert-info:focus,a.alert-info:hover,a.bg-info:focus,a.bg-info:hover,a.label-info:focus,a.label-info:hover,button.alert-info:focus,button.alert-info:hover,button.bg-info:focus,button.bg-info:hover,button.label-info:focus,button.label-info:hover{background-color:#117a8b!important}.alert-warning,.bg-warning,.label-warning{background-color:#ffc107!important}a.alert-warning:focus,a.alert-warning:hover,a.bg-warning:focus,a.bg-warning:hover,a.label-warning:focus,a.label-warning:hover,button.alert-warning:focus,button.alert-warning:hover,button.bg-warning:focus,button.bg-warning:hover,button.label-warning:focus,button.label-warning:hover{background-color:#d39e00!important}.alert-danger,.alert-error,.bg-danger,.label-danger{background-color:#dc3545!important}a.alert-danger:focus,a.alert-danger:hover,a.alert-error:focus,a.alert-error:hover,a.bg-danger:focus,a.bg-danger:hover,a.label-danger:focus,a.label-danger:hover,button.alert-danger:focus,button.alert-danger:hover,button.alert-error:focus,button.alert-error:hover,button.bg-danger:focus,button.bg-danger:hover,button.label-danger:focus,button.label-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-circle{border-radius:50%!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex,.info-box,.info-box-icon{display:flex!important}.d-inline-flex{display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:flex!important}.d-sm-inline-flex{display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:flex!important}.d-md-inline-flex{display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:flex!important}.d-lg-inline-flex{display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:flex!important}.d-xl-inline-flex{display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:flex!important}.d-print-inline-flex{display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-fill{flex:1 1 auto!important}.flex-grow-0{flex-grow:0!important}.flex-grow-1{flex-grow:1!important}.flex-shrink-0{flex-shrink:0!important}.flex-shrink-1{flex-shrink:1!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.info-box-icon,.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center,.info-box-icon{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{align-self:stretch!important}@media (min-width:576px){.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-sm-fill{flex:1 1 auto!important}.flex-sm-grow-0{flex-grow:0!important}.flex-sm-grow-1{flex-grow:1!important}.flex-sm-shrink-0{flex-shrink:0!important}.flex-sm-shrink-1{flex-shrink:1!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{align-self:stretch!important}}@media (min-width:768px){.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-md-fill{flex:1 1 auto!important}.flex-md-grow-0{flex-grow:0!important}.flex-md-grow-1{flex-grow:1!important}.flex-md-shrink-0{flex-shrink:0!important}.flex-md-shrink-1{flex-shrink:1!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-lg-fill{flex:1 1 auto!important}.flex-lg-grow-0{flex-grow:0!important}.flex-lg-grow-1{flex-grow:1!important}.flex-lg-shrink-0{flex-shrink:0!important}.flex-lg-shrink-1{flex-shrink:1!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{flex-direction:row!important}.flex-xl-column{flex-direction:column!important}.flex-xl-row-reverse{flex-direction:row-reverse!important}.flex-xl-column-reverse{flex-direction:column-reverse!important}.flex-xl-wrap{flex-wrap:wrap!important}.flex-xl-nowrap{flex-wrap:nowrap!important}.flex-xl-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-xl-fill{flex:1 1 auto!important}.flex-xl-grow-0{flex-grow:0!important}.flex-xl-grow-1{flex-grow:1!important}.flex-xl-shrink-0{flex-shrink:0!important}.flex-xl-shrink-1{flex-shrink:1!important}.justify-content-xl-start{justify-content:flex-start!important}.justify-content-xl-end{justify-content:flex-end!important}.justify-content-xl-center{justify-content:center!important}.justify-content-xl-between{justify-content:space-between!important}.justify-content-xl-around{justify-content:space-around!important}.align-items-xl-start{align-items:flex-start!important}.align-items-xl-end{align-items:flex-end!important}.align-items-xl-center{align-items:center!important}.align-items-xl-baseline{align-items:baseline!important}.align-items-xl-stretch{align-items:stretch!important}.align-content-xl-start{align-content:flex-start!important}.align-content-xl-end{align-content:flex-end!important}.align-content-xl-center{align-content:center!important}.align-content-xl-between{align-content:space-between!important}.align-content-xl-around{align-content:space-around!important}.align-content-xl-stretch{align-content:stretch!important}.align-self-xl-auto{align-self:auto!important}.align-self-xl-start{align-self:flex-start!important}.align-self-xl-end{align-self:flex-end!important}.align-self-xl-center{align-self:center!important}.align-self-xl-baseline{align-self:baseline!important}.align-self-xl-stretch{align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position:sticky){.sticky-top{position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2,.progress-group{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.callout,.card,.info-box,.mb-3,.my-3,.small-box{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.card-body.p-0 .table tbody>tr>td:last-of-type,.card-body.p-0 .table tbody>tr>th:last-of-type,.card-body.p-0 .table thead>tr>td:last-of-type,.card-body.p-0 .table thead>tr>th:last-of-type,.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.card-body.p-0 .table tbody>tr>td:first-of-type,.card-body.p-0 .table tbody>tr>th:first-of-type,.card-body.p-0 .table thead>tr>td:first-of-type,.card-body.p-0 .table thead>tr>th:first-of-type,.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0062cc!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#545b62!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#1e7e34!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#117a8b!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#d39e00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#bd2130!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#dae0e5!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#1d2124!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}}.wrapper,body,html{min-height:100%;overflow-x:hidden}.wrapper{position:relative}.layout-boxed .wrapper{box-shadow:0 0 10px rgba(0,0,0,.3)}.layout-boxed .wrapper,.layout-boxed .wrapper:before{margin:0 auto;max-width:1250px}@media (min-width:768px){.content-wrapper,.main-footer,.main-header{transition:margin-left .3s ease-in-out;margin-left:250px;z-index:3000}}@media screen and (min-width:768px) and (prefers-reduced-motion:reduce){.content-wrapper,.main-footer,.main-header{transition:none}}@media (min-width:768px){.sidebar-collapse .content-wrapper,.sidebar-collapse .main-footer,.sidebar-collapse .main-header{margin-left:0}}@media (max-width:991.98px){.content-wrapper,.content-wrapper:before,.main-footer,.main-footer:before,.main-header,.main-header:before{margin-left:0}}.content-wrapper{background:#f4f6f9}.content-wrapper>.content{padding:0 .5rem}.main-sidebar{position:fixed;top:0;left:0;bottom:0}.main-sidebar,.main-sidebar:before{transition:margin-left .3s ease-in-out,width .3s ease-in-out;width:250px}@media screen and (prefers-reduced-motion:reduce){.main-sidebar,.main-sidebar:before{transition:none}}.sidebar-collapse .main-sidebar,.sidebar-collapse .main-sidebar:before{margin-left:-250px}@media (max-width:991.98px){.main-sidebar,.main-sidebar:before{box-shadow:none!important;margin-left:-250px}.sidebar-open .main-sidebar,.sidebar-open .main-sidebar:before{margin-left:0}}.main-footer{padding:15px;color:#555;border-top:1px solid #dee2e6;background:#fff}.content-header{padding:15px .5rem}.content-header h1{font-size:1.8rem;margin:0}.content-header .breadcrumb{margin-bottom:0;padding:0;background:0 0;line-height:1.8rem}.hold-transition .content-wrapper,.hold-transition .main-footer,.hold-transition .main-header{transition:none!important}.main-header{z-index:1000}.main-header .navbar-nav .nav-item{margin:0}.main-header .nav-link{position:relative;height:2.5rem}.main-header .navbar-nav[class*=\"-right\"] .dropdown-menu{margin-top:-3px;right:0;left:auto}@media (max-width:575.98px){.main-header .navbar-nav[class*=\"-right\"] .dropdown-menu{left:0;right:auto}}.navbar-img{height:1.25rem;width:auto}.navbar-badge{position:absolute;top:9px;right:5px;font-size:.6rem;font-weight:300;padding:2px 4px}.btn-navbar{border-left-width:0;background-color:transparent}.form-control-navbar{border-right-width:0}.form-control-navbar+.input-group-append{margin-left:0}.btn-navbar,.form-control-navbar{transition:none}.navbar-dark .btn-navbar,.navbar-dark .form-control-navbar{background-color:rgba(255,255,255,.2);border:0}.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar,.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar :-moz-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar ::-moz-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar :-ms-input-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar:focus,.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{border:0!important;background-color:rgba(255,255,255,.6);color:#343a40}.navbar-light .btn-navbar,.navbar-light .form-control-navbar{background-color:#f2f4f6;border:0}.navbar-light .form-control-navbar+.input-group-append>.btn-navbar,.navbar-light .form-control-navbar::placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar :-moz-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar ::-moz-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar :-ms-input-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar:focus,.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{border:0!important;background-color:#e9ecef;color:#343a40}.brand-link{padding:.8125rem .5rem;font-size:1.25rem;display:block;line-height:1.5;white-space:nowrap}.brand-link:hover{color:#fff;text-decoration:none}[class*=sidebar-dark] .brand-link{color:rgba(255,255,255,.8);border-bottom:1px solid #4b545c}[class*=sidebar-light] .brand-link{color:rgba(0,0,0,.8);border-bottom:1px solid #dee2e6}.brand-image{float:left;line-height:.8;max-height:34px;width:auto;margin-left:.8rem;margin-right:.5rem;margin-top:-3px}.main-sidebar{z-index:1100;height:100vh;overflow-y:hidden}.sidebar{padding-bottom:0;padding-top:0;padding-left:.5rem;padding-right:.5rem;overflow-y:auto;height:calc(100% - 4rem)}.user-panel{position:relative}[class*=sidebar-dark] .user-panel{border-bottom:1px solid #4f5962}[class*=sidebar-light] .user-panel{border-bottom:1px solid #dee2e6}.user-panel,.user-panel .info{overflow:hidden;white-space:nowrap}.user-panel .image{padding-left:.8rem;display:inline-block}.user-panel img{width:2.1rem;height:auto}.user-panel .info{display:inline-block;padding:5px 5px 5px 10px}.user-panel .dropdown-menu,.user-panel .status{font-size:.875rem}.nav-sidebar .nav-item>.nav-link{margin-bottom:.2rem}.nav-sidebar .nav-item>.nav-link .right{transition:transform ease-in-out .3s}@media screen and (prefers-reduced-motion:reduce){.nav-sidebar .nav-item>.nav-link .right{transition:none}}.nav-sidebar .nav-link>p>.right{position:absolute;right:1rem;top:12px}.nav-sidebar .menu-open>.nav-treeview{display:block}.nav-sidebar .menu-open>.nav-link .right{-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.nav-sidebar>.nav-item{margin-bottom:0}.nav-sidebar>.nav-item .nav-icon{text-align:center;width:1.6rem;font-size:1.2rem;margin-right:.2rem}.nav-sidebar>.nav-item .float-right{margin-top:3px}.nav-sidebar .nav-treeview{display:none;list-style:none;padding:0}.nav-sidebar .nav-treeview>.nav-item>.nav-link>.nav-icon{width:1.6rem}.nav-sidebar .nav-header{font-size:.9rem;padding:.5rem}.nav-sidebar .nav-header:not(:first-of-type){padding:1.7rem 1rem .5rem 1rem}.nav-sidebar .nav-link p{display:inline-block;margin:0}#sidebar-overlay{position:fixed;top:0;left:0;right:0;bottom:0;display:none;background-color:rgba(0,0,0,.1);z-index:1099}@media (max-width:991.98px){.sidebar-open #sidebar-overlay{display:block}}.sidebar-dark-primary{background-color:#343a40}.sidebar-dark-primary .user-panel a:hover{color:#fff}.sidebar-dark-primary .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-primary .user-panel .status:active,.sidebar-dark-primary .user-panel .status:focus,.sidebar-dark-primary .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-primary .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-primary .user-panel .dropdown-item{color:#212529}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-primary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-primary .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#007bff}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-primary .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-primary .sidebar a{color:#c2c7d0}.sidebar-dark-primary .sidebar a:hover{text-decoration:none}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-primary{background-color:#fff}.sidebar-light-primary .user-panel a:hover{color:#212529}.sidebar-light-primary .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-primary .user-panel .status:active,.sidebar-light-primary .user-panel .status:focus,.sidebar-light-primary .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-primary .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-primary .user-panel .dropdown-item{color:#212529}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-primary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-primary .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#007bff}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-primary .nav-header{color:#292d32;background:inherit}.sidebar-light-primary .sidebar a{color:#343a40}.sidebar-light-primary .sidebar a:hover{text-decoration:none}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-primary .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-secondary{background-color:#343a40}.sidebar-dark-secondary .user-panel a:hover{color:#fff}.sidebar-dark-secondary .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-secondary .user-panel .status:active,.sidebar-dark-secondary .user-panel .status:focus,.sidebar-dark-secondary .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-secondary .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-secondary .user-panel .dropdown-item{color:#212529}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-secondary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-secondary .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#6c757d}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-secondary .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-secondary .sidebar a{color:#c2c7d0}.sidebar-dark-secondary .sidebar a:hover{text-decoration:none}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-secondary{background-color:#fff}.sidebar-light-secondary .user-panel a:hover{color:#212529}.sidebar-light-secondary .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-secondary .user-panel .status:active,.sidebar-light-secondary .user-panel .status:focus,.sidebar-light-secondary .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-secondary .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-secondary .user-panel .dropdown-item{color:#212529}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-secondary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-secondary .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#6c757d}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-secondary .nav-header{color:#292d32;background:inherit}.sidebar-light-secondary .sidebar a{color:#343a40}.sidebar-light-secondary .sidebar a:hover{text-decoration:none}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-success{background-color:#343a40}.sidebar-dark-success .user-panel a:hover{color:#fff}.sidebar-dark-success .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-success .user-panel .status:active,.sidebar-dark-success .user-panel .status:focus,.sidebar-dark-success .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-success .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-success .user-panel .dropdown-item{color:#212529}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-success .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-success .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#28a745}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-success .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-success .sidebar a{color:#c2c7d0}.sidebar-dark-success .sidebar a:hover{text-decoration:none}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-success .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-success{background-color:#fff}.sidebar-light-success .user-panel a:hover{color:#212529}.sidebar-light-success .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-success .user-panel .status:active,.sidebar-light-success .user-panel .status:focus,.sidebar-light-success .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-success .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-success .user-panel .dropdown-item{color:#212529}.sidebar-light-success .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-success .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-success .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-success .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#28a745}.sidebar-light-success .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-success .nav-header{color:#292d32;background:inherit}.sidebar-light-success .sidebar a{color:#343a40}.sidebar-light-success .sidebar a:hover{text-decoration:none}.sidebar-light-success .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-success .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-success .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-success .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-info{background-color:#343a40}.sidebar-dark-info .user-panel a:hover{color:#fff}.sidebar-dark-info .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-info .user-panel .status:active,.sidebar-dark-info .user-panel .status:focus,.sidebar-dark-info .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-info .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-info .user-panel .dropdown-item{color:#212529}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-info .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-info .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#17a2b8}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-info .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-info .sidebar a{color:#c2c7d0}.sidebar-dark-info .sidebar a:hover{text-decoration:none}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-info .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-info{background-color:#fff}.sidebar-light-info .user-panel a:hover{color:#212529}.sidebar-light-info .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-info .user-panel .status:active,.sidebar-light-info .user-panel .status:focus,.sidebar-light-info .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-info .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-info .user-panel .dropdown-item{color:#212529}.sidebar-light-info .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-info .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-info .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-info .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#17a2b8}.sidebar-light-info .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-info .nav-header{color:#292d32;background:inherit}.sidebar-light-info .sidebar a{color:#343a40}.sidebar-light-info .sidebar a:hover{text-decoration:none}.sidebar-light-info .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-info .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-info .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-info .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-warning{background-color:#343a40}.sidebar-dark-warning .user-panel a:hover{color:#fff}.sidebar-dark-warning .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-warning .user-panel .status:active,.sidebar-dark-warning .user-panel .status:focus,.sidebar-dark-warning .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-warning .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-warning .user-panel .dropdown-item{color:#212529}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-warning .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-warning .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#ffc107}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-warning .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-warning .sidebar a{color:#c2c7d0}.sidebar-dark-warning .sidebar a:hover{text-decoration:none}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-warning{background-color:#fff}.sidebar-light-warning .user-panel a:hover{color:#212529}.sidebar-light-warning .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-warning .user-panel .status:active,.sidebar-light-warning .user-panel .status:focus,.sidebar-light-warning .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-warning .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-warning .user-panel .dropdown-item{color:#212529}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-warning .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-warning .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#ffc107}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-warning .nav-header{color:#292d32;background:inherit}.sidebar-light-warning .sidebar a{color:#343a40}.sidebar-light-warning .sidebar a:hover{text-decoration:none}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-warning .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-danger{background-color:#343a40}.sidebar-dark-danger .user-panel a:hover{color:#fff}.sidebar-dark-danger .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-danger .user-panel .status:active,.sidebar-dark-danger .user-panel .status:focus,.sidebar-dark-danger .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-danger .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-danger .user-panel .dropdown-item{color:#212529}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-danger .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-danger .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#dc3545}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-danger .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-danger .sidebar a{color:#c2c7d0}.sidebar-dark-danger .sidebar a:hover{text-decoration:none}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-danger{background-color:#fff}.sidebar-light-danger .user-panel a:hover{color:#212529}.sidebar-light-danger .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-danger .user-panel .status:active,.sidebar-light-danger .user-panel .status:focus,.sidebar-light-danger .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-danger .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-danger .user-panel .dropdown-item{color:#212529}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-danger .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-danger .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#dc3545}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-danger .nav-header{color:#292d32;background:inherit}.sidebar-light-danger .sidebar a{color:#343a40}.sidebar-light-danger .sidebar a:hover{text-decoration:none}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-danger .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-light{background-color:#343a40}.sidebar-dark-light .user-panel a:hover{color:#fff}.sidebar-dark-light .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-light .user-panel .status:active,.sidebar-dark-light .user-panel .status:focus,.sidebar-dark-light .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-light .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-light .user-panel .dropdown-item{color:#212529}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-light .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-light .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#f8f9fa}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-light .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-light .sidebar a{color:#c2c7d0}.sidebar-dark-light .sidebar a:hover{text-decoration:none}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-light .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-light{background-color:#fff}.sidebar-light-light .user-panel a:hover{color:#212529}.sidebar-light-light .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-light .user-panel .status:active,.sidebar-light-light .user-panel .status:focus,.sidebar-light-light .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-light .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-light .user-panel .dropdown-item{color:#212529}.sidebar-light-light .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-light .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-light .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-light .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#f8f9fa}.sidebar-light-light .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-light .nav-header{color:#292d32;background:inherit}.sidebar-light-light .sidebar a{color:#343a40}.sidebar-light-light .sidebar a:hover{text-decoration:none}.sidebar-light-light .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-light .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-light .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-light .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-dark{background-color:#343a40}.sidebar-dark-dark .user-panel a:hover{color:#fff}.sidebar-dark-dark .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-dark .user-panel .status:active,.sidebar-dark-dark .user-panel .status:focus,.sidebar-dark-dark .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-dark .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-dark .user-panel .dropdown-item{color:#212529}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-dark .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-dark .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#343a40}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-dark .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-dark .sidebar a{color:#c2c7d0}.sidebar-dark-dark .sidebar a:hover{text-decoration:none}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-dark{background-color:#fff}.sidebar-light-dark .user-panel a:hover{color:#212529}.sidebar-light-dark .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-dark .user-panel .status:active,.sidebar-light-dark .user-panel .status:focus,.sidebar-light-dark .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-dark .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-dark .user-panel .dropdown-item{color:#212529}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-dark .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-dark .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#343a40}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-dark .nav-header{color:#292d32;background:inherit}.sidebar-light-dark .sidebar a{color:#343a40}.sidebar-light-dark .sidebar a:hover{text-decoration:none}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-dark .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}@media (min-width:992px){.sidebar-mini .nav-sidebar,.sidebar-mini .nav-sidebar .nav-link,.sidebar-mini .nav-sidebar>.nav-header{white-space:nowrap;overflow:hidden}.sidebar-mini.sidebar-collapse .d-hidden-mini{display:none}.sidebar-mini.sidebar-collapse .content-wrapper,.sidebar-mini.sidebar-collapse .main-footer,.sidebar-mini.sidebar-collapse .main-header{margin-left:4.6rem!important}.sidebar-mini.sidebar-collapse .nav-sidebar .nav-header{display:none}.sidebar-mini.sidebar-collapse .brand-text,.sidebar-mini.sidebar-collapse .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .sidebar .user-panel>.info{opacity:0;margin-left:-10px}.sidebar-mini.sidebar-collapse .main-sidebar,.sidebar-mini.sidebar-collapse .main-sidebar:before{margin-left:0;width:4.6rem}.sidebar-mini.sidebar-collapse .main-sidebar .user-panel .image{float:none}.sidebar-mini.sidebar-collapse .main-sidebar:hover{width:250px}.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel{text-align:left}.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel .image{float:left}.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-text,.sidebar-mini.sidebar-collapse .main-sidebar:hover .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{opacity:1;margin-left:0;display:inline-block}.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-image{margin-right:.5rem}.sidebar-mini.sidebar-collapse .main-sidebar:hover .sidebar-form,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:block!important;-webkit-transform:translateZ(0)}.sidebar-mini.sidebar-collapse .main-sidebar:hover .nav-sidebar>.nav-item>.nav-link>span{display:inline-block!important}.sidebar-mini.sidebar-collapse .visible-sidebar-mini{display:block!important}}.nav-sidebar{position:relative}.nav-sidebar:hover{overflow:visible}.nav-sidebar>.nav-header,.sidebar-form{overflow:hidden;text-overflow:clip}.nav-sidebar .nav-item>.nav-link{position:relative}.nav-sidebar .nav-item>.nav-link>.float-right{position:absolute;right:10px;top:50%;margin-top:-7px}.main-sidebar .brand-text,.sidebar .nav-link p,.sidebar .user-panel .info{transition:margin-left .3s linear,opacity .5s ease}@media screen and (prefers-reduced-motion:reduce){.main-sidebar .brand-text,.sidebar .nav-link p,.sidebar .user-panel .info{transition:none}}.control-sidebar{position:absolute;top:2.5rem;z-index:830}.control-sidebar,.control-sidebar:before{width:250px;right:-250px;bottom:0;transition:right .3s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.control-sidebar,.control-sidebar:before{transition:none}}.control-sidebar:before{top:0;display:block;position:fixed;content:\" \";z-index:-1}@media (min-width:768px){.control-sidebar-open .control-sidebar,.control-sidebar-open .control-sidebar:before{right:0}.control-sidebar-open .content-wrapper,.control-sidebar-open .main-footer{margin-right:250px}}@media (max-width:991.98px){.control-sidebar-open .control-sidebar,.control-sidebar-open .control-sidebar:before{right:0}}.control-sidebar-slide-open .control-sidebar,.control-sidebar-slide-open .control-sidebar:before{right:0}.control-sidebar-dark,.control-sidebar-dark .nav-link,.control-sidebar-dark a{color:#c2c7d0}.control-sidebar-dark,.control-sidebar-dark:before{background:#343a40}.control-sidebar-dark a:hover{color:#fff}.control-sidebar-dark h1,.control-sidebar-dark h2,.control-sidebar-dark h3,.control-sidebar-dark h4,.control-sidebar-dark h5,.control-sidebar-dark h6,.control-sidebar-dark label{color:#fff}.control-sidebar-dark .nav-tabs{border-bottom:0;background-color:rgba(255,255,255,.1);margin-bottom:5px}.control-sidebar-dark .nav-tabs .nav-item{margin:0}.control-sidebar-dark .nav-tabs .nav-link{position:relative;border-radius:0;text-align:center;padding:10px 20px}.control-sidebar-dark .nav-tabs .nav-link,.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border:0}.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border-left-color:transparent;border-bottom-color:transparent;border-top-color:transparent;color:#fff}.control-sidebar-dark .nav-tabs .nav-link.active{background-color:#343a40}.control-sidebar-dark .tab-pane{padding:10px 15px}.control-sidebar-light{color:#4b545c}.control-sidebar-light,.control-sidebar-light:before{background:#fff;border-left:1px solid #adb5bd}.dropdown-item-title{font-size:1rem;margin:0}.dropdown-menu-lg{min-width:280px;max-width:300px;padding:0}.dropdown-menu-lg .dropdown-divider{margin:0}.dropdown-menu-lg .dropdown-item{padding:.5rem 1rem}.dropdown-menu-lg p{white-space:normal;margin:0}.dropdown-footer,.dropdown-header{text-align:center;display:block;padding:.5rem 1rem;font-size:.875rem}.open:not(.dropup)>.animated-dropdown-menu{backface-visibility:visible!important;animation:flipInX .7s both}@keyframes flipInX{0%{transform:perspective(400px) rotate3d(1,0,0,90deg);transition-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(1,0,0,-20deg);transition-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{transform:perspective(400px)}}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px)}}.navbar-custom-menu>.navbar-nav>li{position:relative}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:0;left:auto}@media (max-width:767.98px){.navbar-custom-menu>.navbar-nav{float:right}.navbar-custom-menu>.navbar-nav>li{position:static}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:5%;left:auto;border:1px solid #ddd;background:#fff}}.form-group.has-icon{position:relative}.form-group.has-icon .form-control{padding-right:35px}.form-group.has-icon .form-icon{cursor:pointer;position:absolute;right:3px;top:0;padding:.375rem .75rem;border:0;background-color:transparent;font-size:1rem}.btn-group-vertical .btn.btn-flat:first-of-type,.btn-group-vertical .btn.btn-flat:last-of-type{border-radius:0}.form-control-feedback.fa{line-height:calc(2.25rem + 2px)}.form-group-lg .form-control+.form-control-feedback.fa,.input-group-lg+.form-control-feedback.fa,.input-lg+.form-control-feedback.fa{line-height:calc(2.875rem + 2px)}.form-group-sm .form-control+.form-control-feedback.fa,.input-group-sm+.form-control-feedback.fa,.input-sm+.form-control-feedback.fa{line-height:calc(1.8125rem + 2px)}label:not(.form-check-label):not(.custom-file-label){font-weight:700}.progress{box-shadow:none;border-radius:1px}.progress-sm{height:10px}.progress-xs{height:7px}.progress-xxs{height:3px}.progress.vertical{position:relative;width:30px;height:200px;display:inline-block;margin-right:10px}.progress.vertical>.progress-bar{width:100%;position:absolute;bottom:0}.progress.vertical.progress-sm,.progress.vertical.sm{width:20px}.progress.vertical.progress-xs,.progress.vertical.xs{width:10px}.progress.vertical.progress-xxs,.progress.vertical.xxs{width:3px}.table tr>td .progress{margin:0}.small-box{border-radius:.25rem;box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);position:relative;display:block;margin-bottom:20px}.small-box>.inner{padding:10px}.small-box>.small-box-footer{position:relative;text-align:center;padding:3px 0;color:#fff;color:rgba(255,255,255,.8);display:block;z-index:10;background:rgba(0,0,0,.1);text-decoration:none}.small-box>.small-box-footer:hover{color:#fff;background:rgba(0,0,0,.15)}.small-box h3{font-size:38px;font-weight:700;margin:0 0 10px 0;white-space:nowrap;padding:0}.small-box p{font-size:15px}.small-box p>small{display:block;color:#f9f9f9;font-size:13px;margin-top:5px}.small-box h3,.small-box p{z-index:5}.small-box .icon{transition:all .3s linear;position:absolute;top:-10px;right:10px;z-index:0;font-size:90px;color:rgba(0,0,0,.15)}.small-box:hover{text-decoration:none}.small-box:hover .icon{font-size:95px}@media (max-width:767.98px){.small-box{text-align:center}.small-box .icon{display:none}.small-box p{font-size:12px}}.card{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2)}.card.bg-dark,.card.bg-dark .card-body{color:#fff}.card.collapsed-card .card-body,.card.collapsed-card .card-footer{display:none}.card .nav.flex-column>li{border-bottom:1px solid rgba(0,0,0,.125);margin:0}.card .nav.flex-column>li:last-of-type{border-bottom:none}.card.height-control .card-body{max-height:300px;overflow:auto}.card .border-right{border-right:1px solid rgba(0,0,0,.125)}.card .border-left{border-left:1px solid rgba(0,0,0,.125)}.card>.loading-img,.card>.overlay,.overlay-wrapper>.loading-img,.overlay-wrapper>.overlay{position:absolute;top:0;left:0;width:100%;height:100%}.card .overlay,.overlay-wrapper .overlay{z-index:50;background:rgba(255,255,255,.7);border-radius:.25rem}.card .overlay>.fa,.overlay-wrapper .overlay>.fa{position:absolute;top:50%;left:50%;margin-left:-15px;margin-top:-15px;color:#000;font-size:30px}.card .overlay.dark,.overlay-wrapper .overlay.dark{background:rgba(0,0,0,.5)}.card-body::after,.card-footer::after,.card-header::after{display:block;clear:both;content:\"\"}.card-header{position:relative;background-color:transparent;border-bottom:1px solid rgba(0,0,0,.125);border-top-left-radius:.25rem;border-top-right-radius:.25rem}.collapsed-card .card-header{border-bottom:none}.card-header>.card-tools{position:absolute;right:1rem;top:.5rem}.card-header>.card-tools [data-toggle=tooltip]{position:relative}.card-title{font-size:1.25rem;font-weight:400;margin:0}.btn-tool{padding:.25rem .5rem;font-size:.875rem;background:0 0;color:#adb5bd}.btn-group.show .btn-tool,.btn-tool:hover{color:#495057}.btn-tool:focus,.show .btn-tool{box-shadow:none!important}.card-body>.table{margin-bottom:0}.card-body>.table>thead>tr>td,.card-body>.table>thead>tr>th{border-top-width:0}.card-body .fc{margin-top:5px}.card-body .full-width-chart{margin:-19px}.card-body.p-0 .full-width-chart{margin:-9px}.chart-legend{margin:10px 0}@media (max-width:576px){.chart-legend>li{float:left;margin-right:10px}}.card-comments{background:#f7f7f7}.card-comments .card-comment{padding:8px 0;border-bottom:1px solid #eee}.card-comments .card-comment::after{display:block;clear:both;content:\"\"}.card-comments .card-comment:last-of-type{border-bottom:0}.card-comments .card-comment:first-of-type{padding-top:0}.card-comments .card-comment img{float:left}.card-comments .comment-text{margin-left:40px;color:#555}.card-comments .username{color:#444;display:block;font-weight:600}.card-comments .text-muted{font-weight:400;font-size:12px}.todo-list{margin:0;padding:0;list-style:none;overflow:auto}.todo-list>li{border-radius:2px;padding:10px;background:#f4f4f4;margin-bottom:2px;border-left:2px solid #e6e7e8;color:#444}.todo-list>li:last-of-type{margin-bottom:0}.todo-list>li>input[type=checkbox]{margin:0 10px 0 5px}.todo-list>li .text{display:inline-block;margin-left:5px;font-weight:600}.todo-list>li .label{margin-left:10px;font-size:9px}.todo-list>li .tools{display:none;float:right;color:#dc3545}.todo-list>li .tools>.fa,.todo-list>li .tools>.glyphicon,.todo-list>li .tools>.ion{margin-right:5px;cursor:pointer}.todo-list>li:hover .tools{display:inline-block}.todo-list>li.done{color:#999}.todo-list>li.done .text{text-decoration:line-through;font-weight:500}.todo-list>li.done .label{background:#adb5bd!important}.todo-list .danger{border-left-color:#dc3545}.todo-list .warning{border-left-color:#ffc107}.todo-list .info{border-left-color:#17a2b8}.todo-list .success{border-left-color:#28a745}.todo-list .primary{border-left-color:#007bff}.todo-list .handle{display:inline-block;cursor:move;margin:0 5px}.card-input{max-width:200px}.card-primary:not(.card-outline) .card-header{background-color:#007bff;border-bottom:0}.card-primary:not(.card-outline) .card-header,.card-primary:not(.card-outline) .card-header a{color:#fff}.card-primary.card-outline{border-top:3px solid #007bff}.bg-primary .btn-tool,.bg-primary-gradient .btn-tool,.card-primary:not(.card-outline) .btn-tool,.label-primary .btn-tool{color:rgba(255,255,255,.8)}.bg-primary .btn-tool:hover,.bg-primary-gradient .btn-tool:hover,.card-primary:not(.card-outline) .btn-tool:hover,.label-primary .btn-tool:hover{color:#fff}.card-secondary:not(.card-outline) .card-header{background-color:#6c757d;border-bottom:0}.card-secondary:not(.card-outline) .card-header,.card-secondary:not(.card-outline) .card-header a{color:#fff}.card-secondary.card-outline{border-top:3px solid #6c757d}.bg-secondary .btn-tool,.bg-secondary-gradient .btn-tool,.card-secondary:not(.card-outline) .btn-tool{color:rgba(255,255,255,.8)}.bg-secondary .btn-tool:hover,.bg-secondary-gradient .btn-tool:hover,.card-secondary:not(.card-outline) .btn-tool:hover{color:#fff}.card-success:not(.card-outline) .card-header{background-color:#28a745;border-bottom:0}.card-success:not(.card-outline) .card-header,.card-success:not(.card-outline) .card-header a{color:#fff}.card-success.card-outline{border-top:3px solid #28a745}.alert-success .btn-tool,.bg-success .btn-tool,.bg-success-gradient .btn-tool,.card-success:not(.card-outline) .btn-tool,.label-success .btn-tool{color:rgba(255,255,255,.8)}.alert-success .btn-tool:hover,.bg-success .btn-tool:hover,.bg-success-gradient .btn-tool:hover,.card-success:not(.card-outline) .btn-tool:hover,.label-success .btn-tool:hover{color:#fff}.card-info:not(.card-outline) .card-header{background-color:#17a2b8;border-bottom:0}.card-info:not(.card-outline) .card-header,.card-info:not(.card-outline) .card-header a{color:#fff}.card-info.card-outline{border-top:3px solid #17a2b8}.alert-info .btn-tool,.bg-info .btn-tool,.bg-info-gradient .btn-tool,.card-info:not(.card-outline) .btn-tool,.label-info .btn-tool{color:rgba(255,255,255,.8)}.alert-info .btn-tool:hover,.bg-info .btn-tool:hover,.bg-info-gradient .btn-tool:hover,.card-info:not(.card-outline) .btn-tool:hover,.label-info .btn-tool:hover{color:#fff}.card-warning:not(.card-outline) .card-header{background-color:#ffc107;border-bottom:0}.card-warning:not(.card-outline) .card-header,.card-warning:not(.card-outline) .card-header a{color:#1f2d3d}.card-warning.card-outline{border-top:3px solid #ffc107}.alert-warning .btn-tool,.bg-warning .btn-tool,.bg-warning-gradient .btn-tool,.card-warning:not(.card-outline) .btn-tool,.label-warning .btn-tool{color:rgba(31,45,61,.8)}.alert-warning .btn-tool:hover,.bg-warning .btn-tool:hover,.bg-warning-gradient .btn-tool:hover,.card-warning:not(.card-outline) .btn-tool:hover,.label-warning .btn-tool:hover{color:#1f2d3d}.card-danger:not(.card-outline) .card-header{background-color:#dc3545;border-bottom:0}.card-danger:not(.card-outline) .card-header,.card-danger:not(.card-outline) .card-header a{color:#fff}.card-danger.card-outline{border-top:3px solid #dc3545}.alert-danger .btn-tool,.alert-error .btn-tool,.bg-danger .btn-tool,.bg-danger-gradient .btn-tool,.card-danger:not(.card-outline) .btn-tool,.label-danger .btn-tool{color:rgba(255,255,255,.8)}.alert-danger .btn-tool:hover,.alert-error .btn-tool:hover,.bg-danger .btn-tool:hover,.bg-danger-gradient .btn-tool:hover,.card-danger:not(.card-outline) .btn-tool:hover,.label-danger .btn-tool:hover{color:#fff}.card-light:not(.card-outline) .card-header{background-color:#f8f9fa;border-bottom:0}.card-light:not(.card-outline) .card-header,.card-light:not(.card-outline) .card-header a{color:#1f2d3d}.card-light.card-outline{border-top:3px solid #f8f9fa}.bg-light .btn-tool,.bg-light-gradient .btn-tool,.card-light:not(.card-outline) .btn-tool{color:rgba(31,45,61,.8)}.bg-light .btn-tool:hover,.bg-light-gradient .btn-tool:hover,.card-light:not(.card-outline) .btn-tool:hover{color:#1f2d3d}.card-dark:not(.card-outline) .card-header{background-color:#343a40;border-bottom:0}.card-dark:not(.card-outline) .card-header,.card-dark:not(.card-outline) .card-header a{color:#fff}.card-dark.card-outline{border-top:3px solid #343a40}.bg-dark .btn-tool,.bg-dark-gradient .btn-tool,.card-dark:not(.card-outline) .btn-tool{color:rgba(255,255,255,.8)}.bg-dark .btn-tool:hover,.bg-dark-gradient .btn-tool:hover,.card-dark:not(.card-outline) .btn-tool:hover{color:#fff}.info-box{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;padding:.5rem;min-height:80px;background:#fff}.info-box .progress{background-color:rgba(0,0,0,.125);margin:5px 0;height:2px}.info-box .progress .progress-bar{background-color:#fff}.info-box-icon{border-radius:.25rem;display:block;width:70px;text-align:center;font-size:30px}.info-box-icon>img{max-width:100%}.info-box-content{padding:5px 10px;flex:1}.info-box-number{display:block;font-weight:700}.info-box-text,.progress-description{display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.info-box.bg-primary,.info-box.bg-primary-gradient,.info-box.label-primary{color:#fff}.info-box.bg-primary .progress-bar,.info-box.bg-primary-gradient .progress-bar,.info-box.label-primary .progress-bar{background-color:#fff}.info-box.bg-secondary,.info-box.bg-secondary-gradient{color:#fff}.info-box.bg-secondary .progress-bar,.info-box.bg-secondary-gradient .progress-bar{background-color:#fff}.info-box.alert-success,.info-box.bg-success,.info-box.bg-success-gradient,.info-box.label-success{color:#fff}.info-box.alert-success .progress-bar,.info-box.bg-success .progress-bar,.info-box.bg-success-gradient .progress-bar,.info-box.label-success .progress-bar{background-color:#fff}.info-box.alert-info,.info-box.bg-info,.info-box.bg-info-gradient,.info-box.label-info{color:#fff}.info-box.alert-info .progress-bar,.info-box.bg-info .progress-bar,.info-box.bg-info-gradient .progress-bar,.info-box.label-info .progress-bar{background-color:#fff}.info-box.alert-warning,.info-box.bg-warning,.info-box.bg-warning-gradient,.info-box.label-warning{color:#1f2d3d}.info-box.alert-warning .progress-bar,.info-box.bg-warning .progress-bar,.info-box.bg-warning-gradient .progress-bar,.info-box.label-warning .progress-bar{background-color:#1f2d3d}.info-box.alert-danger,.info-box.alert-error,.info-box.bg-danger,.info-box.bg-danger-gradient,.info-box.label-danger{color:#fff}.info-box.alert-danger .progress-bar,.info-box.alert-error .progress-bar,.info-box.bg-danger .progress-bar,.info-box.bg-danger-gradient .progress-bar,.info-box.label-danger .progress-bar{background-color:#fff}.info-box.bg-light,.info-box.bg-light-gradient{color:#1f2d3d}.info-box.bg-light .progress-bar,.info-box.bg-light-gradient .progress-bar{background-color:#1f2d3d}.info-box.bg-dark,.info-box.bg-dark-gradient{color:#fff}.info-box.bg-dark .progress-bar,.info-box.bg-dark-gradient .progress-bar{background-color:#fff}.info-box-more{display:block}.progress-description{margin:0}.timeline{position:relative;margin:0 0 30px 0;padding:0;list-style:none}.timeline:before{content:'';position:absolute;top:0;bottom:0;width:4px;background:#ddd;left:31px;margin:0;border-radius:.25rem}.timeline>li{position:relative;margin-right:10px;margin-bottom:15px}.timeline>li::after{display:block;clear:both;content:\"\"}.timeline>li>.timeline-item{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;margin-top:0;background:#fff;color:#444;margin-left:60px;margin-right:15px;padding:0;position:relative}.timeline>li>.timeline-item>.time{color:#999;float:right;padding:10px;font-size:12px}.timeline>li>.timeline-item>.timeline-header{margin:0;color:#555;border-bottom:1px solid rgba(0,0,0,.125);padding:10px;font-size:16px;line-height:1.1}.timeline>li>.timeline-item>.timeline-header>a{font-weight:600}.timeline>li>.timeline-item>.timeline-body,.timeline>li>.timeline-item>.timeline-footer{padding:10px}.timeline>li>.fa,.timeline>li>.glyphicon,.timeline>li>.ion{width:30px;height:30px;font-size:15px;line-height:30px;position:absolute;background:#adb5bd;border-radius:50%;text-align:center;left:18px;top:0}.timeline>.time-label>span{font-weight:600;padding:5px;display:inline-block;background-color:#fff;border-radius:4px}.timeline-inverse>li>.timeline-item{background:#f8f9fa;border:1px solid #ddd;box-shadow:none}.timeline-inverse>li>.timeline-item>.timeline-header{border-bottom-color:#ddd}.btn.btn-flat{border-radius:0;box-shadow:none;border-width:1px}.btn.btn-file{position:relative;overflow:hidden}.btn.btn-file>input[type=file]{position:absolute;top:0;right:0;min-width:100%;min-height:100%;font-size:100px;text-align:right;opacity:0;outline:0;background:#fff;cursor:inherit;display:block}.btn-default{background-color:#f4f4f4;color:#444;border-color:#ddd}.btn-default.hover,.btn-default:active,.btn-default:hover{background-color:#e7e7e7}.btn-app{border-radius:3px;position:relative;padding:15px 5px;margin:0 0 10px 10px;min-width:80px;height:60px;text-align:center;color:#666;border:1px solid #ddd;background-color:#f4f4f4;font-size:12px}.btn-app>.fa,.btn-app>.glyphicon,.btn-app>.ion{font-size:20px;display:block}.btn-app:hover{background:#f4f4f4;color:#444;border-color:#aaa}.btn-app:active,.btn-app:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-app>.badge{position:absolute;top:-3px;right:-10px;font-size:10px;font-weight:400}.callout{border-radius:.25rem;background-color:#fff;padding:.5rem 1rem .5rem .5rem;border-left:5px solid #eee}.callout a{color:#fff;text-decoration:underline}.callout a:hover{color:#eee}.callout p:last-child{margin-bottom:0}.callout.callout-danger{border-left-color:#bd2130}.callout.callout-warning{border-left-color:#d39e00}.callout.callout-info{border-left-color:#117a8b}.callout.callout-success{border-left-color:#1e7e34}.alert .icon{margin-right:10px}.alert .close,.alert .mailbox-attachment-close{color:#000;opacity:.2}.alert .close:hover,.alert .mailbox-attachment-close:hover{opacity:.5}.alert a{color:#fff;text-decoration:underline}.alert-success{border-color:#23923d}.alert-danger,.alert-error{border-color:#d32535}.alert-warning{border-color:#edb100}.alert-info{border-color:#148ea1}.nav-pills .nav-link{color:#6c757d}.nav-pills .nav-link:not(.active):hover{color:#007bff}.products-list{list-style:none;margin:0;padding:0}.products-list>.item{border-radius:.25rem;padding:10px 0;background:#fff}.products-list>.item::after{display:block;clear:both;content:\"\"}.products-list .product-img{float:left}.products-list .product-img img{width:50px;height:50px}.products-list .product-info{margin-left:60px}.products-list .product-title{font-weight:600}.products-list .product-description{display:block;color:#6c757d;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.product-list-in-card>.item{border-radius:0;border-bottom:1px solid rgba(0,0,0,.125)}.product-list-in-card>.item:last-of-type{border-bottom-width:0}.table.no-border,.table.no-border td,.table.no-border th{border:0}.table.text-center,.table.text-center td,.table.text-center th{text-align:center}.table-valign-middle tbody>tr>td,.table-valign-middle tbody>tr>th,.table-valign-middle thead>tr>td,.table-valign-middle thead>tr>th{vertical-align:middle}.label-default{background-color:#adb5bd;color:#444}.direct-chat .card-body{position:relative;overflow-x:hidden;padding:0}.direct-chat.chat-pane-open .direct-chat-contacts{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.direct-chat-messages{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);padding:10px;height:250px;overflow:auto}.direct-chat-msg,.direct-chat-text{display:block}.direct-chat-msg{margin-bottom:10px}.direct-chat-msg::after{display:block;clear:both;content:\"\"}.direct-chat-contacts,.direct-chat-messages{transition:transform .5s ease-in-out}.direct-chat-text{border-radius:.3rem;position:relative;padding:5px 10px;background:#d2d6de;border:1px solid #d2d6de;margin:5px 0 0 50px;color:#444}.direct-chat-text:after,.direct-chat-text:before{position:absolute;right:100%;top:15px;border:solid transparent;border-right-color:#d2d6de;content:' ';height:0;width:0;pointer-events:none}.direct-chat-text:after{border-width:5px;margin-top:-5px}.direct-chat-text:before{border-width:6px;margin-top:-6px}.right .direct-chat-text{margin-right:50px;margin-left:0}.right .direct-chat-text:after,.right .direct-chat-text:before{right:auto;left:100%;border-right-color:transparent;border-left-color:#d2d6de}.direct-chat-img{border-radius:50%;float:left;width:40px;height:40px}.right .direct-chat-img{float:right}.direct-chat-info{display:block;margin-bottom:2px;font-size:.875rem}.direct-chat-name{font-weight:600}.direct-chat-timestamp{color:#999}.direct-chat-contacts-open .direct-chat-contacts{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.direct-chat-contacts{-webkit-transform:translate(101%,0);-ms-transform:translate(101%,0);transform:translate(101%,0);position:absolute;top:0;bottom:0;height:250px;width:100%;background:#222d32;color:#fff;overflow:auto}.contacts-list>li{border-bottom:1px solid rgba(0,0,0,.2);padding:10px;margin:0}.contacts-list>li::after{display:block;clear:both;content:\"\"}.contacts-list>li:last-of-type{border-bottom:none}.contacts-list-img{border-radius:50%;width:40px;float:left}.contacts-list-info{margin-left:45px;color:#fff}.contacts-list-name,.contacts-list-status{display:block}.contacts-list-name{font-weight:600}.contacts-list-status{font-size:.875rem}.contacts-list-date{color:#aaa;font-weight:400}.contacts-list-msg{color:#999}.direct-chat-danger .right>.direct-chat-text{background:#dc3545;border-color:#dc3545;color:#fff}.direct-chat-danger .right>.direct-chat-text:after,.direct-chat-danger .right>.direct-chat-text:before{border-left-color:#dc3545}.direct-chat-primary .right>.direct-chat-text{background:#007bff;border-color:#007bff;color:#fff}.direct-chat-primary .right>.direct-chat-text:after,.direct-chat-primary .right>.direct-chat-text:before{border-left-color:#007bff}.direct-chat-warning .right>.direct-chat-text{background:#ffc107;border-color:#ffc107;color:#1f2d3d}.direct-chat-warning .right>.direct-chat-text:after,.direct-chat-warning .right>.direct-chat-text:before{border-left-color:#ffc107}.direct-chat-info .right>.direct-chat-text{background:#17a2b8;border-color:#17a2b8;color:#fff}.direct-chat-info .right>.direct-chat-text:after,.direct-chat-info .right>.direct-chat-text:before{border-left-color:#17a2b8}.direct-chat-success .right>.direct-chat-text{background:#28a745;border-color:#28a745;color:#fff}.direct-chat-success .right>.direct-chat-text:after,.direct-chat-success .right>.direct-chat-text:before{border-left-color:#28a745}.users-list>li{width:25%;float:left;padding:10px;text-align:center}.users-list>li img{border-radius:50%;max-width:100%;height:auto}.users-list>li>a:hover,.users-list>li>a:hover .users-list-name{color:#999}.users-list-date,.users-list-name{display:block}.users-list-name{font-size:.875rem;color:#444;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.users-list-date{color:#999;font-size:12px}.carousel-control.left,.carousel-control.right{background-image:none}.carousel-control>.fa{font-size:40px;position:absolute;top:50%;z-index:5;display:inline-block;margin-top:-20px}.card-widget{border:none;position:relative}.widget-user .widget-user-header{padding:1rem;height:120px;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.widget-user .widget-user-username{margin-top:0;margin-bottom:5px;font-size:25px;font-weight:300;text-shadow:0 1px 1px rgba(0,0,0,.2)}.widget-user .widget-user-desc{margin-top:0}.widget-user .widget-user-image{position:absolute;top:65px;left:50%;margin-left:-45px}.widget-user .widget-user-image>img{width:90px;height:auto;border:3px solid #fff}.widget-user .card-footer{padding-top:40px}.widget-user-2 .widget-user-header{padding:1rem;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.widget-user-2 .widget-user-username{margin-top:5px;margin-bottom:5px;font-size:25px;font-weight:300}.widget-user-2 .widget-user-desc{margin-top:0}.widget-user-2 .widget-user-desc,.widget-user-2 .widget-user-username{margin-left:75px}.widget-user-2 .widget-user-image>img{width:65px;height:auto;float:left}.mailbox-messages>.table{margin:0}.mailbox-controls{padding:5px}.mailbox-controls.with-border{border-bottom:1px solid rgba(0,0,0,.125)}.mailbox-read-info{border-bottom:1px solid rgba(0,0,0,.125);padding:10px}.mailbox-read-info h3{font-size:20px;margin:0}.mailbox-read-info h5{margin:0;padding:5px 0 0 0}.mailbox-read-time{color:#999;font-size:13px}.mailbox-read-message{padding:10px}.mailbox-attachments li{float:left;width:200px;border:1px solid #eee;margin-bottom:10px;margin-right:10px}.mailbox-attachment-name{font-weight:700;color:#666}.mailbox-attachment-icon,.mailbox-attachment-info,.mailbox-attachment-size{display:block}.mailbox-attachment-info{padding:10px;background:#f4f4f4}.mailbox-attachment-size{color:#999;font-size:12px}.mailbox-attachment-icon{text-align:center;font-size:65px;color:#666;padding:20px 10px}.mailbox-attachment-icon.has-img{padding:0}.mailbox-attachment-icon.has-img>img{max-width:100%;height:auto}.lockscreen{background:#e9ecef}.lockscreen-logo{font-size:35px;text-align:center;margin-bottom:25px;font-weight:300}.lockscreen-logo a{color:#444}.lockscreen-wrapper{max-width:400px;margin:0 auto;margin-top:10%}.lockscreen .lockscreen-name{text-align:center;font-weight:600}.lockscreen-item{border-radius:4px;padding:0;background:#fff;position:relative;margin:10px auto 30px auto;width:290px}.lockscreen-image{border-radius:50%;position:absolute;left:-10px;top:-25px;background:#fff;padding:5px;z-index:10}.lockscreen-image>img{border-radius:50%;width:70px;height:70px}.lockscreen-credentials{margin-left:70px}.lockscreen-credentials .form-control{border:0}.lockscreen-credentials .btn{background-color:#fff;border:0;padding:0 10px}.lockscreen-footer{margin-top:10px}.login-logo,.register-logo{font-size:35px;text-align:center;margin-bottom:25px;font-weight:300}.login-logo a,.register-logo a{color:#444}.login-page,.register-page{background:#e9ecef}.login-box,.register-box{width:360px;margin:7% auto}@media (max-width:576px){.login-box,.register-box{width:90%;margin-top:20px}}.login-box-body,.register-box-body{background:#fff;padding:20px;border-top:0;color:#666}.login-box-body .form-control-feedback,.register-box-body .form-control-feedback{color:#777}.login-box-msg,.register-box-msg{margin:0;text-align:center;padding:0 20px 20px 20px}.social-auth-links{margin:10px 0}.error-page{width:600px;margin:20px auto 0 auto}@media (max-width:767.98px){.error-page{width:100%}}.error-page>.headline{float:left;font-size:100px;font-weight:300}@media (max-width:767.98px){.error-page>.headline{float:none;text-align:center}}.error-page>.error-content{margin-left:190px;display:block}@media (max-width:767.98px){.error-page>.error-content{margin-left:0}}.error-page>.error-content>h3{font-weight:300;font-size:25px}@media (max-width:767.98px){.error-page>.error-content>h3{text-align:center}}.invoice{position:relative;background:#fff;border:1px solid rgba(0,0,0,.125)}.invoice-title{margin-top:0}.profile-user-img{margin:0 auto;width:100px;padding:3px;border:3px solid #adb5bd}.profile-username{font-size:21px;margin-top:5px}.post{border-bottom:1px solid #adb5bd;margin-bottom:15px;padding-bottom:15px;color:#666}.post:last-of-type{border-bottom:0;margin-bottom:0;padding-bottom:0}.post .user-block{margin-bottom:15px}.fc-button{background:#f4f4f4;background-image:none;color:#444;border-color:#ddd;border-bottom-color:#ddd}.fc-button.hover,.fc-button:active,.fc-button:hover{background-color:#e9e9e9}.fc-header-title h2{font-size:15px;line-height:1.6em;color:#666;margin-left:10px}.fc-header-right{padding-right:10px}.fc-header-left{padding-left:10px}.fc-widget-header{background:#fafafa}.fc-grid{width:100%;border:0}.fc-widget-content:first-of-type,.fc-widget-header:first-of-type{border-left:0;border-right:0}.fc-widget-content:last-of-type,.fc-widget-header:last-of-type{border-right:0}.fc-toolbar{padding:1rem;margin:0}.fc-day-number{font-size:20px;font-weight:300;padding-right:10px}.fc-color-picker{list-style:none;margin:0;padding:0}.fc-color-picker>li{float:left;font-size:30px;margin-right:5px;line-height:30px}.fc-color-picker>li .fa{transition:transform linear .3s}.fc-color-picker>li .fa:hover{-ms-transform:rotate(30deg);transform:rotate(30deg)}#add-new-event{transition:all linear .3s}.external-event{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);padding:5px 10px;font-weight:700;margin-bottom:4px;border-radius:.25rem;cursor:move}.external-event:hover{box-shadow:inset 0 0 90px rgba(0,0,0,.2)}.select2-container--default.select2-container--focus,.select2-container--default:active,.select2-container--default:focus,.select2-selection.select2-container--focus,.select2-selection:active,.select2-selection:focus{outline:0}.select2-container--default .select2-selection--single,.select2-selection .select2-selection--single{border:1px solid #d2d6de;padding:6px 12px;height:34px}.select2-container--default.select2-container--open{border-color:#007bff}.select2-dropdown{border:1px solid #d2d6de}.select2-container--default .select2-results__option--highlighted[aria-selected]{background-color:#007bff;color:#fff}.select2-results__option{padding:6px 12px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{padding-left:0;padding-right:0;height:auto;margin-top:-4px}.select2-container[dir=rtl] .select2-selection--single .select2-selection__rendered{padding-right:6px;padding-left:20px}.select2-container--default .select2-selection--single .select2-selection__arrow{height:28px;right:3px}.select2-container--default .select2-selection--single .select2-selection__arrow b{margin-top:0}.select2-dropdown .select2-search__field,.select2-search--inline .select2-search__field{border:1px solid #d2d6de}.select2-dropdown .select2-search__field:focus,.select2-search--inline .select2-search__field:focus{outline:0;border:1px solid #007bff}.select2-container--default .select2-results__option[aria-disabled=true]{color:#999}.select2-container--default .select2-results__option[aria-selected=true]{background-color:#ddd}.select2-container--default .select2-results__option[aria-selected=true],.select2-container--default .select2-results__option[aria-selected=true]:hover{color:#444}.select2-container--default .select2-selection--multiple{border:1px solid #d2d6de}.select2-container--default .select2-selection--multiple:focus{border-color:#007bff}.select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#d2d6de}.select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#007bff;border-color:#006fe6;padding:1px 10px;color:#fff}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{margin-right:5px;color:rgba(255,255,255,.7)}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container .select2-selection--single .select2-selection__rendered{padding-right:10px}a.text-muted:hover{color:#007bff!important}.border-transparent{border-color:transparent!important}.description-block{display:block;margin:10px 0;text-align:center}.description-block.margin-bottom{margin-bottom:25px}.description-block>.description-header{margin:0;padding:0;font-weight:600;font-size:16px}.description-block>.description-text{text-transform:uppercase}.bg-primary,.bg-primary a,.label-primary,.label-primary a{color:#fff!important}.bg-secondary,.bg-secondary a{color:#fff!important}.alert-success,.alert-success a,.bg-success,.bg-success a,.label-success,.label-success a{color:#fff!important}.alert-info,.alert-info a,.bg-info,.bg-info a,.label-info,.label-info a{color:#fff!important}.alert-warning,.alert-warning a,.bg-warning,.bg-warning a,.label-warning,.label-warning a{color:#1f2d3d!important}.alert-danger,.alert-danger a,.alert-error,.alert-error a,.bg-danger,.bg-danger a,.label-danger,.label-danger a{color:#fff!important}.bg-light,.bg-light a{color:#1f2d3d!important}.bg-dark,.bg-dark a{color:#fff!important}.bg-gray{color:#000;background-color:#adb5bd}.bg-gray-light{background-color:#f2f4f5;color:#1f2d3d!important}.bg-black{background-color:#000;color:#fff!important}.bg-white{background-color:#fff;color:#1f2d3d!important}[class^=bg-].disabled{opacity:.65}.link-muted{color:#5d6974}.link-muted:focus,.link-muted:hover{color:#464f58}.link-black{color:#666}.link-black:focus,.link-black:hover{color:#999}.hide{display:none!important}.no-border{border:0!important}.no-shadow{box-shadow:none!important}.chart-legend,.contacts-list,.list-unstyled,.mailbox-attachments,.users-list{list-style:none;margin:0;padding:0}.list-group-unbordered>.list-group-item{border-left:0;border-right:0;border-radius:0;padding-left:0;padding-right:0}.flat{border-radius:0!important}.jqstooltip{padding:5px!important;width:auto!important;height:auto!important}.bg-primary-gradient{background:#007bff;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#007bff),color-stop(1,#3395ff));background:-ms-linear-gradient(bottom,#007bff,#3395ff);background:-moz-linear-gradient(center bottom,#007bff 0,#3395ff 100%);background:-o-linear-gradient(#3395ff,#007bff);color:#fff}.bg-secondary-gradient{background:#6c757d;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#6c757d),color-stop(1,#868e96));background:-ms-linear-gradient(bottom,#6c757d,#868e96);background:-moz-linear-gradient(center bottom,#6c757d 0,#868e96 100%);background:-o-linear-gradient(#868e96,#6c757d);color:#fff}.bg-success-gradient{background:#28a745;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#28a745),color-stop(1,#34ce57));background:-ms-linear-gradient(bottom,#28a745,#34ce57);background:-moz-linear-gradient(center bottom,#28a745 0,#34ce57 100%);background:-o-linear-gradient(#34ce57,#28a745);color:#fff}.bg-info-gradient{background:#17a2b8;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#17a2b8),color-stop(1,#1fc8e3));background:-ms-linear-gradient(bottom,#17a2b8,#1fc8e3);background:-moz-linear-gradient(center bottom,#17a2b8 0,#1fc8e3 100%);background:-o-linear-gradient(#1fc8e3,#17a2b8);color:#fff}.bg-warning-gradient{background:#ffc107;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#ffc107),color-stop(1,#ffce3a));background:-ms-linear-gradient(bottom,#ffc107,#ffce3a);background:-moz-linear-gradient(center bottom,#ffc107 0,#ffce3a 100%);background:-o-linear-gradient(#ffce3a,#ffc107);color:#1f2d3d}.bg-danger-gradient{background:#dc3545;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#dc3545),color-stop(1,#e4606d));background:-ms-linear-gradient(bottom,#dc3545,#e4606d);background:-moz-linear-gradient(center bottom,#dc3545 0,#e4606d 100%);background:-o-linear-gradient(#e4606d,#dc3545);color:#fff}.bg-light-gradient{background:#f8f9fa;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#f8f9fa),color-stop(1,#fff));background:-ms-linear-gradient(bottom,#f8f9fa,#fff);background:-moz-linear-gradient(center bottom,#f8f9fa 0,#fff 100%);background:-o-linear-gradient(white,#f8f9fa);color:#1f2d3d}.bg-dark-gradient{background:#343a40;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#343a40),color-stop(1,#4b545c));background:-ms-linear-gradient(bottom,#343a40,#4b545c);background:-moz-linear-gradient(center bottom,#343a40 0,#4b545c 100%);background:-o-linear-gradient(#4b545c,#343a40);color:#fff}.description-block .description-icon{font-size:16px}.list-header{font-size:15px;padding:10px 4px;font-weight:700;color:#666}.list-seperator{height:1px;background:rgba(0,0,0,.125);margin:15px 0 9px 0}.list-link>a{padding:4px;color:#777}.list-link>a:hover{color:#222}.user-block::after{display:block;clear:both;content:\"\"}.user-block img{width:40px;height:40px;float:left}.user-block .comment,.user-block .description,.user-block .username{display:block;margin-left:50px}.user-block .username{font-size:16px;font-weight:600}.user-block .description{color:#999;font-size:13px}.user-block.user-block-sm .comment,.user-block.user-block-sm .description,.user-block.user-block-sm .username{margin-left:40px}.user-block.user-block-sm .username{font-size:14px}.card-comments .card-comment img,.img-lg,.img-md,.img-sm,.user-block.user-block-sm img{float:left}.card-comments .card-comment img,.img-sm,.user-block.user-block-sm img{width:30px!important;height:30px!important}.card-comments .card-comment img+.img-push,.img-sm+.img-push,.user-block.user-block-sm img+.img-push{margin-left:40px}.img-md{width:60px;height:60px}.img-md+.img-push{margin-left:70px}.img-lg{width:100px;height:100px}.img-lg+.img-push{margin-left:110px}.img-bordered{border:3px solid #adb5bd;padding:3px}.img-bordered-sm{border:2px solid #adb5bd;padding:2px}.img-rounded{border-radius:.25rem}.img-circle{border-radius:50%}.img-size-32,.img-size-50,.img-size-64{height:auto}.img-size-64{width:64px}.img-size-50{width:50px}.img-size-32{width:32px}.size-32,.size-40,.size-50{display:block;text-align:center}.size-32{width:32px;height:32px;line-height:32px}.size-40{width:40px;height:40px;line-height:40px}.size-50{width:50px;height:50px;line-height:50px}.attachment-block{border:1px solid rgba(0,0,0,.125);padding:5px;margin-bottom:10px;background:#f7f7f7}.attachment-block .attachment-img{max-width:100px;max-height:100px;height:auto;float:left}.attachment-block .attachment-pushed{margin-left:110px}.attachment-block .attachment-heading{margin:0}.attachment-block .attachment-text{color:#555}.connectedSortable{min-height:100px}.ui-helper-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sort-highlight{background:#f4f4f4;border:1px dashed #ddd;margin-bottom:10px}.chart{position:relative;overflow:hidden}.flex-1{flex:1}@media print{.content-header,.main-header,.main-sidebar,.no-print{display:none!important}.content-wrapper,.main-footer{margin-left:0!important;min-height:0!important;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.layout-fixed .content-wrapper{padding-top:0!important}.invoice{width:100%;border:0;margin:0;padding:0}.invoice-col{float:left;width:33.3333333%}.table-responsive{overflow:auto}.table-responsive>.table tr td,.table-responsive>.table tr th{white-space:normal!important}}.text-bold,.text-bold.table td,.text-bold.table th{font-weight:700}.text-sm{font-size:.875rem}.text-xs{font-size:1rem}.text-lg{font-size:1.25rem}.text-xl{font-size:2rem}.elevation-0{box-shadow:none}.callout,.elevation-1,.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}.elevation-2{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.elevation-3{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23)}.elevation-4{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}.elevation-5{box-shadow:0 19px 38px rgba(0,0,0,.3),0 15px 12px rgba(0,0,0,.22)}.login-card-body,.register-card-body{color:#666}\n\n.skin-blue .main-header .navbar{background-color:#3c8dbc}.skin-blue .main-header .navbar .nav>li>a{color:#fff}.skin-blue .main-header .navbar .nav>li>a:hover,.skin-blue .main-header .navbar .nav>li>a:active,.skin-blue .main-header .navbar .nav>li>a:focus,.skin-blue .main-header .navbar .nav .open>a,.skin-blue .main-header .navbar .nav .open>a:hover,.skin-blue .main-header .navbar .nav .open>a:focus,.skin-blue .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-blue .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-blue .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue .main-header .navbar .sidebar-toggle:hover{background-color:#367fa9}@media (max-width:767px){.skin-blue .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-blue .main-header .navbar .dropdown-menu li a{color:#fff}.skin-blue .main-header .navbar .dropdown-menu li a:hover{background:#367fa9}}.skin-blue .main-header .logo{background-color:#367fa9;color:#fff;border-bottom:0 solid transparent}.skin-blue .main-header .logo:hover{background-color:#357ca5}.skin-blue .main-header li.user-header{background-color:#3c8dbc}.skin-blue .content-header{background:transparent}.skin-blue .wrapper,.skin-blue .main-sidebar,.skin-blue .left-side{background-color:#222d32}.skin-blue .user-panel>.info,.skin-blue .user-panel>.info>a{color:#fff}.skin-blue .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-blue .sidebar-menu>li>a{border-left:3px solid transparent}.skin-blue .sidebar-menu>li:hover>a,.skin-blue .sidebar-menu>li.active>a,.skin-blue .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-blue .sidebar-menu>li.active>a{border-left-color:#3c8dbc}.skin-blue .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-blue .sidebar a{color:#b8c7ce}.skin-blue .sidebar a:hover{text-decoration:none}.skin-blue .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-blue .sidebar-menu .treeview-menu>li.active>a,.skin-blue .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-blue .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-blue .sidebar-form input[type=\"text\"],.skin-blue .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-blue .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-blue .sidebar-form input[type=\"text\"]:focus,.skin-blue .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-blue .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-blue .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-blue.layout-top-nav .main-header>.logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue.layout-top-nav .main-header>.logo:hover{background-color:#3b8ab8}.skin-blue-light .main-header .navbar{background-color:#3c8dbc}.skin-blue-light .main-header .navbar .nav>li>a{color:#fff}.skin-blue-light .main-header .navbar .nav>li>a:hover,.skin-blue-light .main-header .navbar .nav>li>a:active,.skin-blue-light .main-header .navbar .nav>li>a:focus,.skin-blue-light .main-header .navbar .nav .open>a,.skin-blue-light .main-header .navbar .nav .open>a:hover,.skin-blue-light .main-header .navbar .nav .open>a:focus,.skin-blue-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-blue-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-blue-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue-light .main-header .navbar .sidebar-toggle:hover{background-color:#367fa9}@media (max-width:767px){.skin-blue-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-blue-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-blue-light .main-header .navbar .dropdown-menu li a:hover{background:#367fa9}}.skin-blue-light .main-header .logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue-light .main-header .logo:hover{background-color:#3b8ab8}.skin-blue-light .main-header li.user-header{background-color:#3c8dbc}.skin-blue-light .content-header{background:transparent}.skin-blue-light .wrapper,.skin-blue-light .main-sidebar,.skin-blue-light .left-side{background-color:#f9fafc}.skin-blue-light .main-sidebar{border-right:1px solid #d2d6de}.skin-blue-light .user-panel>.info,.skin-blue-light .user-panel>.info>a{color:#444}.skin-blue-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-blue-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-blue-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-blue-light .sidebar-menu>li:hover>a,.skin-blue-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-blue-light .sidebar-menu>li.active{border-left-color:#3c8dbc}.skin-blue-light .sidebar-menu>li.active>a{font-weight:600}.skin-blue-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-blue-light .sidebar a{color:#444}.skin-blue-light .sidebar a:hover{text-decoration:none}.skin-blue-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-blue-light .sidebar-menu .treeview-menu>li.active>a,.skin-blue-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-blue-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-blue-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-blue-light .sidebar-form input[type=\"text\"],.skin-blue-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-blue-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-blue-light .sidebar-form input[type=\"text\"]:focus,.skin-blue-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-blue-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-blue-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-blue-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-blue-light .main-footer{border-top-color:#d2d6de}.skin-blue.layout-top-nav .main-header>.logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue.layout-top-nav .main-header>.logo:hover{background-color:#3b8ab8}.skin-black .main-header{-webkit-box-shadow:0 1px 1px rgba(0,0,0,0.05);box-shadow:0 1px 1px rgba(0,0,0,0.05)}.skin-black .main-header .navbar-toggle{color:#333}.skin-black .main-header .navbar-brand{color:#333;border-right:1px solid #eee}.skin-black .main-header .navbar{background-color:#fff}.skin-black .main-header .navbar .nav>li>a{color:#333}.skin-black .main-header .navbar .nav>li>a:hover,.skin-black .main-header .navbar .nav>li>a:active,.skin-black .main-header .navbar .nav>li>a:focus,.skin-black .main-header .navbar .nav .open>a,.skin-black .main-header .navbar .nav .open>a:hover,.skin-black .main-header .navbar .nav .open>a:focus,.skin-black .main-header .navbar .nav>.active>a{background:#fff;color:#999}.skin-black .main-header .navbar .sidebar-toggle{color:#333}.skin-black .main-header .navbar .sidebar-toggle:hover{color:#999;background:#fff}.skin-black .main-header .navbar>.sidebar-toggle{color:#333;border-right:1px solid #eee}.skin-black .main-header .navbar .navbar-nav>li>a{border-right:1px solid #eee}.skin-black .main-header .navbar .navbar-custom-menu .navbar-nav>li>a,.skin-black .main-header .navbar .navbar-right>li>a{border-left:1px solid #eee;border-right-width:0}.skin-black .main-header .logo{background-color:#fff;color:#333;border-bottom:0 solid transparent;border-right:1px solid #eee}.skin-black .main-header .logo:hover{background-color:#fcfcfc}@media (max-width:767px){.skin-black .main-header .logo{background-color:#222;color:#fff;border-bottom:0 solid transparent;border-right:none}.skin-black .main-header .logo:hover{background-color:#1f1f1f}}.skin-black .main-header li.user-header{background-color:#222}.skin-black .content-header{background:transparent;box-shadow:none}.skin-black .wrapper,.skin-black .main-sidebar,.skin-black .left-side{background-color:#222d32}.skin-black .user-panel>.info,.skin-black .user-panel>.info>a{color:#fff}.skin-black .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-black .sidebar-menu>li>a{border-left:3px solid transparent}.skin-black .sidebar-menu>li:hover>a,.skin-black .sidebar-menu>li.active>a,.skin-black .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-black .sidebar-menu>li.active>a{border-left-color:#fff}.skin-black .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-black .sidebar a{color:#b8c7ce}.skin-black .sidebar a:hover{text-decoration:none}.skin-black .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-black .sidebar-menu .treeview-menu>li.active>a,.skin-black .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-black .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-black .sidebar-form input[type=\"text\"],.skin-black .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-black .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-black .sidebar-form input[type=\"text\"]:focus,.skin-black .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-black .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-black .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-black .pace .pace-progress{background:#222}.skin-black .pace .pace-activity{border-top-color:#222;border-left-color:#222}.skin-black-light .main-header{border-bottom:1px solid #d2d6de}.skin-black-light .main-header .navbar-toggle{color:#333}.skin-black-light .main-header .navbar-brand{color:#333;border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar{background-color:#fff}.skin-black-light .main-header .navbar .nav>li>a{color:#333}.skin-black-light .main-header .navbar .nav>li>a:hover,.skin-black-light .main-header .navbar .nav>li>a:active,.skin-black-light .main-header .navbar .nav>li>a:focus,.skin-black-light .main-header .navbar .nav .open>a,.skin-black-light .main-header .navbar .nav .open>a:hover,.skin-black-light .main-header .navbar .nav .open>a:focus,.skin-black-light .main-header .navbar .nav>.active>a{background:#fff;color:#999}.skin-black-light .main-header .navbar .sidebar-toggle{color:#333}.skin-black-light .main-header .navbar .sidebar-toggle:hover{color:#999;background:#fff}.skin-black-light .main-header .navbar>.sidebar-toggle{color:#333;border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar .navbar-nav>li>a{border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar .navbar-custom-menu .navbar-nav>li>a,.skin-black-light .main-header .navbar .navbar-right>li>a{border-left:1px solid #d2d6de;border-right-width:0}.skin-black-light .main-header .logo{background-color:#fff;color:#333;border-bottom:0 solid transparent;border-right:1px solid #d2d6de}.skin-black-light .main-header .logo:hover{background-color:#fcfcfc}@media (max-width:767px){.skin-black-light .main-header .logo{background-color:#222;color:#fff;border-bottom:0 solid transparent;border-right:none}.skin-black-light .main-header .logo:hover{background-color:#1f1f1f}}.skin-black-light .main-header li.user-header{background-color:#222}.skin-black-light .content-header{background:transparent;box-shadow:none}.skin-black-light .wrapper,.skin-black-light .main-sidebar,.skin-black-light .left-side{background-color:#f9fafc}.skin-black-light .main-sidebar{border-right:1px solid #d2d6de}.skin-black-light .user-panel>.info,.skin-black-light .user-panel>.info>a{color:#444}.skin-black-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-black-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-black-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-black-light .sidebar-menu>li:hover>a,.skin-black-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-black-light .sidebar-menu>li.active{border-left-color:#fff}.skin-black-light .sidebar-menu>li.active>a{font-weight:600}.skin-black-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-black-light .sidebar a{color:#444}.skin-black-light .sidebar a:hover{text-decoration:none}.skin-black-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-black-light .sidebar-menu .treeview-menu>li.active>a,.skin-black-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-black-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-black-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-black-light .sidebar-form input[type=\"text\"],.skin-black-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-black-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-black-light .sidebar-form input[type=\"text\"]:focus,.skin-black-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-black-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-black-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-black-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-green .main-header .navbar{background-color:#00a65a}.skin-green .main-header .navbar .nav>li>a{color:#fff}.skin-green .main-header .navbar .nav>li>a:hover,.skin-green .main-header .navbar .nav>li>a:active,.skin-green .main-header .navbar .nav>li>a:focus,.skin-green .main-header .navbar .nav .open>a,.skin-green .main-header .navbar .nav .open>a:hover,.skin-green .main-header .navbar .nav .open>a:focus,.skin-green .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-green .main-header .navbar .sidebar-toggle{color:#fff}.skin-green .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-green .main-header .navbar .sidebar-toggle{color:#fff}.skin-green .main-header .navbar .sidebar-toggle:hover{background-color:#008d4c}@media (max-width:767px){.skin-green .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-green .main-header .navbar .dropdown-menu li a{color:#fff}.skin-green .main-header .navbar .dropdown-menu li a:hover{background:#008d4c}}.skin-green .main-header .logo{background-color:#008d4c;color:#fff;border-bottom:0 solid transparent}.skin-green .main-header .logo:hover{background-color:#008749}.skin-green .main-header li.user-header{background-color:#00a65a}.skin-green .content-header{background:transparent}.skin-green .wrapper,.skin-green .main-sidebar,.skin-green .left-side{background-color:#222d32}.skin-green .user-panel>.info,.skin-green .user-panel>.info>a{color:#fff}.skin-green .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-green .sidebar-menu>li>a{border-left:3px solid transparent}.skin-green .sidebar-menu>li:hover>a,.skin-green .sidebar-menu>li.active>a,.skin-green .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-green .sidebar-menu>li.active>a{border-left-color:#00a65a}.skin-green .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-green .sidebar a{color:#b8c7ce}.skin-green .sidebar a:hover{text-decoration:none}.skin-green .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-green .sidebar-menu .treeview-menu>li.active>a,.skin-green .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-green .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-green .sidebar-form input[type=\"text\"],.skin-green .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-green .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-green .sidebar-form input[type=\"text\"]:focus,.skin-green .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-green .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-green .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-green-light .main-header .navbar{background-color:#00a65a}.skin-green-light .main-header .navbar .nav>li>a{color:#fff}.skin-green-light .main-header .navbar .nav>li>a:hover,.skin-green-light .main-header .navbar .nav>li>a:active,.skin-green-light .main-header .navbar .nav>li>a:focus,.skin-green-light .main-header .navbar .nav .open>a,.skin-green-light .main-header .navbar .nav .open>a:hover,.skin-green-light .main-header .navbar .nav .open>a:focus,.skin-green-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-green-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-green-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-green-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-green-light .main-header .navbar .sidebar-toggle:hover{background-color:#008d4c}@media (max-width:767px){.skin-green-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-green-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-green-light .main-header .navbar .dropdown-menu li a:hover{background:#008d4c}}.skin-green-light .main-header .logo{background-color:#00a65a;color:#fff;border-bottom:0 solid transparent}.skin-green-light .main-header .logo:hover{background-color:#00a157}.skin-green-light .main-header li.user-header{background-color:#00a65a}.skin-green-light .content-header{background:transparent}.skin-green-light .wrapper,.skin-green-light .main-sidebar,.skin-green-light .left-side{background-color:#f9fafc}.skin-green-light .main-sidebar{border-right:1px solid #d2d6de}.skin-green-light .user-panel>.info,.skin-green-light .user-panel>.info>a{color:#444}.skin-green-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-green-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-green-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-green-light .sidebar-menu>li:hover>a,.skin-green-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-green-light .sidebar-menu>li.active{border-left-color:#00a65a}.skin-green-light .sidebar-menu>li.active>a{font-weight:600}.skin-green-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-green-light .sidebar a{color:#444}.skin-green-light .sidebar a:hover{text-decoration:none}.skin-green-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-green-light .sidebar-menu .treeview-menu>li.active>a,.skin-green-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-green-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-green-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-green-light .sidebar-form input[type=\"text\"],.skin-green-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-green-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-green-light .sidebar-form input[type=\"text\"]:focus,.skin-green-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-green-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-green-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-green-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-red .main-header .navbar{background-color:#dd4b39}.skin-red .main-header .navbar .nav>li>a{color:#fff}.skin-red .main-header .navbar .nav>li>a:hover,.skin-red .main-header .navbar .nav>li>a:active,.skin-red .main-header .navbar .nav>li>a:focus,.skin-red .main-header .navbar .nav .open>a,.skin-red .main-header .navbar .nav .open>a:hover,.skin-red .main-header .navbar .nav .open>a:focus,.skin-red .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-red .main-header .navbar .sidebar-toggle{color:#fff}.skin-red .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-red .main-header .navbar .sidebar-toggle{color:#fff}.skin-red .main-header .navbar .sidebar-toggle:hover{background-color:#d73925}@media (max-width:767px){.skin-red .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-red .main-header .navbar .dropdown-menu li a{color:#fff}.skin-red .main-header .navbar .dropdown-menu li a:hover{background:#d73925}}.skin-red .main-header .logo{background-color:#d73925;color:#fff;border-bottom:0 solid transparent}.skin-red .main-header .logo:hover{background-color:#d33724}.skin-red .main-header li.user-header{background-color:#dd4b39}.skin-red .content-header{background:transparent}.skin-red .wrapper,.skin-red .main-sidebar,.skin-red .left-side{background-color:#222d32}.skin-red .user-panel>.info,.skin-red .user-panel>.info>a{color:#fff}.skin-red .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-red .sidebar-menu>li>a{border-left:3px solid transparent}.skin-red .sidebar-menu>li:hover>a,.skin-red .sidebar-menu>li.active>a,.skin-red .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-red .sidebar-menu>li.active>a{border-left-color:#dd4b39}.skin-red .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-red .sidebar a{color:#b8c7ce}.skin-red .sidebar a:hover{text-decoration:none}.skin-red .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-red .sidebar-menu .treeview-menu>li.active>a,.skin-red .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-red .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-red .sidebar-form input[type=\"text\"],.skin-red .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-red .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-red .sidebar-form input[type=\"text\"]:focus,.skin-red .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-red .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-red .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-red-light .main-header .navbar{background-color:#dd4b39}.skin-red-light .main-header .navbar .nav>li>a{color:#fff}.skin-red-light .main-header .navbar .nav>li>a:hover,.skin-red-light .main-header .navbar .nav>li>a:active,.skin-red-light .main-header .navbar .nav>li>a:focus,.skin-red-light .main-header .navbar .nav .open>a,.skin-red-light .main-header .navbar .nav .open>a:hover,.skin-red-light .main-header .navbar .nav .open>a:focus,.skin-red-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-red-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-red-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-red-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-red-light .main-header .navbar .sidebar-toggle:hover{background-color:#d73925}@media (max-width:767px){.skin-red-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-red-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-red-light .main-header .navbar .dropdown-menu li a:hover{background:#d73925}}.skin-red-light .main-header .logo{background-color:#dd4b39;color:#fff;border-bottom:0 solid transparent}.skin-red-light .main-header .logo:hover{background-color:#dc4735}.skin-red-light .main-header li.user-header{background-color:#dd4b39}.skin-red-light .content-header{background:transparent}.skin-red-light .wrapper,.skin-red-light .main-sidebar,.skin-red-light .left-side{background-color:#f9fafc}.skin-red-light .main-sidebar{border-right:1px solid #d2d6de}.skin-red-light .user-panel>.info,.skin-red-light .user-panel>.info>a{color:#444}.skin-red-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-red-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-red-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-red-light .sidebar-menu>li:hover>a,.skin-red-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-red-light .sidebar-menu>li.active{border-left-color:#dd4b39}.skin-red-light .sidebar-menu>li.active>a{font-weight:600}.skin-red-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-red-light .sidebar a{color:#444}.skin-red-light .sidebar a:hover{text-decoration:none}.skin-red-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-red-light .sidebar-menu .treeview-menu>li.active>a,.skin-red-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-red-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-red-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-red-light .sidebar-form input[type=\"text\"],.skin-red-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-red-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-red-light .sidebar-form input[type=\"text\"]:focus,.skin-red-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-red-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-red-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-red-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-yellow .main-header .navbar{background-color:#f39c12}.skin-yellow .main-header .navbar .nav>li>a{color:#fff}.skin-yellow .main-header .navbar .nav>li>a:hover,.skin-yellow .main-header .navbar .nav>li>a:active,.skin-yellow .main-header .navbar .nav>li>a:focus,.skin-yellow .main-header .navbar .nav .open>a,.skin-yellow .main-header .navbar .nav .open>a:hover,.skin-yellow .main-header .navbar .nav .open>a:focus,.skin-yellow .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-yellow .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-yellow .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow .main-header .navbar .sidebar-toggle:hover{background-color:#e08e0b}@media (max-width:767px){.skin-yellow .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-yellow .main-header .navbar .dropdown-menu li a{color:#fff}.skin-yellow .main-header .navbar .dropdown-menu li a:hover{background:#e08e0b}}.skin-yellow .main-header .logo{background-color:#e08e0b;color:#fff;border-bottom:0 solid transparent}.skin-yellow .main-header .logo:hover{background-color:#db8b0b}.skin-yellow .main-header li.user-header{background-color:#f39c12}.skin-yellow .content-header{background:transparent}.skin-yellow .wrapper,.skin-yellow .main-sidebar,.skin-yellow .left-side{background-color:#222d32}.skin-yellow .user-panel>.info,.skin-yellow .user-panel>.info>a{color:#fff}.skin-yellow .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-yellow .sidebar-menu>li>a{border-left:3px solid transparent}.skin-yellow .sidebar-menu>li:hover>a,.skin-yellow .sidebar-menu>li.active>a,.skin-yellow .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-yellow .sidebar-menu>li.active>a{border-left-color:#f39c12}.skin-yellow .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-yellow .sidebar a{color:#b8c7ce}.skin-yellow .sidebar a:hover{text-decoration:none}.skin-yellow .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-yellow .sidebar-menu .treeview-menu>li.active>a,.skin-yellow .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-yellow .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-yellow .sidebar-form input[type=\"text\"],.skin-yellow .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-yellow .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-yellow .sidebar-form input[type=\"text\"]:focus,.skin-yellow .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-yellow .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-yellow .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-yellow-light .main-header .navbar{background-color:#f39c12}.skin-yellow-light .main-header .navbar .nav>li>a{color:#fff}.skin-yellow-light .main-header .navbar .nav>li>a:hover,.skin-yellow-light .main-header .navbar .nav>li>a:active,.skin-yellow-light .main-header .navbar .nav>li>a:focus,.skin-yellow-light .main-header .navbar .nav .open>a,.skin-yellow-light .main-header .navbar .nav .open>a:hover,.skin-yellow-light .main-header .navbar .nav .open>a:focus,.skin-yellow-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-yellow-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-yellow-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow-light .main-header .navbar .sidebar-toggle:hover{background-color:#e08e0b}@media (max-width:767px){.skin-yellow-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-yellow-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-yellow-light .main-header .navbar .dropdown-menu li a:hover{background:#e08e0b}}.skin-yellow-light .main-header .logo{background-color:#f39c12;color:#fff;border-bottom:0 solid transparent}.skin-yellow-light .main-header .logo:hover{background-color:#f39a0d}.skin-yellow-light .main-header li.user-header{background-color:#f39c12}.skin-yellow-light .content-header{background:transparent}.skin-yellow-light .wrapper,.skin-yellow-light .main-sidebar,.skin-yellow-light .left-side{background-color:#f9fafc}.skin-yellow-light .main-sidebar{border-right:1px solid #d2d6de}.skin-yellow-light .user-panel>.info,.skin-yellow-light .user-panel>.info>a{color:#444}.skin-yellow-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-yellow-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-yellow-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-yellow-light .sidebar-menu>li:hover>a,.skin-yellow-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-yellow-light .sidebar-menu>li.active{border-left-color:#f39c12}.skin-yellow-light .sidebar-menu>li.active>a{font-weight:600}.skin-yellow-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-yellow-light .sidebar a{color:#444}.skin-yellow-light .sidebar a:hover{text-decoration:none}.skin-yellow-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-yellow-light .sidebar-menu .treeview-menu>li.active>a,.skin-yellow-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-yellow-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-yellow-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-yellow-light .sidebar-form input[type=\"text\"],.skin-yellow-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-yellow-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-yellow-light .sidebar-form input[type=\"text\"]:focus,.skin-yellow-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-yellow-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-yellow-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-yellow-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-purple .main-header .navbar{background-color:#605ca8}.skin-purple .main-header .navbar .nav>li>a{color:#fff}.skin-purple .main-header .navbar .nav>li>a:hover,.skin-purple .main-header .navbar .nav>li>a:active,.skin-purple .main-header .navbar .nav>li>a:focus,.skin-purple .main-header .navbar .nav .open>a,.skin-purple .main-header .navbar .nav .open>a:hover,.skin-purple .main-header .navbar .nav .open>a:focus,.skin-purple .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-purple .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-purple .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple .main-header .navbar .sidebar-toggle:hover{background-color:#555299}@media (max-width:767px){.skin-purple .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-purple .main-header .navbar .dropdown-menu li a{color:#fff}.skin-purple .main-header .navbar .dropdown-menu li a:hover{background:#555299}}.skin-purple .main-header .logo{background-color:#555299;color:#fff;border-bottom:0 solid transparent}.skin-purple .main-header .logo:hover{background-color:#545096}.skin-purple .main-header li.user-header{background-color:#605ca8}.skin-purple .content-header{background:transparent}.skin-purple .wrapper,.skin-purple .main-sidebar,.skin-purple .left-side{background-color:#222d32}.skin-purple .user-panel>.info,.skin-purple .user-panel>.info>a{color:#fff}.skin-purple .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-purple .sidebar-menu>li>a{border-left:3px solid transparent}.skin-purple .sidebar-menu>li:hover>a,.skin-purple .sidebar-menu>li.active>a,.skin-purple .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-purple .sidebar-menu>li.active>a{border-left-color:#605ca8}.skin-purple .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-purple .sidebar a{color:#b8c7ce}.skin-purple .sidebar a:hover{text-decoration:none}.skin-purple .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-purple .sidebar-menu .treeview-menu>li.active>a,.skin-purple .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-purple .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-purple .sidebar-form input[type=\"text\"],.skin-purple .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-purple .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-purple .sidebar-form input[type=\"text\"]:focus,.skin-purple .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-purple .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-purple .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-purple-light .main-header .navbar{background-color:#605ca8}.skin-purple-light .main-header .navbar .nav>li>a{color:#fff}.skin-purple-light .main-header .navbar .nav>li>a:hover,.skin-purple-light .main-header .navbar .nav>li>a:active,.skin-purple-light .main-header .navbar .nav>li>a:focus,.skin-purple-light .main-header .navbar .nav .open>a,.skin-purple-light .main-header .navbar .nav .open>a:hover,.skin-purple-light .main-header .navbar .nav .open>a:focus,.skin-purple-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-purple-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-purple-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple-light .main-header .navbar .sidebar-toggle:hover{background-color:#555299}@media (max-width:767px){.skin-purple-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-purple-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-purple-light .main-header .navbar .dropdown-menu li a:hover{background:#555299}}.skin-purple-light .main-header .logo{background-color:#605ca8;color:#fff;border-bottom:0 solid transparent}.skin-purple-light .main-header .logo:hover{background-color:#5d59a6}.skin-purple-light .main-header li.user-header{background-color:#605ca8}.skin-purple-light .content-header{background:transparent}.skin-purple-light .wrapper,.skin-purple-light .main-sidebar,.skin-purple-light .left-side{background-color:#f9fafc}.skin-purple-light .main-sidebar{border-right:1px solid #d2d6de}.skin-purple-light .user-panel>.info,.skin-purple-light .user-panel>.info>a{color:#444}.skin-purple-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-purple-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-purple-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-purple-light .sidebar-menu>li:hover>a,.skin-purple-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-purple-light .sidebar-menu>li.active{border-left-color:#605ca8}.skin-purple-light .sidebar-menu>li.active>a{font-weight:600}.skin-purple-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-purple-light .sidebar a{color:#444}.skin-purple-light .sidebar a:hover{text-decoration:none}.skin-purple-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-purple-light .sidebar-menu .treeview-menu>li.active>a,.skin-purple-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-purple-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-purple-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-purple-light .sidebar-form input[type=\"text\"],.skin-purple-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-purple-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-purple-light .sidebar-form input[type=\"text\"]:focus,.skin-purple-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-purple-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-purple-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-purple-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}"
          uuid: 544552c2f20fc37c
        custom.css:
          isDir: false
          content: |
            .ck-editor__editable,
            textarea {
                min-height: 150px;
            }

            .datatable {
                width: 100% !important;
            }

            table.dataTable tbody td.select-checkbox::before,
            table.dataTable tbody td.select-checkbox::after,
            table.dataTable tbody th.select-checkbox::before,
            table.dataTable tbody th.select-checkbox::after {
                top: 50%;
            }

            .dataTables_length,
            .dataTables_filter,
            .dt-buttons {
                margin-bottom: 0.333em;
            }

            .dt-buttons .btn {
                margin-left: 0.333em;
                border-radius: 0;
            }

            .table.datatable {
                box-sizing: border-box;
                border-collapse: collapse;
            }

            table.dataTable thead th {
                border-bottom: 2px solid #dee2e6;
            }

            .dataTables_wrapper.no-footer .dataTables_scrollBody {
                border-bottom: 1px solid #dee2e6;
            }

            .select2 {
                max-width: 100%;
                width: 100%;
            }

            table.dataTable thead .sorting,
            table.dataTable thead .sorting_asc,
            table.dataTable thead .sorting_desc {
                background-image: none;
            }

            .btn-group-xs > .btn,
            .btn-xs {
                padding: 1px 5px;
                font-size: 12px;
                line-height: 1.5;
                border-radius: 3px;
            }

            .searchable-title {
                font-weight: bold;
            }
            .select2-container--open {
                z-index: 9999;
            }
            .searchable-fields {
                padding-left:5px;
            }
            .searchable-link {
                padding:0 5px 0 5px;
            }
            .searchable-link:hover   {
                cursor: pointer;
                background: #eaeaea;
            }
            .select2-results__option {
                padding-left: 0px;
                padding-right: 0px;
            }

            .form-group .required::after {
                content: " *";
                color: red;
            }

            .form-check.is-invalid ~ .invalid-feedback {
                display: block;
            }

            .dataTables_length label select {
                width: 65px!important;
            }

            div.dt-button-collection {
                padding: 0;
            }

            .buttons-columnVisibility {
                display: block;
            }

            .buttons-columnVisibility.active {
                background-color: rgba(128, 128, 128, 0.1);
                font-weight: bolder;
            }
          uuid: 85d8e660b81ed08f
      uuid: d023e567f87ee67a
    js:
      isDir: true
      content:
        main.js:
          isDir: false
          content: |
            $(document).ready(function () {
              window._token = $('meta[name="csrf-token"]').attr('content')

              moment.updateLocale('en', {
                week: {dow: 1} // Monday is the first day of the week
              })

              $('.date').datetimepicker({
                format: 'YYYY-MM-DD',
                locale: 'en',
                icons: {
                  up: 'fas fa-chevron-up',
                  down: 'fas fa-chevron-down',
                  previous: 'fas fa-chevron-left',
                  next: 'fas fa-chevron-right'
                }
              })

              $('.datetime').datetimepicker({
                format: 'YYYY-MM-DD HH:mm:ss',
                locale: 'en',
                sideBySide: true,
                icons: {
                  up: 'fas fa-chevron-up',
                  down: 'fas fa-chevron-down',
                  previous: 'fas fa-chevron-left',
                  next: 'fas fa-chevron-right'
                }
              })

              $('.timepicker').datetimepicker({
                format: 'HH:mm:ss',
                icons: {
                  up: 'fas fa-chevron-up',
                  down: 'fas fa-chevron-down',
                  previous: 'fas fa-chevron-left',
                  next: 'fas fa-chevron-right'
                }
              })

              $('.select-all').click(function () {
                let $select2 = $(this).parent().siblings('.select2')
                $select2.find('option').prop('selected', 'selected')
                $select2.trigger('change')
              })
              $('.deselect-all').click(function () {
                let $select2 = $(this).parent().siblings('.select2')
                $select2.find('option').prop('selected', '')
                $select2.trigger('change')
              })

              $('.select2').select2()

              $('.treeview').each(function () {
                var shouldExpand = false
                $(this).find('li').each(function () {
                  if ($(this).hasClass('active')) {
                    shouldExpand = true
                  }
                })
                if (shouldExpand) {
                  $(this).addClass('active')
                }
              })

              $('a[data-widget^="pushmenu"]').click(function () {
                setTimeout(function() {
                  $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
                }, 350);
              })
            })
          uuid: e870b28b64a8de1a
      uuid: 703634447c5b2144
    index.php:
      isDir: false
      content: >
        <?php


        use Illuminate\Contracts\Http\Kernel;

        use Illuminate\Http\Request;


        define('LARAVEL_START', microtime(true));


        /*

        |--------------------------------------------------------------------------

        | Check If The Application Is Under Maintenance

        |--------------------------------------------------------------------------

        |

        | If the application is in maintenance / demo mode via the "down"
        command

        | we will load this file so that any pre-rendered content can be shown

        | instead of starting the framework, which could cause an exception.

        |

        */


        if (file_exists($maintenance =
        __DIR__.'/../storage/framework/maintenance.php')) {
            require $maintenance;
        }


        /*

        |--------------------------------------------------------------------------

        | Register The Auto Loader

        |--------------------------------------------------------------------------

        |

        | Composer provides a convenient, automatically generated class loader
        for

        | this application. We just need to utilize it! We'll simply require it

        | into the script here so we don't need to manually load our classes.

        |

        */


        require __DIR__.'/../vendor/autoload.php';


        /*

        |--------------------------------------------------------------------------

        | Run The Application

        |--------------------------------------------------------------------------

        |

        | Once we have the application, we can handle the incoming request using

        | the application's HTTP kernel. Then, we will send the response back

        | to this client's browser, allowing them to enjoy our application.

        |

        */


        $app = require_once __DIR__.'/../bootstrap/app.php';


        $kernel = $app->make(Kernel::class);


        $response = $kernel->handle(
            $request = Request::capture()
        )->send();


        $kernel->terminate($request, $response);
      uuid: d170a40964757679
  uuid: 6db7cf9552444383
resources:
  isDir: true
  content:
    css:
      isDir: true
      content:
        app.css:
          isDir: false
          content: ''
          uuid: 252e649bcd8f1362
      uuid: 29f996a0a68bbcf4
    js:
      isDir: true
      content:
        app.js:
          isDir: false
          content: |
            import './bootstrap';
          uuid: 19ca400c3038807e
        bootstrap.js:
          isDir: false
          content: >
            /**
             * We'll load the axios HTTP library which allows us to easily issue requests
             * to our Laravel back-end. This library automatically handles sending the
             * CSRF token as a header based on the value of the "XSRF" token cookie.
             */

            import axios from 'axios';

            window.axios = axios;


            window.axios.defaults.headers.common['X-Requested-With'] =
            'XMLHttpRequest';


            /**
             * Echo exposes an expressive API for subscribing to channels and listening
             * for events that are broadcast by Laravel. Echo and event broadcasting
             * allows your team to easily build robust real-time web applications.
             */

            // import Echo from 'laravel-echo';


            // import Pusher from 'pusher-js';

            // window.Pusher = Pusher;


            // window.Echo = new Echo({

            //     broadcaster: 'pusher',

            //     key: import.meta.env.VITE_PUSHER_APP_KEY,

            //     cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',

            //     wsHost: import.meta.env.VITE_PUSHER_HOST ?
            import.meta.env.VITE_PUSHER_HOST :
            `ws-${import.meta.env.VITE_PUSHER_APP_CLUSTER}.pusher.com`,

            //     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,

            //     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,

            //     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') ===
            'https',

            //     enabledTransports: ['ws', 'wss'],

            // });
          uuid: c1e1efe0868e97a2
      uuid: b8cbabf723b4f30c
    lang:
      isDir: true
      content:
        en:
          isDir: true
          content:
            auth.php:
              isDir: false
              content: |
                <?php

                return [
                    'failed'   => 'These credentials do not match our records.',
                    'password' => 'The provided password is incorrect.',
                    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',

                ];
              uuid: fea4165613e1f717
            cruds.php:
              isDir: false
              content: |
                <?php

                return [
                    'userManagement' => [
                        'title'          => 'User management',
                        'title_singular' => 'User management',
                    ],
                    'permission' => [
                        'title'          => 'Permissions',
                        'title_singular' => 'Permission',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'title'             => 'Title',
                            'title_helper'      => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated at',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted at',
                            'deleted_at_helper' => ' ',
                        ],
                    ],
                    'role' => [
                        'title'          => 'Roles',
                        'title_singular' => 'Role',
                        'fields'         => [
                            'id'                 => 'ID',
                            'id_helper'          => ' ',
                            'title'              => 'Nama',
                            'title_helper'       => ' ',
                            'permissions'        => 'Permissions',
                            'permissions_helper' => ' ',
                            'created_at'         => 'Created at',
                            'created_at_helper'  => ' ',
                            'updated_at'         => 'Updated at',
                            'updated_at_helper'  => ' ',
                            'deleted_at'         => 'Deleted at',
                            'deleted_at_helper'  => ' ',
                            'aktif'              => 'Aktif',
                            'aktif_helper'       => ' ',
                        ],
                    ],
                    'user' => [
                        'title'          => 'Users',
                        'title_singular' => 'User',
                        'fields'         => [
                            'id'                       => 'ID',
                            'id_helper'                => ' ',
                            'name'                     => 'Nama',
                            'name_helper'              => ' ',
                            'email'                    => 'Email',
                            'email_helper'             => ' ',
                            'email_verified_at'        => 'Email verified at',
                            'email_verified_at_helper' => ' ',
                            'password'                 => 'Password',
                            'password_helper'          => ' ',
                            'roles'                    => 'Roles',
                            'roles_helper'             => ' ',
                            'remember_token'           => 'Remember Token',
                            'remember_token_helper'    => ' ',
                            'created_at'               => 'Created at',
                            'created_at_helper'        => ' ',
                            'updated_at'               => 'Updated at',
                            'updated_at_helper'        => ' ',
                            'deleted_at'               => 'Deleted at',
                            'deleted_at_helper'        => ' ',
                            'team'                     => 'Team',
                            'team_helper'              => ' ',
                            'aktif'                    => 'Aktif',
                            'aktif_helper'             => ' ',
                            'jabatan'                  => 'Jabatan',
                            'jabatan_helper'           => ' ',
                        ],
                    ],
                    'auditLog' => [
                        'title'          => 'Audit Logs',
                        'title_singular' => 'Audit Log',
                        'fields'         => [
                            'id'                  => 'ID',
                            'id_helper'           => ' ',
                            'description'         => 'Description',
                            'description_helper'  => ' ',
                            'subject_id'          => 'Subject ID',
                            'subject_id_helper'   => ' ',
                            'subject_type'        => 'Subject Type',
                            'subject_type_helper' => ' ',
                            'user_id'             => 'User ID',
                            'user_id_helper'      => ' ',
                            'properties'          => 'Properties',
                            'properties_helper'   => ' ',
                            'host'                => 'Host',
                            'host_helper'         => ' ',
                            'created_at'          => 'Created at',
                            'created_at_helper'   => ' ',
                            'updated_at'          => 'Updated at',
                            'updated_at_helper'   => ' ',
                        ],
                    ],
                    'team' => [
                        'title'          => 'Teams',
                        'title_singular' => 'Team',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated At',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted At',
                            'deleted_at_helper' => ' ',
                            'name'              => 'Name',
                            'name_helper'       => ' ',
                            'owner'             => 'Owner',
                            'owner_helper'      => ' ',
                        ],
                    ],
                    'jabatan' => [
                        'title'          => 'Jabatan',
                        'title_singular' => 'Jabatan',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'nama'              => 'Nama Jabtan',
                            'nama_helper'       => ' ',
                            'aktif'             => 'Aktif',
                            'aktif_helper'      => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated at',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted at',
                            'deleted_at_helper' => ' ',
                            'team'              => 'Team',
                            'team_helper'       => ' ',
                        ],
                    ],

                ];
              uuid: 5541d11917bd5f30
            global.php:
              isDir: false
              content: |
                <?php

                return [
                    'actions'                        => 'Actions',
                    'add'                            => 'Add',
                    'allRightsReserved'              => 'All rights reserved.',
                    'areYouSure'                     => 'Are you sure?',
                    'clickHereToVerify'              => 'Click here to verify',
                    'create'                         => 'Create',
                    'dashboard'                      => 'Dashboard',
                    'delete'                         => 'Delete',
                    'cancel'                         => 'Cancel',
                    'clear'                          => 'Clear',
                    'downloadFile'                   => 'Download file',
                    'edit'                           => 'Edit',
                    'emailVerificationSuccess'       => 'User email verified successfully',
                    'entries'                        => 'Entries',
                    'filterDate'                     => 'Filter by date',
                    'forgot_password'                => 'Forgot your password?',
                    'home'                           => 'Home',
                    'list'                           => 'List',
                    'login'                          => 'Login',
                    'login_email'                    => 'Email',
                    'login_password'                 => 'Password',
                    'login_password_confirmation'    => 'Password confirmation',
                    'logout'                         => 'Logout',
                    'month'                          => 'Month',
                    'no'                             => 'No',
                    'pleaseSelect'                   => 'Please select',
                    'register'                       => 'Register',
                    'remember_me'                    => 'Remember me',
                    'reset_password'                 => 'Reset Password',
                    'send_password'                  => 'Send Password Reset Link',
                    'save'                           => 'Save',
                    'search'                         => 'Search',
                    'searching'                      => 'Searching',
                    'no_results'                     => 'No results',
                    'results_could_not_be_loaded'    => 'The results could not be loaded',
                    'search_input_too_short'         => 'Please enter :count or more characters',
                    'show'                           => 'Show',
                    'systemCalendar'                 => 'Calendar',
                    'thankYouForUsingOurApplication' => 'Thank you for using our website',
                    'timeFrom'                       => 'From',
                    'timeTo'                         => 'To',
                    'toggleNavigation'               => 'Toggle navigation',
                    'user_name'                      => 'Name',
                    'verifyYourEmail'                => 'Please verify your email',
                    'verifyYourUser'                 => 'To finish your registration - site asks you to verify your email',
                    'view'                           => 'View',
                    'view_file'                      => 'View file',
                    'year'                           => 'Year',
                    'yes'                            => 'Yes',
                    'youAreLoggedIn'                 => 'You are logged in!',
                    'yourAccountNeedsAdminApproval'  => 'Your accounts needs an administrator approval in order to log in',
                    'submit'                         => 'Submit',
                    'relatedData'                    => 'Related Data',
                    'update_profile_success'         => 'Profile updated successfully',
                    'change_password_success'        => 'Password changed successfully',
                    'delete_account_success'         => 'Account deleted successfully',
                    'saved'                          => 'Saved.',
                    'profile_information'            => 'Profile information',
                    'all_messages'                   => 'All Messages',
                    'new_message'                    => 'New message',
                    'messages'                       => 'Messages',
                    'inbox'                          => 'Inbox',
                    'outbox'                         => 'Outbox',
                    'subject'                        => 'Subject',
                    'recipients'                     => 'Recipients',
                    'from'                           => 'From',
                    'to'                             => 'To',
                    'reply'                          => 'Reply',
                    'body'                           => 'Body',
                    'discard'                        => 'Discard',
                    'datatables'                     => [
                        'copy'          => 'Copy',
                        'csv'           => 'CSV',
                        'excel'         => 'Excel',
                        'pdf'           => 'PDF',
                        'print'         => 'Print',
                        'colvis'        => 'Columns',
                        'delete'        => 'Delete selected',
                        'zero_selected' => 'No rows selected',
                    ],
                    'billing' => [
                        'menu'                        => 'Billing',
                        'current_plan'                => 'Your current plan',
                        'choose_this_plan'            => 'Choose this plan',
                        'month'                       => 'month',
                        'trial_user'                  => 'Trial User',
                        'plan_purchased_successfully' => 'Plan purchased successfully',
                    ],
                    'payments' => [
                        'title'        => 'Payments',
                        'payment_date' => 'Payment Date',
                        'amount'       => 'Amount',
                    ],
                    'table'                                => 'Table',
                    'back'                                 => 'Back',
                    'refresh'                              => 'Refresh',
                    'close'                                => 'Close',
                    'create_success'                       => 'Your item has been successfully saved.',
                    'update_success'                       => 'Your item has been successfully updated.',
                    'delete_success'                       => 'Your item has been successfully deleted.',
                    'action'                               => 'Action',
                    'action_id'                            => 'Action id',
                    'action_model'                         => 'Action model',
                    'address'                              => 'Address',
                    'administrator_can_create_other_users' => 'Administrator (can create other users)',
                    'aggregate_function_use'               => 'Aggregate function to use',
                    'all'                                  => 'All',
                    'amount'                               => 'Amount',
                    'answer'                               => 'Answer',
                    'app_csv_file_to_import'               => 'CSV file to import',
                    'app_csvImport'                        => 'CSV Import',
                    'app_file_contains_header_row'         => 'File contains header row?',
                    'app_import_data'                      => 'Import data',
                    'app_imported_rows_to_table'           => 'Imported :rows rows to :table table',
                    'app_parse_csv'                        => 'Parse CSV',
                    'asset'                                => 'Asset',
                    'assets'                               => 'Assets',
                    'assets_history'                       => 'Assets history',
                    'assets_management'                    => 'Assets management',
                    'assigned_to'                          => 'Assigned to',
                    'assigned_user'                        => 'Assigned (user)',
                    'attachment'                           => 'Attachment',
                    'axis'                                 => 'Axis',
                    'back_to_list'                         => 'Back to list',
                    'basic_crm'                            => 'Basic CRM',
                    'budget'                               => 'Budget',
                    'calendar_sources'                     => 'Calendar sources',
                    'campaign'                             => 'Campaign',
                    'campaigns'                            => 'Campaigns',
                    'categories'                           => 'Categories',
                    'category'                             => 'Category',
                    'category_name'                        => 'Category name',
                    'change_notifications_field_1_label'   => 'Send email notification to User',
                    'change_notifications_field_2_label'   => 'When Entry on CRUD',
                    'my_profile'                           => 'My profile',
                    'my_team'                              => 'My team',
                    'change_password'                      => 'Change password',
                    'delete_account'                       => 'Delete account',
                    'delete_account_warning'               => 'Enter your email address to confirm you want to delete account.\nThis action is not reversible.',
                    'two_factor'                           => [
                        'title'          => 'Two factor authentication',
                        'sub_title'      => 'Two factor authentication code has been sent via email. Code is valid for :minutes minutes. If you haven\'t received it, press resend.',
                        'code'           => 'Two Factor Code',
                        'does_not_match' => 'The two factor code you have entered does not match',
                        'sent_again'     => 'The two factor code has been sent again',
                        'expired'        => 'The two factor code has expired. Please login again.',
                        'enabled'        => 'Two factor authentication enabled successfully',
                        'disabled'       => 'Two factor authentication disabled successfully',
                        'your_code_is'   => 'Your two factor code is :code.',
                        'will_expire_in' => 'The code will expire in :minutes minutes.',
                        'ignore_this'    => 'If you have not tried to login, ignore this message.',
                        'verify_here'    => 'Verify Here',
                        'verify'         => 'Verify',
                        'phone_number'   => 'Phone Number',
                        'enable'         => 'Enable',
                        'disable'        => 'Disable',
                        'resend'         => 'Resend',
                    ],
                    'chart_type'                     => 'Chart type',
                    'code'                           => 'Code',
                    'companies'                      => 'Companies',
                    'company'                        => 'Company',
                    'company_name'                   => 'Company name',
                    'confirm_password'               => 'Confirm password',
                    'contact_management'             => 'Contact management',
                    'contacts'                       => 'Contacts',
                    'content_management'             => 'Content management',
                    'copy_paste_url_bellow'          => 'button, copy and paste the URL below into your web browser:',
                    'country'                        => 'Country',
                    'coupon_management'              => 'Coupon Management',
                    'coupons'                        => 'Coupons',
                    'coupons_amount'                 => 'Coupons amount',
                    'create_new_calendar_source'     => 'Create new Calendar Source',
                    'create_new_notification'        => 'Create new Notification',
                    'create_new_report'              => 'Create new report',
                    'created_at'                     => 'Created at',
                    'crud_date_field'                => 'Crud date field',
                    'crud_event_field'               => 'Event label field',
                    'crud_title'                     => 'Crud title',
                    'csv_file_to_import'             => 'CSV file to import',
                    'csvImport'                      => 'CSV Import',
                    'current_password'               => 'Current password',
                    'custom_controller_index'        => 'Custom controller index.',
                    'customer'                       => 'Customer',
                    'customers'                      => 'Customers',
                    'deleted_at'                     => 'Deleted at',
                    'description'                    => 'Description',
                    'deselect_all'                   => 'Deselect all',
                    'discount_amount'                => 'Discount amount',
                    'discount_percent'               => 'Discount percent',
                    'due_date'                       => 'Due date',
                    'edit_calendar_source'           => 'Edit Calendar Source',
                    'email_greet'                    => 'Hello',
                    'email_line1'                    => 'You are receiving this email because we received a password reset request for your account.',
                    'email_line2'                    => 'If you did not request a password reset, no further action is required.',
                    'email_regards'                  => 'Regards',
                    'end_time'                       => 'End time',
                    'entry_date'                     => 'Entry date',
                    'excerpt'                        => 'Excerpt',
                    'faq_management'                 => 'FAQ Management',
                    'featured_image'                 => 'Featured image',
                    'fee_percent'                    => 'Fee percent',
                    'file'                           => 'File',
                    'file_contains_header_row'       => 'File contains header row?',
                    'first_name'                     => 'First name',
                    'group_by'                       => 'Group by',
                    'if_you_are_having_trouble'      => 'If you’re having trouble clicking the',
                    'import_data'                    => 'Import data',
                    'imported_rows_to_table'         => 'Imported :rows rows to :table table',
                    'integer_float_placeholder'      => 'Please select one of integer/float fields',
                    'is_created'                     => 'is created',
                    'is_deleted'                     => 'is deleted',
                    'is_updated'                     => 'is updated',
                    'label_field'                    => 'Label field',
                    'last_name'                      => 'Last name',
                    'location'                       => 'Location',
                    'locations'                      => 'Locations',
                    'main_currency'                  => 'Main currency',
                    'message'                        => 'Message',
                    'name'                           => 'Name',
                    'new_calendar_source'            => 'Create new calendar source',
                    'new_password'                   => 'New password',
                    'no_calendar_sources'            => 'No calendar sources yet.',
                    'no_entries_in_table'            => 'No entries in table',
                    'no_reports_yet'                 => 'No reports yet.',
                    'not_approved_p'                 => 'Your account is still not approved by administrator. Please, be patient and try again later.',
                    'not_approved_title'             => 'You are not approved',
                    'note_text'                      => 'Note text',
                    'notifications'                  => 'Notifications',
                    'notify_user'                    => 'Notify User',
                    'pages'                          => 'Pages',
                    'parse_csv'                      => 'Parse CSV',
                    'permadel'                       => 'Delete Permanently',
                    'phone'                          => 'Phone',
                    'phone1'                         => 'Phone 1',
                    'phone2'                         => 'Phone 2',
                    'photo'                          => 'Photo (max 8mb)',
                    'photo1'                         => 'Photo1',
                    'photo2'                         => 'Photo2',
                    'photo3'                         => 'Photo3',
                    'prefix'                         => 'Prefix',
                    'price'                          => 'Price',
                    'product_management'             => 'Product management',
                    'product_name'                   => 'Product name',
                    'products'                       => 'Products',
                    'question'                       => 'Question',
                    'questions'                      => 'Questions',
                    'recipient'                      => 'Recipient',
                    'redeem_time'                    => 'Redeem time',
                    'registration'                   => 'Registration',
                    'remember_token'                 => 'Remember token',
                    'reports_x_axis_field'           => 'X-axis - please choose one of date/time fields',
                    'reports_y_axis_field'           => 'Y-axis - please choose one of number fields',
                    'reset_password_woops'           => '<strong>Whoops!</strong> There were problems with input:',
                    'restore'                        => 'Restore',
                    'sample_answer'                  => 'Sample answer',
                    'sample_category'                => 'Sample category',
                    'sample_question'                => 'Sample question',
                    'select_all'                     => 'Select all',
                    'select_crud_placeholder'        => 'Please select one of your CRUDs',
                    'select_dt_placeholder'          => 'Please select one of date/time fields',
                    'select_users_placeholder'       => 'Please select one of your Users',
                    'send'                           => 'Send',
                    'serial_number'                  => 'Serial number',
                    'simple_user'                    => 'Simple user',
                    'skype'                          => 'Skype',
                    'slug'                           => 'Slug',
                    'start_date'                     => 'Start date',
                    'start_time'                     => 'Start time',
                    'status'                         => 'Status',
                    'statuses'                       => 'Statuses',
                    'stripe_transactions'            => 'Stripe Transactions',
                    'subscription-billing'           => 'Subscriptions',
                    'subscription-payments'          => 'Payments',
                    'suffix'                         => 'Sufix',
                    'tag'                            => 'Tag',
                    'tags'                           => 'Tags',
                    'task_management'                => 'Task management',
                    'tasks'                          => 'Tasks',
                    'team-management'                => 'Teams',
                    'team-management-singular'       => 'Team',
                    'text'                           => 'Text',
                    'there_were_problems_with_input' => 'There were problems with input',
                    'time'                           => 'Time',
                    'title'                          => 'Title',
                    'transaction_date'               => 'Transaction date',
                    'trash'                          => 'Trash',
                    'update'                         => 'Update',
                    'updated_at'                     => 'Updated at',
                    'upgrade_to_premium'             => 'Upgrade to Premium',
                    'user_actions'                   => 'User actions',
                    'valid_from'                     => 'Valid from',
                    'valid_to'                       => 'Valid to',
                    'website'                        => 'Website',
                    'when_crud'                      => 'When CRUD',
                    'whoops'                         => 'Whoops!',
                    'x_axis_field'                   => 'X-axis field (date/time)',
                    'x_axis_group_by'                => 'X-axis group by',
                    'y_axis_field'                   => 'Y-axis field',
                    'you_have_no_messages'           => 'You have no messages.',
                    'content'                        => 'Content',
                    'no_alerts'                      => 'No alerts',
                    'test_answers'                   => 'Test Answers',
                    'test_results'                   => 'Test Results',
                    'question_options'               => 'Question Options',
                    'tests'                          => 'Tests',
                    'lessons'                        => 'Lessons',
                    'courses'                        => 'Courses',
                    'team-members'                   => 'Team members',
                    'no_team_notice'                 => 'Currently you do not have any teams assigned. You can set up a new one:',
                    'team_name'                      => 'Team name',
                    'invite_member'                  => 'Invite member',
                    'invite_sent'                    => 'Invitation sent.',
                    'manage_team_members'            => 'Manage team members',
                    'remove'                         => 'Remove',
                    'team_no_members_notice'         => 'Your team has no members yet.',
                    'disband_team'                   => 'Disband team',
                    'team_disband_notice'            => 'All your team members will no longer have team assigned.',
                    'leave'                          => 'Leave',
                    'calendar'                       => 'Calendar',
                    'messenger'                      => 'Messenger',

                ];
              uuid: cf6c204afc393543
            pagination.php:
              isDir: false
              content: |
                <?php

                return [
                    'previous' => '&laquo; Previous',
                    'next'     => 'Next &raquo;',

                ];
              uuid: bcd752fe10643d7e
            panel.php:
              isDir: false
              content: |
                <?php

                return [
                    'site_title' => 'IDEP Foundation',

                ];
              uuid: 6d82d5aeb6263afc
            passwords.php:
              isDir: false
              content: |
                <?php

                return [
                    'password' => 'Passwords must be at least six characters and match the confirmation.',
                    'reset'    => 'Your password has been reset!',
                    'sent'     => 'We have e-mailed your password reset link!',
                    'token'    => 'This password reset token is invalid.',
                    'user'     => 'We can\'t find a user with that e-mail address.',
                    'updated'  => 'Your password has been changed!',

                ];
              uuid: 341bc61a25a59b55
            validation.php:
              isDir: false
              content: |
                <?php

                return [
                    'accepted'         => 'The :attribute must be accepted.',
                    'active_url'       => 'The :attribute is not a valid URL.',
                    'after'            => 'The :attribute must be a date after :date.',
                    'after_or_equal'   => 'The :attribute must be a date after or equal to :date.',
                    'alpha'            => 'The :attribute may only contain letters.',
                    'alpha_dash'       => 'The :attribute may only contain letters, numbers, and dashes.',
                    'alpha_num'        => 'The :attribute may only contain letters and numbers.',
                    'latin'            => 'The :attribute may only contain ISO basic Latin alphabet letters.',
                    'latin_dash_space' => 'The :attribute may only contain ISO basic Latin alphabet letters, numbers, dashes, hyphens and spaces.',
                    'array'            => 'The :attribute must be an array.',
                    'before'           => 'The :attribute must be a date before :date.',
                    'before_or_equal'  => 'The :attribute must be a date before or equal to :date.',
                    'between'          => [
                        'numeric' => 'The :attribute must be between :min and :max.',
                        'file'    => 'The :attribute must be between :min and :max kilobytes.',
                        'string'  => 'The :attribute must be between :min and :max characters.',
                        'array'   => 'The :attribute must have between :min and :max items.',
                    ],
                    'boolean'          => 'The :attribute field must be true or false.',
                    'confirmed'        => 'The :attribute confirmation does not match.',
                    'current_password' => 'The password is incorrect.',
                    'date'             => 'The :attribute is not a valid date.',
                    'date_equals'      => 'The :attribute must be a date equal to :date.',
                    'date_format'      => 'The :attribute does not match the format :format.',
                    'different'        => 'The :attribute and :other must be different.',
                    'digits'           => 'The :attribute must be :digits digits.',
                    'digits_between'   => 'The :attribute must be between :min and :max digits.',
                    'dimensions'       => 'The :attribute has invalid image dimensions.',
                    'distinct'         => 'The :attribute field has a duplicate value.',
                    'email'            => 'The :attribute must be a valid email address.',
                    'ends_with'        => 'The :attribute must end with one of the following: :values.',
                    'exists'           => 'The selected :attribute is invalid.',
                    'file'             => 'The :attribute must be a file.',
                    'filled'           => 'The :attribute field must have a value.',
                    'gt'               => [
                        'numeric' => 'The :attribute must be greater than :value.',
                        'file'    => 'The :attribute must be greater than :value kilobytes.',
                        'string'  => 'The :attribute must be greater than :value characters.',
                        'array'   => 'The :attribute must have more than :value items.',
                    ],
                    'gte' => [
                        'numeric' => 'The :attribute must be greater than or equal :value.',
                        'file'    => 'The :attribute must be greater than or equal :value kilobytes.',
                        'string'  => 'The :attribute must be greater than or equal :value characters.',
                        'array'   => 'The :attribute must have :value items or more.',
                    ],
                    'image'    => 'The :attribute must be an image.',
                    'in'       => 'The selected :attribute is invalid.',
                    'in_array' => 'The :attribute field does not exist in :other.',
                    'integer'  => 'The :attribute must be an integer.',
                    'ip'       => 'The :attribute must be a valid IP address.',
                    'ipv4'     => 'The :attribute must be a valid IPv4 address.',
                    'ipv6'     => 'The :attribute must be a valid IPv6 address.',
                    'json'     => 'The :attribute must be a valid JSON string.',
                    'lt'       => [
                        'numeric' => 'The :attribute must be less than :value.',
                        'file'    => 'The :attribute must be less than :value kilobytes.',
                        'string'  => 'The :attribute must be less than :value characters.',
                        'array'   => 'The :attribute must have less than :value items.',
                    ],
                    'lte' => [
                        'numeric' => 'The :attribute must be less than or equal :value.',
                        'file'    => 'The :attribute must be less than or equal :value kilobytes.',
                        'string'  => 'The :attribute must be less than or equal :value characters.',
                        'array'   => 'The :attribute must not have more than :value items.',
                    ],
                    'max' => [
                        'numeric' => 'The :attribute may not be greater than :max.',
                        'file'    => 'The :attribute may not be greater than :max kilobytes.',
                        'string'  => 'The :attribute may not be greater than :max characters.',
                        'array'   => 'The :attribute may not have more than :max items.',
                    ],
                    'mimes'     => 'The :attribute must be a file of type: :values.',
                    'mimetypes' => 'The :attribute must be a file of type: :values.',
                    'min'       => [
                        'numeric' => 'The :attribute must be at least :min.',
                        'file'    => 'The :attribute must be at least :min kilobytes.',
                        'string'  => 'The :attribute must be at least :min characters.',
                        'array'   => 'The :attribute must have at least :min items.',
                    ],
                    'not_in'               => 'The selected :attribute is invalid.',
                    'not_regex'            => 'The :attribute format is invalid.',
                    'numeric'              => 'The :attribute must be a number.',
                    'password'             => 'The password is incorrect.',
                    'present'              => 'The :attribute field must be present.',
                    'regex'                => 'The :attribute format is invalid.',
                    'required'             => 'The :attribute field is required.',
                    'required_if'          => 'The :attribute field is required when :other is :value.',
                    'required_unless'      => 'The :attribute field is required unless :other is in :values.',
                    'required_with'        => 'The :attribute field is required when :values is present.',
                    'required_with_all'    => 'The :attribute field is required when :values is present.',
                    'required_without'     => 'The :attribute field is required when :values is not present.',
                    'required_without_all' => 'The :attribute field is required when none of :values are present.',
                    'same'                 => 'The :attribute and :other must match.',
                    'size'                 => [
                        'numeric' => 'The :attribute must be :size.',
                        'file'    => 'The :attribute must be :size kilobytes.',
                        'string'  => 'The :attribute must be :size characters.',
                        'array'   => 'The :attribute must contain :size items.',
                    ],
                    'starts_with' => 'The :attribute must start with one of the following: :values.',
                    'string'      => 'The :attribute must be a string.',
                    'timezone'    => 'The :attribute must be a valid zone.',
                    'unique'      => 'The :attribute has already been taken.',
                    'uploaded'    => 'The :attribute failed to upload.',
                    'url'         => 'The :attribute format is invalid.',
                    'uuid'        => 'The :attribute must be a valid UUID.',
                    'custom'      => [
                        'attribute-name' => [
                            'rule-name' => 'custom-message',
                        ],
                    ],
                    'reserved_word'                  => 'The :attribute contains reserved word',
                    'dont_allow_first_letter_number' => 'The \":input\" field can\'t have first letter as a number',
                    'exceeds_maximum_number'         => 'The :attribute exceeds maximum model length',
                    'db_column'                      => 'The :attribute may only contain ISO basic Latin alphabet letters, numbers, dash and cannot start with number.',
                    'attributes'                     => [],

                ];
              uuid: 5f64d33923be3930
          uuid: 087890bd4ef86029
        id:
          isDir: true
          content:
            auth.php:
              isDir: false
              content: |
                <?php

                return [
                    'failed'   => 'Email atau sandi salah.',
                    'password' => 'Sandi yang Anda masukkan salah.',
                    'throttle' => 'Terlalu banyak percobaan masuk. Silakan coba lagi dalam :seconds detik.',

                ];
              uuid: 7e2db7b2c0f052a8
            cruds.php:
              isDir: false
              content: |
                <?php

                return [
                    'userManagement' => [
                        'title'          => 'Manajemen User',
                        'title_singular' => 'Manajemen User',
                    ],
                    'permission' => [
                        'title'          => 'Izin',
                        'title_singular' => 'Izin',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'title'             => 'Title',
                            'title_helper'      => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated at',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted at',
                            'deleted_at_helper' => ' ',
                        ],
                    ],
                    'role' => [
                        'title'          => 'Peranan',
                        'title_singular' => 'Peranan',
                        'fields'         => [
                            'id'                 => 'ID',
                            'id_helper'          => ' ',
                            'title'              => 'Nama',
                            'title_helper'       => ' ',
                            'permissions'        => 'Permissions',
                            'permissions_helper' => ' ',
                            'created_at'         => 'Created at',
                            'created_at_helper'  => ' ',
                            'updated_at'         => 'Updated at',
                            'updated_at_helper'  => ' ',
                            'deleted_at'         => 'Deleted at',
                            'deleted_at_helper'  => ' ',
                            'aktif'              => 'Aktif',
                            'aktif_helper'       => ' ',
                        ],
                    ],
                    'user' => [
                        'title'          => 'Daftar Pengguna',
                        'title_singular' => 'User',
                        'fields'         => [
                            'id'                       => 'ID',
                            'id_helper'                => ' ',
                            'name'                     => 'Nama',
                            'name_helper'              => ' ',
                            'email'                    => 'Email',
                            'email_helper'             => ' ',
                            'email_verified_at'        => 'Email verified at',
                            'email_verified_at_helper' => ' ',
                            'password'                 => 'Password',
                            'password_helper'          => ' ',
                            'roles'                    => 'Roles',
                            'roles_helper'             => ' ',
                            'remember_token'           => 'Remember Token',
                            'remember_token_helper'    => ' ',
                            'created_at'               => 'Created at',
                            'created_at_helper'        => ' ',
                            'updated_at'               => 'Updated at',
                            'updated_at_helper'        => ' ',
                            'deleted_at'               => 'Deleted at',
                            'deleted_at_helper'        => ' ',
                            'team'                     => 'Team',
                            'team_helper'              => ' ',
                            'aktif'                    => 'Aktif',
                            'aktif_helper'             => ' ',
                            'jabatan'                  => 'Jabatan',
                            'jabatan_helper'           => ' ',
                        ],
                    ],
                    'auditLog' => [
                        'title'          => 'Audit Logs',
                        'title_singular' => 'Audit Log',
                        'fields'         => [
                            'id'                  => 'ID',
                            'id_helper'           => ' ',
                            'description'         => 'Description',
                            'description_helper'  => ' ',
                            'subject_id'          => 'Subject ID',
                            'subject_id_helper'   => ' ',
                            'subject_type'        => 'Subject Type',
                            'subject_type_helper' => ' ',
                            'user_id'             => 'User ID',
                            'user_id_helper'      => ' ',
                            'properties'          => 'Properties',
                            'properties_helper'   => ' ',
                            'host'                => 'Host',
                            'host_helper'         => ' ',
                            'created_at'          => 'Created at',
                            'created_at_helper'   => ' ',
                            'updated_at'          => 'Updated at',
                            'updated_at_helper'   => ' ',
                        ],
                    ],
                    'team' => [
                        'title'          => 'Teams',
                        'title_singular' => 'Team',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated At',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted At',
                            'deleted_at_helper' => ' ',
                            'name'              => 'Name',
                            'name_helper'       => ' ',
                            'owner'             => 'Owner',
                            'owner_helper'      => ' ',
                        ],
                    ],
                    'jabatan' => [
                        'title'          => 'Jabatan',
                        'title_singular' => 'Jabatan',
                        'fields'         => [
                            'id'                => 'ID',
                            'id_helper'         => ' ',
                            'nama'              => 'Nama Jabtan',
                            'nama_helper'       => ' ',
                            'aktif'             => 'Aktif',
                            'aktif_helper'      => ' ',
                            'created_at'        => 'Created at',
                            'created_at_helper' => ' ',
                            'updated_at'        => 'Updated at',
                            'updated_at_helper' => ' ',
                            'deleted_at'        => 'Deleted at',
                            'deleted_at_helper' => ' ',
                            'team'              => 'Team',
                            'team_helper'       => ' ',
                        ],
                    ],

                ];
              uuid: 83c1e708a4182303
            global.php:
              isDir: false
              content: |
                <?php

                return [
                    'actions'                        => 'Aksi',
                    'add'                            => 'Tambah',
                    'allRightsReserved'              => 'All rights reserved.',
                    'areYouSure'                     => 'Apakah Anda yakin?',
                    'clickHereToVerify'              => 'Klik di sini untuk memverifikasi',
                    'create'                         => 'Tambah',
                    'dashboard'                      => 'Beranda',
                    'delete'                         => 'Hapus',
                    'cancel'                         => 'Batal',
                    'clear'                          => 'Clear',
                    'downloadFile'                   => 'Unduh berkas',
                    'edit'                           => 'Ubah',
                    'emailVerificationSuccess'       => 'Email pengguna berhasil diverifikasi',
                    'entries'                        => 'Entri',
                    'filterDate'                     => 'Filter berdasarkan bulan',
                    'forgot_password'                => 'Lupa sandi?',
                    'home'                           => 'Beranda',
                    'list'                           => 'Daftar',
                    'login'                          => 'Masuk',
                    'login_email'                    => 'Email',
                    'login_password'                 => 'Sandi',
                    'login_password_confirmation'    => 'Konfirmasi Sandi',
                    'logout'                         => 'Keluar',
                    'month'                          => 'Bulan',
                    'no'                             => 'Tidak',
                    'pleaseSelect'                   => 'Silakan pilih',
                    'register'                       => 'Daftar',
                    'remember_me'                    => 'Ingat Saya',
                    'reset_password'                 => 'Reset sandi',
                    'send_password'                  => 'Kirim link reset password',
                    'save'                           => 'Simpan',
                    'search'                         => 'Cari',
                    'searching'                      => 'Mencari',
                    'no_results'                     => 'Tidak ada hasil',
                    'results_could_not_be_loaded'    => 'Tidak dapat  memuat  hasil',
                    'search_input_too_short'         => 'Silakan masukkan :count atau lebih karakter',
                    'show'                           => 'Tampilkan',
                    'systemCalendar'                 => 'Kalender',
                    'thankYouForUsingOurApplication' => 'Terima kasih telah menggunakan website kami',
                    'timeFrom'                       => 'Dari',
                    'timeTo'                         => 'Untuk',
                    'toggleNavigation'               => 'Alihkan navigasi',
                    'user_name'                      => 'Nama',
                    'verifyYourEmail'                => 'Mohon verifikasi email Anda',
                    'verifyYourUser'                 => 'Untuk menyelesaikan pendaftaran - situs meminta Anda untuk memverifikasi email Anda',
                    'view'                           => 'Lihat',
                    'view_file'                      => 'Lihat berkas',
                    'year'                           => 'Tahun',
                    'yes'                            => 'Ya',
                    'youAreLoggedIn'                 => 'Anda berhasil masuk!',
                    'yourAccountNeedsAdminApproval'  => 'Akun Anda membutuhkan persetujuan administrator untuk masuk',
                    'submit'                         => 'Ajukan',
                    'relatedData'                    => 'Data yang berhubungan',
                    'update_profile_success'         => 'Profil berhasil diperbarui',
                    'change_password_success'        => 'Password berhasil diubah',
                    'delete_account_success'         => 'Akun telah berhasil dihapus',
                    'saved'                          => 'Tersimpan',
                    'profile_information'            => 'Informasi Profil',
                    'all_messages'                   => 'Semua Pesan',
                    'new_message'                    => 'Pesan baru',
                    'messages'                       => 'Pesan',
                    'inbox'                          => 'Kotak masuk',
                    'outbox'                         => 'Kotak keluar',
                    'subject'                        => 'Subjek',
                    'recipients'                     => 'Penerima',
                    'from'                           => 'Dari',
                    'to'                             => 'Untuk',
                    'reply'                          => 'Balas',
                    'body'                           => 'Body',
                    'discard'                        => 'Buang',
                    'datatables'                     => [
                        'copy'          => 'Salin',
                        'csv'           => 'CSV',
                        'excel'         => 'Excel',
                        'pdf'           => 'PDF',
                        'print'         => 'Cetak',
                        'colvis'        => 'Kolom',
                        'delete'        => 'Hapus data terpilih',
                        'zero_selected' => 'Tidak ada baris yang dipilih',
                    ],
                    'billing' => [
                        'menu'                        => 'Tagihan',
                        'current_plan'                => 'Plan Anda saat ini',
                        'choose_this_plan'            => 'Pilih \"Plan\" ini',
                        'month'                       => 'Bulan',
                        'trial_user'                  => 'Pengguna Trial',
                        'plan_purchased_successfully' => 'Plan Anda telah berhasil dibeli',
                    ],
                    'payments' => [
                        'title'        => 'Pembayaran',
                        'payment_date' => 'Tanggal Pembayaran',
                        'amount'       => 'Jumlah',
                    ],
                    'table'                                => 'Tabel',
                    'back'                                 => 'Kembali',
                    'refresh'                              => 'Muat ulang',
                    'close'                                => 'Tutup',
                    'create_success'                       => 'Item Anda telah berhasil tersimpan',
                    'update_success'                       => 'Item berhasil diubah.',
                    'delete_success'                       => 'Item berhasil dihapus',
                    'action'                               => 'Aksi',
                    'action_id'                            => 'Id Aksi',
                    'action_model'                         => 'Model Aksi',
                    'address'                              => 'Alamat',
                    'administrator_can_create_other_users' => 'Administrator',
                    'aggregate_function_use'               => 'Fungsi agregat untuk digunakan',
                    'all'                                  => 'Semua',
                    'amount'                               => 'Jumlah',
                    'answer'                               => 'Jawaban',
                    'app_csv_file_to_import'               => 'File CSV untuk di import',
                    'app_csvImport'                        => 'Import CSV',
                    'app_file_contains_header_row'         => 'Apakah File mempunyai Baris header?',
                    'app_import_data'                      => 'Import data',
                    'app_imported_rows_to_table'           => 'Import :rows baris ke tabel :table',
                    'app_parse_csv'                        => 'Parse CSV',
                    'asset'                                => 'Aset',
                    'assets'                               => 'Aset',
                    'assets_history'                       => 'Sejarah Aset',
                    'assets_management'                    => 'Manajemen aset',
                    'assigned_to'                          => 'Ditugaskan kepada',
                    'assigned_user'                        => 'Ditugaskan (pengguna)',
                    'attachment'                           => 'Lampiran',
                    'axis'                                 => 'Sumbu',
                    'back_to_list'                         => 'Kembali ke daftar',
                    'basic_crm'                            => 'CRM Standar',
                    'budget'                               => 'Anggaran',
                    'calendar_sources'                     => 'Sumber Kalender',
                    'campaign'                             => 'Campaign',
                    'campaigns'                            => 'Daftar Campaign',
                    'categories'                           => 'Kategori',
                    'category'                             => 'Kategori',
                    'category_name'                        => 'Nama kategori',
                    'change_notifications_field_1_label'   => 'Kirim notifikasi email ke Pengguna',
                    'change_notifications_field_2_label'   => 'Ketika memasukkan pada CRUD',
                    'my_profile'                           => 'Profil Saya',
                    'my_team'                              => 'Tim Saya',
                    'change_password'                      => 'Profil',
                    'delete_account'                       => 'Hapus Akun',
                    'delete_account_warning'               => 'Masukan email Anda untuk mengkonfirmasi hapus akun.\nAksi ini tidak akan dapat dibatalkan.',
                    'two_factor'                           => [
                        'title'          => 'Otentikasi dua faktor',
                        'sub_title'      => 'Otentikasi dua faktor telah dikirim melalui email. Kode berlaku selama :minutes menit. Jika Anda tidak menerima kode tersebut, Klik kirim ulang.',
                        'code'           => 'Kode Two Factor',
                        'does_not_match' => 'Otentikasi Two Factor yang dimasukan tidak sesuai',
                        'sent_again'     => 'Otentikasi dua faktor telah dikirim lagi.',
                        'expired'        => 'Otentikasi Two Factor telah kadaluarsa. Mohon masuk kembali.',
                        'enabled'        => 'Otentikasi Two Factor berhasil di aktifkan',
                        'disabled'       => 'Otentikasi Two Factor berhasil di non-aktifkan',
                        'your_code_is'   => 'Kode Two Factor Anda adalah :code.',
                        'will_expire_in' => 'Kode akan kadaluarsa dalam :minutes menit',
                        'ignore_this'    => 'Jika Anda tidak ingin masuk, abaikan pesan ini.',
                        'verify_here'    => 'Verifikasi disini',
                        'verify'         => 'Verifikasi',
                        'phone_number'   => 'Nomor Telepon',
                        'enable'         => 'Aktifkan',
                        'disable'        => 'Non aktif',
                        'resend'         => 'Kirim ulang',
                    ],
                    'chart_type'                     => 'Jenis Diagram',
                    'code'                           => 'Kode',
                    'companies'                      => 'Perusahaan',
                    'company'                        => 'Perusahaan',
                    'company_name'                   => 'Nama Perusahaan',
                    'confirm_password'               => 'Konfirmasi Password',
                    'contact_management'             => 'Manajemen Kontak',
                    'contacts'                       => 'Kontak',
                    'content_management'             => 'Manajemen Konten',
                    'copy_paste_url_bellow'          => 'tombol, copas URL di web browser Anda.',
                    'country'                        => 'Negara',
                    'coupon_management'              => 'Manajemen Kupon',
                    'coupons'                        => 'Kupon',
                    'coupons_amount'                 => 'Jumlah Kupon',
                    'create_new_calendar_source'     => 'Buat Sumber Kalender baru',
                    'create_new_notification'        => 'Buat Pemberitahuan baru',
                    'create_new_report'              => 'Buat laporan baru',
                    'created_at'                     => 'Dibuat pada',
                    'crud_date_field'                => 'Field tanggal CRUD',
                    'crud_event_field'               => 'Field label Acara',
                    'crud_title'                     => 'Judul CRUD',
                    'csv_file_to_import'             => 'File CSV yang di import',
                    'csvImport'                      => 'Import CSV',
                    'current_password'               => 'Sandi sekarang',
                    'custom_controller_index'        => 'Kustom controller index.',
                    'customer'                       => 'Pelanggan',
                    'customers'                      => 'Para Pelanggan',
                    'deleted_at'                     => 'Dihapus pada',
                    'description'                    => 'Keterangan',
                    'deselect_all'                   => 'Batalkan semua pilihan',
                    'discount_amount'                => 'Jumlah Diskon',
                    'discount_percent'               => 'Persentase Diskon',
                    'due_date'                       => 'Batas Tanggal Terakhir',
                    'edit_calendar_source'           => 'Ubah Sumber Kalender',
                    'email_greet'                    => 'Hai',
                    'email_line1'                    => 'Anda menerima email ini karena Anda meminta untuk mengubah sandi.',
                    'email_line2'                    => 'Jika Anda merasa tidak meminta untuk melakukan perubahan sandi maka abaikan pesan ini.',
                    'email_regards'                  => 'Salam',
                    'end_time'                       => 'Waktu Selesai',
                    'entry_date'                     => 'Tanggal pencatatan',
                    'excerpt'                        => 'Kutipan',
                    'faq_management'                 => 'Manajemen  FAQ',
                    'featured_image'                 => 'Gambar unggulan',
                    'fee_percent'                    => 'Persentase fee',
                    'file'                           => 'FIle',
                    'file_contains_header_row'       => 'File mengandung baris awal',
                    'first_name'                     => 'Nama Depan',
                    'group_by'                       => 'Kelompokkan berdasarkan',
                    'if_you_are_having_trouble'      => 'Jika Anda punya masalah, silakan klik tombol',
                    'import_data'                    => 'Impor Data',
                    'imported_rows_to_table'         => 'Baris :rows diimpor ke tabel :table',
                    'integer_float_placeholder'      => 'Silakan pilih salah satu field integer / float',
                    'is_created'                     => 'dibuat',
                    'is_deleted'                     => 'dihapus',
                    'is_updated'                     => 'diperbarui',
                    'label_field'                    => 'Label kolom',
                    'last_name'                      => 'Nama Belakang',
                    'location'                       => 'Lokasi',
                    'locations'                      => 'Lokasi',
                    'main_currency'                  => 'Mata Uang Utama',
                    'message'                        => 'Pesan',
                    'name'                           => 'Nama',
                    'new_calendar_source'            => 'Buat Sumber Kalender',
                    'new_password'                   => 'Sandi baru',
                    'no_calendar_sources'            => 'Belum ada sumber kalender.',
                    'no_entries_in_table'            => 'Tidak ada data di tabel',
                    'no_reports_yet'                 => 'Belum ada laporan.',
                    'not_approved_p'                 => 'Akun anda masih belum disetujui oleh administrator, mohon bersabar dan coba lagi nanti.',
                    'not_approved_title'             => 'Anda tidak disetujui',
                    'note_text'                      => 'Catatan',
                    'notifications'                  => 'Pemberitahuan',
                    'notify_user'                    => 'Beritahu Pengguna',
                    'pages'                          => 'Halaman',
                    'parse_csv'                      => 'Import File CSV',
                    'permadel'                       => 'Hapus Permanen',
                    'phone'                          => 'Telepon',
                    'phone1'                         => 'Telepon 1',
                    'phone2'                         => 'Telepon 2',
                    'photo'                          => 'Foto',
                    'photo1'                         => 'Foto1',
                    'photo2'                         => 'Foto2',
                    'photo3'                         => 'Foto3',
                    'prefix'                         => 'Awalan',
                    'price'                          => 'Harga',
                    'product_management'             => 'Manajemen Produk',
                    'product_name'                   => 'Nama Produk',
                    'products'                       => 'Produk',
                    'question'                       => 'Pertanyaan',
                    'questions'                      => 'Pertanyaan',
                    'recipient'                      => 'Penerima',
                    'redeem_time'                    => 'Redeem waktu',
                    'registration'                   => 'Pendaftaran',
                    'remember_token'                 => 'Token Pengingat',
                    'reports_x_axis_field'           => 'Sumbu X - pilih salah satu bidang tanggal / waktu',
                    'reports_y_axis_field'           => 'Sumbu Y - pilih salah satu bidang nomor',
                    'reset_password_woops'           => '<strong>Upss!</strong> Ada masalah saat proses memasukkan data:',
                    'restore'                        => 'Mengembalikan',
                    'sample_answer'                  => 'Contoh Jawaban',
                    'sample_category'                => 'Contoh Kategori',
                    'sample_question'                => 'Contoh Pertanyaan',
                    'select_all'                     => 'Pilih semua',
                    'select_crud_placeholder'        => 'Silakan pilih salah satu CRUD Anda',
                    'select_dt_placeholder'          => 'Pilih salah satu field tanggal/waktu',
                    'select_users_placeholder'       => 'Silakan pilih salah satu user Anda',
                    'send'                           => 'Kirim',
                    'serial_number'                  => 'Nomor seri',
                    'simple_user'                    => 'Pengguna Biasa',
                    'skype'                          => 'Skype',
                    'slug'                           => 'Slug',
                    'start_date'                     => 'Tanggal mulai',
                    'start_time'                     => 'Waktu Mulai',
                    'status'                         => 'Status',
                    'statuses'                       => 'Status',
                    'stripe_transactions'            => 'Transaksi Stripe',
                    'subscription-billing'           => 'Berlangganan',
                    'subscription-payments'          => 'Pembayaran',
                    'suffix'                         => 'Kata Belakang',
                    'tag'                            => 'Menandai',
                    'tags'                           => 'Tag',
                    'task_management'                => 'Manajemen Tugas',
                    'tasks'                          => 'Tugas',
                    'team-management'                => 'Anggota Tim',
                    'team-management-singular'       => 'Tim',
                    'text'                           => 'Teks',
                    'there_were_problems_with_input' => 'Terdapat masalah dalam pengisian',
                    'time'                           => 'Waktu',
                    'title'                          => 'Judul',
                    'transaction_date'               => 'Tanggal transaksi',
                    'trash'                          => 'Sampah',
                    'update'                         => 'Perbarui',
                    'updated_at'                     => 'Diperbarui pada',
                    'upgrade_to_premium'             => 'Tingkatkan ke Premium',
                    'user_actions'                   => 'Aksi Pengguna',
                    'valid_from'                     => 'Berlaku dari',
                    'valid_to'                       => 'Berlaku sampai',
                    'website'                        => 'Situs',
                    'when_crud'                      => 'Saat CRUD',
                    'whoops'                         => 'ups...',
                    'x_axis_field'                   => 'Bidang sumbu X (tanggal / waktu)',
                    'x_axis_group_by'                => 'Kelompok sumbu X berdasarkan',
                    'y_axis_field'                   => 'Bidang sumbu Y',
                    'you_have_no_messages'           => 'Anda tidak memiliki pesan',
                    'content'                        => 'Konten',
                    'no_alerts'                      => 'Tidak ada notifikasi',
                    'test_answers'                   => 'Jawaban Tes',
                    'test_results'                   => 'Hasil Tes',
                    'question_options'               => 'Pilihan Pertanyaan',
                    'tests'                          => 'Tes',
                    'lessons'                        => 'Mata Pelajaran',
                    'courses'                        => 'Kursus - kursus',
                    'team-members'                   => 'Anggota Tim',
                    'no_team_notice'                 => 'Saat ini Anda tidak memiliki tim yang ditugaskan. Anda dapat membuat yang baru:',
                    'team_name'                      => 'Nama tim',
                    'invite_member'                  => 'Undang anggota',
                    'invite_sent'                    => 'Undangan telah dikirim.',
                    'manage_team_members'            => 'Mengelola anggota tim',
                    'remove'                         => 'Menghapus',
                    'team_no_members_notice'         => 'Tim Anda belum memiliki anggota.',
                    'disband_team'                   => 'Bubarkan tim',
                    'team_disband_notice'            => 'Semua anggota tim Anda tidak akan lagi memiliki tim yang ditetapkan.',
                    'leave'                          => 'Keluar',
                    'calendar'                       => 'Kalender',
                    'messenger'                      => 'Pesan',

                ];
              uuid: b4134c5dadbc9692
            pagination.php:
              isDir: false
              content: |
                <?php

                return [
                    'previous' => '&laquo; Sebelumnya',
                    'next'     => 'Berikutnya &raquo;',

                ];
              uuid: 71e28ad25336269e
            panel.php:
              isDir: false
              content: |
                <?php

                return [
                    'site_title' => 'IDEP Foundation',

                ];
              uuid: 6fb3dc09dcdd9a1b
            passwords.php:
              isDir: false
              content: |
                <?php

                return [
                    'password' => 'Sandi minimal harus memiliki enam karakter dan cocok dengan konfirmasi.',
                    'reset'    => 'Sandi Anda sudah direset!',
                    'sent'     => 'Kami sudah mengirim surel yang berisi tautan untuk mereset sandi Anda!',
                    'token'    => 'Token pengaturan ulang sandi tidak sah.',
                    'user'     => 'Kami tidak dapat menemukan pengguna dengan email tersebut.',
                    'updated'  => 'Password Anda sudah di ubah',

                ];
              uuid: fdb72c04db861469
            validation.php:
              isDir: false
              content: |
                <?php

                return [
                    'accepted'         => 'Isian :attribute harus diterima.',
                    'active_url'       => 'Isian :attribute bukan URL yang valid.',
                    'after'            => 'Isian :attribute harus tanggal setelah :date.',
                    'after_or_equal'   => 'Isian :attribute harus tanggal sesudah atau sama dengan :date',
                    'alpha'            => 'Isian :attribute hanya boleh berisi huruf.',
                    'alpha_dash'       => 'Isian :attribute hanya boleh berisi huruf, angka, dan strip.',
                    'alpha_num'        => 'Isian :attribute hanya boleh berisi huruf dan angka.',
                    'latin'            => ':attribute hanya boleh berisi huruf alfabet ISO basic Latin.',
                    'latin_dash_space' => ':attribute hanya boleh berisi huruf alfabet, nomor,  tanda garis, tanda sambung dan spasi Latin ISO.',
                    'array'            => 'Isian :attribute harus berupa sebuah array.',
                    'before'           => ':attribute harus tanggal sebelum :date.',
                    'before_or_equal'  => 'Isian :attribute harus tanggal sebelum atau sama dengan :date',
                    'between'          => [
                        'numeric' => ':attribute harus diantara :min dan :max.',
                        'file'    => ':attribute harus diantara :min dan :max kilobytes.',
                        'string'  => ':attribute harus diantara :min dan :max characters.',
                        'array'   => ':attribute harus diantara :min dan :max buah.',
                    ],
                    'boolean'          => ':attribute field harus bernilai \"true\" atau \"false\".',
                    'confirmed'        => 'konfirmasi :attribute tidak cocok.',
                    'current_password' => 'Sandi salah.',
                    'date'             => ':attribuet bukan tanggal yang valid',
                    'date_equals'      => ':attribute harus sesuai dengan :date.',
                    'date_format'      => ':attribute tidak cocok dengan format standar :format',
                    'different'        => ':attribute dan :other harus berbeda.',
                    'digits'           => ':attribute harus memiliki :digits  digit',
                    'digits_between'   => ':attribute harus memiliki panjang minimal :min dan maksimal :max',
                    'dimensions'       => 'Dimensi :attribute tidak sesuai.',
                    'distinct'         => ':attribute sudah digunakan.',
                    'email'            => 'Format :attribute  tidak sesuai.',
                    'ends_with'        => ':attribute harus di akhiri dengan salah satu dari: :values.',
                    'exists'           => 'Pilihan :attribute tidak sesuai.',
                    'file'             => ':attribute harus berupa file.',
                    'filled'           => 'isian :attribute tidak boleh kosong.',
                    'gt'               => [
                        'numeric' => ':attribute harus lebih besar dari :value.',
                        'file'    => ':attribute harus lebih besar dari :value kilobytes.',
                        'string'  => ':attribute harus lebih banyak dari :value karakter.',
                        'array'   => ':attribute harus lebih dari :value item.',
                    ],
                    'gte' => [
                        'numeric' => ':attribute harus lebih besar atau sama dengan :value.',
                        'file'    => ':attribute harus lebih besar atau sama dengan :value kilobytes.',
                        'string'  => 'Jumlah :attribute harus lebih atau sama dengan :value karakter.',
                        'array'   => ':attribute harus memliki :value item atau lebih.',
                    ],
                    'image'    => 'Isian  :attribute harus berupa gambar',
                    'in'       => 'isian :attribute salah.',
                    'in_array' => ':attribute tidak boleh ada pada :other.',
                    'integer'  => ':attribute harus berupa angka.',
                    'ip'       => ':attribute harus memiliki alamat IP yang benar.',
                    'ipv4'     => ':attribute harus memiliki alamat IPv4 yang benar.',
                    'ipv6'     => ':attribute harus memiliki alamat IPv6 yang benar.',
                    'json'     => ':attribute harus memiliki format JSON yang benar.',
                    'lt'       => [
                        'numeric' => ':attribute harus kurang dari :value.',
                        'file'    => ':attribute harus kurang dari :value kilobytes.',
                        'string'  => ':attribute harus kurang dari :value karakter',
                        'array'   => ':attribute harus kurang dari :value item.',
                    ],
                    'lte' => [
                        'numeric' => ':attribute harus kurang atau sama dengan :value.',
                        'file'    => ':attribute harus kurang atau sama dengan :value kilobyte.',
                        'string'  => ':attribute harus kurang atau sama dengan :value karakter.',
                        'array'   => ':attribute tidak boleh lebih dari :value item.',
                    ],
                    'max' => [
                        'numeric' => 'Isian :attribute seharusnya tidak lebih dari :max.',
                        'file'    => 'Bidang :attribute seharusnya tidak lebih dari :max kilobytes.',
                        'string'  => 'Isian :attribute seharusnya tidak lebih dari :max karakter.',
                        'array'   => 'Isian :attribute seharusnya tidak lebih dari :max item.',
                    ],
                    'mimes'     => ':attribute harus file dengan tipe: :values.',
                    'mimetypes' => 'tipe file :attribute harus :values.',
                    'min'       => [
                        'numeric' => 'jumlah minimal  :attribute harus  :min.',
                        'file'    => ':attribute harus memiliki ukuran minimal :min kilobytes',
                        'string'  => ':attribute harus memiliki panjang minimal :min karakter',
                        'array'   => ':attribute harus memiliki minimal :min item',
                    ],
                    'not_in'               => ':attribute yang dipilih tidak sesuai',
                    'not_regex'            => 'format :attribute tidak sesuai',
                    'numeric'              => ':attribute harus berupa angka',
                    'password'             => 'Sandi salah.',
                    'present'              => 'Bidang isian :attribute wajib ada.',
                    'regex'                => 'format :attribut tidak cocok',
                    'required'             => ':attribute diperlukan',
                    'required_if'          => ':attribute diperlukan ketika  :other adalah :value.',
                    'required_unless'      => 'Bidang isian :attribute wajib diisi kecuali :other memiliki nilai :values.',
                    'required_with'        => 'Bidang isian :attribute wajib diisi bila terdapat :values.',
                    'required_with_all'    => 'Bidang isian :attribute wajib diisi bila terdapat :values.',
                    'required_without'     => 'Bidang isian :attribute wajib diisi bila tidak terdapat :values.',
                    'required_without_all' => 'Bidang isian :attribute wajib diisi bila tidak terdapat ada :values.',
                    'same'                 => 'Isian :attribute dan :other harus sama.',
                    'size'                 => [
                        'numeric' => 'Isian :attribute harus berukuran :size.',
                        'file'    => 'Bidang :attribute harus berukuran :size kilobyte.',
                        'string'  => 'Isian :attribute harus berukuran :size karakter.',
                        'array'   => 'Isian :attribute harus mengandung :size item.',
                    ],
                    'starts_with' => ':attribute harus diawali salah satu dari: :values.',
                    'string'      => ':attribute harus berupa text.',
                    'timezone'    => 'Isian :attribute harus berupa zona waktu yang valid.',
                    'unique'      => 'Isian :attribute sudah ada sebelumnya.',
                    'uploaded'    => ':attribute gagal diunggah',
                    'url'         => 'format :attribut tidak valid',
                    'uuid'        => ':attribute harus UUID yang valid.',
                    'custom'      => [
                        'attribute-name' => [
                            'rule-name' => 'custom-message',
                        ],
                    ],
                    'reserved_word'                  => ':attribute mengandung kata yang sudah ada',
                    'dont_allow_first_letter_number' => 'Kolom \":input\" tidak boleh diawali dengan nomor.',
                    'exceeds_maximum_number'         => ':attribute melebihi batas maksimal model.',
                    'db_column'                      => ':attribute hanya boleh berisi huruf alfabet, nomor,  tanda garis Latin ISO dan tidak dimulai dengan nomor',
                    'attributes'                     => [],

                ];
              uuid: ef6d0c1fc907c05b
          uuid: 787ff361d950ad30
      uuid: aa8495a575862c3b
    views:
      isDir: true
      content:
        admin:
          isDir: true
          content:
            auditLogs:
              isDir: true
              content:
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.auditLog.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <table class=" table table-bordered table-striped table-hover ajaxTable datatable datatable-AuditLog">
                                <thead>
                                    <tr>
                                        <th width="10">

                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.id') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.description') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.subject_id') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.subject_type') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.user_id') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.host') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.auditLog.fields.created_at') }}
                                        </th>
                                        <th>
                                            &nbsp;
                                        </th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                      
                      let dtOverrideGlobals = {
                        buttons: dtButtons,
                        processing: true,
                        serverSide: true,
                        retrieve: true,
                        aaSorting: [],
                        ajax: "{{ route('admin.audit-logs.index') }}",
                        columns: [
                          { data: 'placeholder', name: 'placeholder' },
                    { data: 'id', name: 'id' },
                    { data: 'description', name: 'description' },
                    { data: 'subject_id', name: 'subject_id' },
                    { data: 'subject_type', name: 'subject_type' },
                    { data: 'user_id', name: 'user_id' },
                    { data: 'host', name: 'host' },
                    { data: 'created_at', name: 'created_at' },
                    { data: 'actions', name: '{{ trans('global.actions') }}' }
                        ],
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      };
                      let table = $('.datatable-AuditLog').DataTable(dtOverrideGlobals);
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    });

                    </script>
                    @endsection
                  uuid: 8f823eaf5510cd4a
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.auditLog.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.audit-logs.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.id') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->id }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.description') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->description }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.subject_id') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->subject_id }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.subject_type') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->subject_type }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.user_id') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->user_id }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.properties') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->properties }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.host') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->host }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.auditLog.fields.created_at') }}
                                            </th>
                                            <td>
                                                {{ $auditLog->created_at }}
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.audit-logs.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>



                    @endsection
                  uuid: eacf189e73b0786b
              uuid: 9fda39fb1325ca02
            jabatans:
              isDir: true
              content:
                relationships:
                  isDir: true
                  content:
                    jabatanUsers.blade.php:
                      isDir: false
                      content: |-
                        <div class="m-3">
                            @can('user_create')
                                <div style="margin-bottom: 10px;" class="row">
                                    <div class="col-lg-12">
                                        <a class="btn btn-success" href="{{ route('admin.users.create') }}">
                                            {{ trans('global.add') }} {{ trans('cruds.user.title_singular') }}
                                        </a>
                                    </div>
                                </div>
                            @endcan
                            <div class="card">
                                <div class="card-header">
                                    {{ trans('cruds.user.title_singular') }} {{ trans('global.list') }}
                                </div>

                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class=" table table-bordered table-striped table-hover datatable datatable-jabatanUsers">
                                            <thead>
                                                <tr>
                                                    <th width="10">

                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.name') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.email') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.email_verified_at') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.roles') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.aktif') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.jabatan') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.jabatan.fields.aktif') }}
                                                    </th>
                                                    <th>
                                                        &nbsp;
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach($users as $key => $user)
                                                    <tr data-entry-id="{{ $user->id }}">
                                                        <td>

                                                        </td>
                                                        <td>
                                                            {{ $user->name ?? '' }}
                                                        </td>
                                                        <td>
                                                            {{ $user->email ?? '' }}
                                                        </td>
                                                        <td>
                                                            {{ $user->email_verified_at ?? '' }}
                                                        </td>
                                                        <td>
                                                            @foreach($user->roles as $key => $item)
                                                                <span class="badge badge-info">{{ $item->title }}</span>
                                                            @endforeach
                                                        </td>
                                                        <td>
                                                            <span style="display:none">{{ $user->aktif ?? '' }}</span>
                                                            <input type="checkbox" disabled="disabled" {{ $user->aktif ? 'checked' : '' }}>
                                                        </td>
                                                        <td>
                                                            {{ $user->jabatan->nama ?? '' }}
                                                        </td>
                                                        <td>
                                                            <span style="display:none">{{ $user->jabatan->aktif ?? '' }}</span>
                                                            <input type="checkbox" disabled="disabled" {{ $user->jabatan->aktif ? 'checked' : '' }}>
                                                        </td>
                                                        <td>
                                                            @can('user_show')
                                                                <a class="btn btn-xs btn-primary" href="{{ route('admin.users.show', $user->id) }}">
                                                                    {{ trans('global.view') }}
                                                                </a>
                                                            @endcan

                                                            @can('user_edit')
                                                                <a class="btn btn-xs btn-info" href="{{ route('admin.users.edit', $user->id) }}">
                                                                    {{ trans('global.edit') }}
                                                                </a>
                                                            @endcan

                                                            @can('user_delete')
                                                                <form action="{{ route('admin.users.destroy', $user->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                                                                    <input type="hidden" name="_method" value="DELETE">
                                                                    <input type="hidden" name="_token" value="{{ csrf_token() }}">
                                                                    <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                                                                </form>
                                                            @endcan

                                                        </td>

                                                    </tr>
                                                @endforeach
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @section('scripts')
                        @parent
                        <script>
                            $(function () {
                          let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                        @can('user_delete')
                          let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'
                          let deleteButton = {
                            text: deleteButtonTrans,
                            url: "{{ route('admin.users.massDestroy') }}",
                            className: 'btn-danger',
                            action: function (e, dt, node, config) {
                              var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {
                                  return $(entry).data('entry-id')
                              });

                              if (ids.length === 0) {
                                alert('{{ trans('global.datatables.zero_selected') }}')

                                return
                              }

                              if (confirm('{{ trans('global.areYouSure') }}')) {
                                $.ajax({
                                  headers: {'x-csrf-token': _token},
                                  method: 'POST',
                                  url: config.url,
                                  data: { ids: ids, _method: 'DELETE' }})
                                  .done(function () { location.reload() })
                              }
                            }
                          }
                          dtButtons.push(deleteButton)
                        @endcan

                          $.extend(true, $.fn.dataTable.defaults, {
                            orderCellsTop: true,
                            order: [[ 1, 'desc' ]],
                            pageLength: 100,
                          });
                          let table = $('.datatable-jabatanUsers:not(.ajaxTable)').DataTable({ buttons: dtButtons })
                          $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                              $($.fn.dataTable.tables(true)).DataTable()
                                  .columns.adjust();
                          });
                          
                        })

                        </script>
                        @endsection
                      uuid: 1c3ff462f968af52
                  uuid: 479bfcb40cc57439
                create.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.create') }} {{ trans('cruds.jabatan.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.jabatans.store") }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label for="nama">{{ trans('cruds.jabatan.fields.nama') }}</label>
                                    <input class="form-control {{ $errors->has('nama') ? 'is-invalid' : '' }}" type="text" name="nama" id="nama" value="{{ old('nama', '') }}">
                                    @if($errors->has('nama'))
                                        <span class="text-danger">{{ $errors->first('nama') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.jabatan.fields.nama_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ old('aktif', 0) == 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.jabatan.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.jabatan.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 71660a5c91ba2566
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.edit') }} {{ trans('cruds.jabatan.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.jabatans.update", [$jabatan->id]) }}" enctype="multipart/form-data">
                                @method('PUT')
                                @csrf
                                <div class="form-group">
                                    <label for="nama">{{ trans('cruds.jabatan.fields.nama') }}</label>
                                    <input class="form-control {{ $errors->has('nama') ? 'is-invalid' : '' }}" type="text" name="nama" id="nama" value="{{ old('nama', $jabatan->nama) }}">
                                    @if($errors->has('nama'))
                                        <span class="text-danger">{{ $errors->first('nama') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.jabatan.fields.nama_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ $jabatan->aktif || old('aktif', 0) === 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.jabatan.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.jabatan.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 436383d909364ced
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    @can('jabatan_create')
                        <div style="margin-bottom: 10px;" class="row">
                            <div class="col-lg-12">
                                <a class="btn btn-success" href="{{ route('admin.jabatans.create') }}">
                                    {{ trans('global.add') }} {{ trans('cruds.jabatan.title_singular') }}
                                </a>
                            </div>
                        </div>
                    @endcan
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.jabatan.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <table class=" table table-bordered table-striped table-hover ajaxTable datatable datatable-Jabatan">
                                <thead>
                                    <tr>
                                        <th width="10">

                                        </th>
                                        <th>
                                            {{ trans('cruds.jabatan.fields.nama') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.jabatan.fields.aktif') }}
                                        </th>
                                        <th>
                                            &nbsp;
                                        </th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('jabatan_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}';
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.jabatans.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).data(), function (entry) {
                              return entry.id
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      let dtOverrideGlobals = {
                        buttons: dtButtons,
                        processing: true,
                        serverSide: true,
                        retrieve: true,
                        aaSorting: [],
                        ajax: "{{ route('admin.jabatans.index') }}",
                        columns: [
                          { data: 'placeholder', name: 'placeholder' },
                    { data: 'nama', name: 'nama' },
                    { data: 'aktif', name: 'aktif' },
                    { data: 'actions', name: '{{ trans('global.actions') }}' }
                        ],
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      };
                      let table = $('.datatable-Jabatan').DataTable(dtOverrideGlobals);
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    });

                    </script>
                    @endsection
                  uuid: a9c32aa076a36d67
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.jabatan.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.jabatans.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.jabatan.fields.nama') }}
                                            </th>
                                            <td>
                                                {{ $jabatan->nama }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.jabatan.fields.aktif') }}
                                            </th>
                                            <td>
                                                <input type="checkbox" disabled="disabled" {{ $jabatan->aktif ? 'checked' : '' }}>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.jabatans.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.relatedData') }}
                        </div>
                        <ul class="nav nav-tabs" role="tablist" id="relationship-tabs">
                            <li class="nav-item">
                                <a class="nav-link" href="#jabatan_users" role="tab" data-toggle="tab">
                                    {{ trans('cruds.user.title') }}
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane" role="tabpanel" id="jabatan_users">
                                @includeIf('admin.jabatans.relationships.jabatanUsers', ['users' => $jabatan->jabatanUsers])
                            </div>
                        </div>
                    </div>

                    @endsection
                  uuid: 847eed841bd7d3f8
              uuid: 73a8e9c9d9cd0f24
            permissions:
              isDir: true
              content:
                create.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.create') }} {{ trans('cruds.permission.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.permissions.store") }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="title">{{ trans('cruds.permission.fields.title') }}</label>
                                    <input class="form-control {{ $errors->has('title') ? 'is-invalid' : '' }}" type="text" name="title" id="title" value="{{ old('title', '') }}" required>
                                    @if($errors->has('title'))
                                        <span class="text-danger">{{ $errors->first('title') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.permission.fields.title_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 99c8bd48242bc15d
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.edit') }} {{ trans('cruds.permission.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.permissions.update", [$permission->id]) }}" enctype="multipart/form-data">
                                @method('PUT')
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="title">{{ trans('cruds.permission.fields.title') }}</label>
                                    <input class="form-control {{ $errors->has('title') ? 'is-invalid' : '' }}" type="text" name="title" id="title" value="{{ old('title', $permission->title) }}" required>
                                    @if($errors->has('title'))
                                        <span class="text-danger">{{ $errors->first('title') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.permission.fields.title_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: c17ab8398d82799a
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    @can('permission_create')
                        <div style="margin-bottom: 10px;" class="row">
                            <div class="col-lg-12">
                                <a class="btn btn-success" href="{{ route('admin.permissions.create') }}">
                                    {{ trans('global.add') }} {{ trans('cruds.permission.title_singular') }}
                                </a>
                            </div>
                        </div>
                    @endcan
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.permission.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <div class="table-responsive">
                                <table class=" table table-bordered table-striped table-hover datatable datatable-Permission">
                                    <thead>
                                        <tr>
                                            <th width="10">

                                            </th>
                                            <th>
                                                {{ trans('cruds.permission.fields.id') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.permission.fields.title') }}
                                            </th>
                                            <th>
                                                &nbsp;
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach($permissions as $key => $permission)
                                            <tr data-entry-id="{{ $permission->id }}">
                                                <td>

                                                </td>
                                                <td>
                                                    {{ $permission->id ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $permission->title ?? '' }}
                                                </td>
                                                <td>
                                                    @can('permission_show')
                                                        <a class="btn btn-xs btn-primary" href="{{ route('admin.permissions.show', $permission->id) }}">
                                                            {{ trans('global.view') }}
                                                        </a>
                                                    @endcan

                                                    @can('permission_edit')
                                                        <a class="btn btn-xs btn-info" href="{{ route('admin.permissions.edit', $permission->id) }}">
                                                            {{ trans('global.edit') }}
                                                        </a>
                                                    @endcan

                                                    @can('permission_delete')
                                                        <form action="{{ route('admin.permissions.destroy', $permission->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                                                            <input type="hidden" name="_method" value="DELETE">
                                                            <input type="hidden" name="_token" value="{{ csrf_token() }}">
                                                            <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                                                        </form>
                                                    @endcan

                                                </td>

                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('permission_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.permissions.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {
                              return $(entry).data('entry-id')
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      $.extend(true, $.fn.dataTable.defaults, {
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      });
                      let table = $('.datatable-Permission:not(.ajaxTable)').DataTable({ buttons: dtButtons })
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    })

                    </script>
                    @endsection
                  uuid: 5cae348d9a8dddea
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.permission.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.permissions.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.permission.fields.id') }}
                                            </th>
                                            <td>
                                                {{ $permission->id }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.permission.fields.title') }}
                                            </th>
                                            <td>
                                                {{ $permission->title }}
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.permissions.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>



                    @endsection
                  uuid: c2d893309ab1b280
              uuid: 1ab55a0049c76bfc
            roles:
              isDir: true
              content:
                relationships:
                  isDir: true
                  content:
                    rolesUsers.blade.php:
                      isDir: false
                      content: |-
                        <div class="m-3">
                            @can('user_create')
                                <div style="margin-bottom: 10px;" class="row">
                                    <div class="col-lg-12">
                                        <a class="btn btn-success" href="{{ route('admin.users.create') }}">
                                            {{ trans('global.add') }} {{ trans('cruds.user.title_singular') }}
                                        </a>
                                    </div>
                                </div>
                            @endcan
                            <div class="card">
                                <div class="card-header">
                                    {{ trans('cruds.user.title_singular') }} {{ trans('global.list') }}
                                </div>

                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class=" table table-bordered table-striped table-hover datatable datatable-rolesUsers">
                                            <thead>
                                                <tr>
                                                    <th width="10">

                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.name') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.email') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.email_verified_at') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.roles') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.aktif') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.user.fields.jabatan') }}
                                                    </th>
                                                    <th>
                                                        {{ trans('cruds.jabatan.fields.aktif') }}
                                                    </th>
                                                    <th>
                                                        &nbsp;
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach($users as $key => $user)
                                                    <tr data-entry-id="{{ $user->id }}">
                                                        <td>

                                                        </td>
                                                        <td>
                                                            {{ $user->name ?? '' }}
                                                        </td>
                                                        <td>
                                                            {{ $user->email ?? '' }}
                                                        </td>
                                                        <td>
                                                            {{ $user->email_verified_at ?? '' }}
                                                        </td>
                                                        <td>
                                                            @foreach($user->roles as $key => $item)
                                                                <span class="badge badge-info">{{ $item->title }}</span>
                                                            @endforeach
                                                        </td>
                                                        <td>
                                                            <span style="display:none">{{ $user->aktif ?? '' }}</span>
                                                            <input type="checkbox" disabled="disabled" {{ $user->aktif ? 'checked' : '' }}>
                                                        </td>
                                                        <td>
                                                            {{ $user->jabatan->nama ?? '' }}
                                                        </td>
                                                        <td>
                                                            <span style="display:none">{{ $user->jabatan->aktif ?? '' }}</span>
                                                            <input type="checkbox" disabled="disabled" {{ $user->jabatan->aktif ? 'checked' : '' }}>
                                                        </td>
                                                        <td>
                                                            @can('user_show')
                                                                <a class="btn btn-xs btn-primary" href="{{ route('admin.users.show', $user->id) }}">
                                                                    {{ trans('global.view') }}
                                                                </a>
                                                            @endcan

                                                            @can('user_edit')
                                                                <a class="btn btn-xs btn-info" href="{{ route('admin.users.edit', $user->id) }}">
                                                                    {{ trans('global.edit') }}
                                                                </a>
                                                            @endcan

                                                            @can('user_delete')
                                                                <form action="{{ route('admin.users.destroy', $user->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                                                                    <input type="hidden" name="_method" value="DELETE">
                                                                    <input type="hidden" name="_token" value="{{ csrf_token() }}">
                                                                    <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                                                                </form>
                                                            @endcan

                                                        </td>

                                                    </tr>
                                                @endforeach
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @section('scripts')
                        @parent
                        <script>
                            $(function () {
                          let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                        @can('user_delete')
                          let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'
                          let deleteButton = {
                            text: deleteButtonTrans,
                            url: "{{ route('admin.users.massDestroy') }}",
                            className: 'btn-danger',
                            action: function (e, dt, node, config) {
                              var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {
                                  return $(entry).data('entry-id')
                              });

                              if (ids.length === 0) {
                                alert('{{ trans('global.datatables.zero_selected') }}')

                                return
                              }

                              if (confirm('{{ trans('global.areYouSure') }}')) {
                                $.ajax({
                                  headers: {'x-csrf-token': _token},
                                  method: 'POST',
                                  url: config.url,
                                  data: { ids: ids, _method: 'DELETE' }})
                                  .done(function () { location.reload() })
                              }
                            }
                          }
                          dtButtons.push(deleteButton)
                        @endcan

                          $.extend(true, $.fn.dataTable.defaults, {
                            orderCellsTop: true,
                            order: [[ 1, 'desc' ]],
                            pageLength: 100,
                          });
                          let table = $('.datatable-rolesUsers:not(.ajaxTable)').DataTable({ buttons: dtButtons })
                          $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                              $($.fn.dataTable.tables(true)).DataTable()
                                  .columns.adjust();
                          });
                          
                        })

                        </script>
                        @endsection
                      uuid: e5a3be9c739fab56
                  uuid: a892b8eeeae5a0b7
                create.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.create') }} {{ trans('cruds.role.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.roles.store") }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="title">{{ trans('cruds.role.fields.title') }}</label>
                                    <input class="form-control {{ $errors->has('title') ? 'is-invalid' : '' }}" type="text" name="title" id="title" value="{{ old('title', '') }}" required>
                                    @if($errors->has('title'))
                                        <span class="text-danger">{{ $errors->first('title') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.title_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="permissions">{{ trans('cruds.role.fields.permissions') }}</label>
                                    <div style="padding-bottom: 4px">
                                        <span class="btn btn-info btn-xs select-all" style="border-radius: 0">{{ trans('global.select_all') }}</span>
                                        <span class="btn btn-info btn-xs deselect-all" style="border-radius: 0">{{ trans('global.deselect_all') }}</span>
                                    </div>
                                    <select class="form-control select2 {{ $errors->has('permissions') ? 'is-invalid' : '' }}" name="permissions[]" id="permissions" multiple required>
                                        @foreach($permissions as $id => $permission)
                                            <option value="{{ $id }}" {{ in_array($id, old('permissions', [])) ? 'selected' : '' }}>{{ $permission }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('permissions'))
                                        <span class="text-danger">{{ $errors->first('permissions') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.permissions_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ old('aktif', 0) == 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.role.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 1adf8816abd836fc
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.edit') }} {{ trans('cruds.role.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.roles.update", [$role->id]) }}" enctype="multipart/form-data">
                                @method('PUT')
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="title">{{ trans('cruds.role.fields.title') }}</label>
                                    <input class="form-control {{ $errors->has('title') ? 'is-invalid' : '' }}" type="text" name="title" id="title" value="{{ old('title', $role->title) }}" required>
                                    @if($errors->has('title'))
                                        <span class="text-danger">{{ $errors->first('title') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.title_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="permissions">{{ trans('cruds.role.fields.permissions') }}</label>
                                    <div style="padding-bottom: 4px">
                                        <span class="btn btn-info btn-xs select-all" style="border-radius: 0">{{ trans('global.select_all') }}</span>
                                        <span class="btn btn-info btn-xs deselect-all" style="border-radius: 0">{{ trans('global.deselect_all') }}</span>
                                    </div>
                                    <select class="form-control select2 {{ $errors->has('permissions') ? 'is-invalid' : '' }}" name="permissions[]" id="permissions" multiple required>
                                        @foreach($permissions as $id => $permission)
                                            <option value="{{ $id }}" {{ (in_array($id, old('permissions', [])) || $role->permissions->contains($id)) ? 'selected' : '' }}>{{ $permission }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('permissions'))
                                        <span class="text-danger">{{ $errors->first('permissions') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.permissions_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ $role->aktif || old('aktif', 0) === 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.role.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.role.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: aa93390d3184e215
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    @can('role_create')
                        <div style="margin-bottom: 10px;" class="row">
                            <div class="col-lg-12">
                                <a class="btn btn-success" href="{{ route('admin.roles.create') }}">
                                    {{ trans('global.add') }} {{ trans('cruds.role.title_singular') }}
                                </a>
                            </div>
                        </div>
                    @endcan
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.role.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <table class=" table table-bordered table-striped table-hover ajaxTable datatable datatable-Role">
                                <thead>
                                    <tr>
                                        <th width="10">

                                        </th>
                                        <th>
                                            {{ trans('cruds.role.fields.title') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.role.fields.permissions') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.role.fields.aktif') }}
                                        </th>
                                        <th>
                                            &nbsp;
                                        </th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('role_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}';
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.roles.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).data(), function (entry) {
                              return entry.id
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      let dtOverrideGlobals = {
                        buttons: dtButtons,
                        processing: true,
                        serverSide: true,
                        retrieve: true,
                        aaSorting: [],
                        ajax: "{{ route('admin.roles.index') }}",
                        columns: [
                          { data: 'placeholder', name: 'placeholder' },
                    { data: 'title', name: 'title' },
                    { data: 'permissions', name: 'permissions.title' },
                    { data: 'aktif', name: 'aktif' },
                    { data: 'actions', name: '{{ trans('global.actions') }}' }
                        ],
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      };
                      let table = $('.datatable-Role').DataTable(dtOverrideGlobals);
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    });

                    </script>
                    @endsection
                  uuid: 15a327c00f0558f7
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.role.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.roles.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.role.fields.title') }}
                                            </th>
                                            <td>
                                                {{ $role->title }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.role.fields.permissions') }}
                                            </th>
                                            <td>
                                                @foreach($role->permissions as $key => $permissions)
                                                    <span class="label label-info">{{ $permissions->title }}</span>
                                                @endforeach
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.role.fields.aktif') }}
                                            </th>
                                            <td>
                                                <input type="checkbox" disabled="disabled" {{ $role->aktif ? 'checked' : '' }}>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.roles.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.relatedData') }}
                        </div>
                        <ul class="nav nav-tabs" role="tablist" id="relationship-tabs">
                            <li class="nav-item">
                                <a class="nav-link" href="#roles_users" role="tab" data-toggle="tab">
                                    {{ trans('cruds.user.title') }}
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane" role="tabpanel" id="roles_users">
                                @includeIf('admin.roles.relationships.rolesUsers', ['users' => $role->rolesUsers])
                            </div>
                        </div>
                    </div>

                    @endsection
                  uuid: 87d165c6ee4170a9
              uuid: 2bf704e18443dc0d
            team-members:
              isDir: true
              content:
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    <div class="card">
                        <div class="card-body">
                            <form action="{{ route('admin.team-members.invite') }}" method="POST">
                                @csrf
                                <div class="row">
                                    <div class="col-auto">
                                        <input class="form-control" type="text" name="email" id="email" placeholder="Email">
                                    </div>
                                    <div class="col p-0">
                                        <button class="btn btn-success" type="submit">
                                            Invite
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.user.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <div class="table-responsive">
                                <table class=" table table-bordered table-striped table-hover datatable datatable-User">
                                    <thead>
                                        <tr>
                                            <th width="10">

                                            </th>
                                            <th>
                                                {{ trans('cruds.user.fields.id') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.user.fields.name') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.user.fields.email') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.user.fields.email_verified_at') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.user.fields.roles') }}
                                            </th>
                                            <th>
                                                &nbsp;
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach($users as $key => $user)
                                            <tr data-entry-id="{{ $user->id }}">
                                                <td>

                                                </td>
                                                <td>
                                                    {{ $user->id ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $user->name ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $user->email ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $user->email_verified_at ?? '' }}
                                                </td>
                                                <td>
                                                    @foreach($user->roles as $key => $item)
                                                        <span class="badge badge-info">{{ $item->title }}</span>
                                                    @endforeach
                                                </td>
                                                <td>


                                                    @can('user_delete')
                                                        <form action="{{ route('admin.users.destroy', $user->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                                                            <input type="hidden" name="_method" value="DELETE">
                                                            <input type="hidden" name="_token" value="{{ csrf_token() }}">
                                                            <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                                                        </form>
                                                    @endcan

                                                </td>

                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('user_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.users.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {
                              return $(entry).data('entry-id')
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      $.extend(true, $.fn.dataTable.defaults, {
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      });
                      let table = $('.datatable-User:not(.ajaxTable)').DataTable({ buttons: dtButtons })
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    })

                    </script>
                    @endsection
                  uuid: 14b7eeb58b14ea24
              uuid: a911054e9e0032b2
            teams:
              isDir: true
              content:
                create.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.create') }} {{ trans('cruds.team.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.teams.store") }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="name">{{ trans('cruds.team.fields.name') }}</label>
                                    <input class="form-control {{ $errors->has('name') ? 'is-invalid' : '' }}" type="text" name="name" id="name" value="{{ old('name', '') }}" required>
                                    @if($errors->has('name'))
                                        <span class="text-danger">{{ $errors->first('name') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.team.fields.name_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 5c37e747a648186b
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.edit') }} {{ trans('cruds.team.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.teams.update", [$team->id]) }}" enctype="multipart/form-data">
                                @method('PUT')
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="name">{{ trans('cruds.team.fields.name') }}</label>
                                    <input class="form-control {{ $errors->has('name') ? 'is-invalid' : '' }}" type="text" name="name" id="name" value="{{ old('name', $team->name) }}" required>
                                    @if($errors->has('name'))
                                        <span class="text-danger">{{ $errors->first('name') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.team.fields.name_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: a43304ef3bc32268
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    @can('team_create')
                        <div style="margin-bottom: 10px;" class="row">
                            <div class="col-lg-12">
                                <a class="btn btn-success" href="{{ route('admin.teams.create') }}">
                                    {{ trans('global.add') }} {{ trans('cruds.team.title_singular') }}
                                </a>
                            </div>
                        </div>
                    @endcan
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.team.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <div class="table-responsive">
                                <table class=" table table-bordered table-striped table-hover datatable datatable-Team">
                                    <thead>
                                        <tr>
                                            <th width="10">

                                            </th>
                                            <th>
                                                {{ trans('cruds.team.fields.id') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.team.fields.name') }}
                                            </th>
                                            <th>
                                                {{ trans('cruds.team.fields.owner') }}
                                            </th>
                                            <th>
                                                &nbsp;
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach($teams as $key => $team)
                                            <tr data-entry-id="{{ $team->id }}">
                                                <td>

                                                </td>
                                                <td>
                                                    {{ $team->id ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $team->name ?? '' }}
                                                </td>
                                                <td>
                                                    {{ $team->owner->name ?? '' }}
                                                </td>
                                                <td>
                                                    @can('team_show')
                                                        <a class="btn btn-xs btn-primary" href="{{ route('admin.teams.show', $team->id) }}">
                                                            {{ trans('global.view') }}
                                                        </a>
                                                    @endcan

                                                    @can('team_edit')
                                                        <a class="btn btn-xs btn-info" href="{{ route('admin.teams.edit', $team->id) }}">
                                                            {{ trans('global.edit') }}
                                                        </a>
                                                    @endcan

                                                    @can('team_delete')
                                                        <form action="{{ route('admin.teams.destroy', $team->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                                                            <input type="hidden" name="_method" value="DELETE">
                                                            <input type="hidden" name="_token" value="{{ csrf_token() }}">
                                                            <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                                                        </form>
                                                    @endcan

                                                </td>

                                            </tr>
                                        @endforeach
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('team_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.teams.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {
                              return $(entry).data('entry-id')
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      $.extend(true, $.fn.dataTable.defaults, {
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      });
                      let table = $('.datatable-Team:not(.ajaxTable)').DataTable({ buttons: dtButtons })
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    })

                    </script>
                    @endsection
                  uuid: 009c3e5fa0810de3
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.team.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.teams.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.team.fields.id') }}
                                            </th>
                                            <td>
                                                {{ $team->id }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.team.fields.name') }}
                                            </th>
                                            <td>
                                                {{ $team->name }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.team.fields.owner') }}
                                            </th>
                                            <td>
                                                {{ $team->owner->name ?? '' }}
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.teams.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>



                    @endsection
                  uuid: 01dace2fa139b51c
              uuid: a51b90149c4e1ea1
            users:
              isDir: true
              content:
                create.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.create') }} {{ trans('cruds.user.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.users.store") }}" enctype="multipart/form-data">
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="name">{{ trans('cruds.user.fields.name') }}</label>
                                    <input class="form-control {{ $errors->has('name') ? 'is-invalid' : '' }}" type="text" name="name" id="name" value="{{ old('name', '') }}" required>
                                    @if($errors->has('name'))
                                        <span class="text-danger">{{ $errors->first('name') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.name_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="email">{{ trans('cruds.user.fields.email') }}</label>
                                    <input class="form-control {{ $errors->has('email') ? 'is-invalid' : '' }}" type="email" name="email" id="email" value="{{ old('email') }}" required>
                                    @if($errors->has('email'))
                                        <span class="text-danger">{{ $errors->first('email') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.email_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="password">{{ trans('cruds.user.fields.password') }}</label>
                                    <input class="form-control {{ $errors->has('password') ? 'is-invalid' : '' }}" type="password" name="password" id="password" required>
                                    @if($errors->has('password'))
                                        <span class="text-danger">{{ $errors->first('password') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.password_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="roles">{{ trans('cruds.user.fields.roles') }}</label>
                                    <div style="padding-bottom: 4px">
                                        <span class="btn btn-info btn-xs select-all" style="border-radius: 0">{{ trans('global.select_all') }}</span>
                                        <span class="btn btn-info btn-xs deselect-all" style="border-radius: 0">{{ trans('global.deselect_all') }}</span>
                                    </div>
                                    <select class="form-control select2 {{ $errors->has('roles') ? 'is-invalid' : '' }}" name="roles[]" id="roles" multiple required>
                                        @foreach($roles as $id => $role)
                                            <option value="{{ $id }}" {{ in_array($id, old('roles', [])) ? 'selected' : '' }}>{{ $role }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('roles'))
                                        <span class="text-danger">{{ $errors->first('roles') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.roles_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ old('aktif', 0) == 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.user.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label for="jabatan_id">{{ trans('cruds.user.fields.jabatan') }}</label>
                                    <select class="form-control select2 {{ $errors->has('jabatan') ? 'is-invalid' : '' }}" name="jabatan_id" id="jabatan_id">
                                        @foreach($jabatans as $id => $entry)
                                            <option value="{{ $id }}" {{ old('jabatan_id') == $id ? 'selected' : '' }}>{{ $entry }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('jabatan'))
                                        <span class="text-danger">{{ $errors->first('jabatan') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.jabatan_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label for="team_id">{{ trans('cruds.user.fields.team') }}</label>
                                    <select class="form-control select2 {{ $errors->has('team') ? 'is-invalid' : '' }}" name="team_id" id="team_id">
                                        @foreach($teams as $id => $entry)
                                            <option value="{{ $id }}" {{ old('team_id') == $id ? 'selected' : '' }}>{{ $entry }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('team'))
                                        <span class="text-danger">{{ $errors->first('team') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.team_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 862614e1b9ff8570
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.edit') }} {{ trans('cruds.user.title_singular') }}
                        </div>

                        <div class="card-body">
                            <form method="POST" action="{{ route("admin.users.update", [$user->id]) }}" enctype="multipart/form-data">
                                @method('PUT')
                                @csrf
                                <div class="form-group">
                                    <label class="required" for="name">{{ trans('cruds.user.fields.name') }}</label>
                                    <input class="form-control {{ $errors->has('name') ? 'is-invalid' : '' }}" type="text" name="name" id="name" value="{{ old('name', $user->name) }}" required>
                                    @if($errors->has('name'))
                                        <span class="text-danger">{{ $errors->first('name') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.name_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="email">{{ trans('cruds.user.fields.email') }}</label>
                                    <input class="form-control {{ $errors->has('email') ? 'is-invalid' : '' }}" type="email" name="email" id="email" value="{{ old('email', $user->email) }}" required>
                                    @if($errors->has('email'))
                                        <span class="text-danger">{{ $errors->first('email') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.email_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="password">{{ trans('cruds.user.fields.password') }}</label>
                                    <input class="form-control {{ $errors->has('password') ? 'is-invalid' : '' }}" type="password" name="password" id="password">
                                    @if($errors->has('password'))
                                        <span class="text-danger">{{ $errors->first('password') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.password_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label class="required" for="roles">{{ trans('cruds.user.fields.roles') }}</label>
                                    <div style="padding-bottom: 4px">
                                        <span class="btn btn-info btn-xs select-all" style="border-radius: 0">{{ trans('global.select_all') }}</span>
                                        <span class="btn btn-info btn-xs deselect-all" style="border-radius: 0">{{ trans('global.deselect_all') }}</span>
                                    </div>
                                    <select class="form-control select2 {{ $errors->has('roles') ? 'is-invalid' : '' }}" name="roles[]" id="roles" multiple required>
                                        @foreach($roles as $id => $role)
                                            <option value="{{ $id }}" {{ (in_array($id, old('roles', [])) || $user->roles->contains($id)) ? 'selected' : '' }}>{{ $role }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('roles'))
                                        <span class="text-danger">{{ $errors->first('roles') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.roles_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check {{ $errors->has('aktif') ? 'is-invalid' : '' }}">
                                        <input type="hidden" name="aktif" value="0">
                                        <input class="form-check-input" type="checkbox" name="aktif" id="aktif" value="1" {{ $user->aktif || old('aktif', 0) === 1 ? 'checked' : '' }}>
                                        <label class="form-check-label" for="aktif">{{ trans('cruds.user.fields.aktif') }}</label>
                                    </div>
                                    @if($errors->has('aktif'))
                                        <span class="text-danger">{{ $errors->first('aktif') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.aktif_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label for="jabatan_id">{{ trans('cruds.user.fields.jabatan') }}</label>
                                    <select class="form-control select2 {{ $errors->has('jabatan') ? 'is-invalid' : '' }}" name="jabatan_id" id="jabatan_id">
                                        @foreach($jabatans as $id => $entry)
                                            <option value="{{ $id }}" {{ (old('jabatan_id') ? old('jabatan_id') : $user->jabatan->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('jabatan'))
                                        <span class="text-danger">{{ $errors->first('jabatan') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.jabatan_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <label for="team_id">{{ trans('cruds.user.fields.team') }}</label>
                                    <select class="form-control select2 {{ $errors->has('team') ? 'is-invalid' : '' }}" name="team_id" id="team_id">
                                        @foreach($teams as $id => $entry)
                                            <option value="{{ $id }}" {{ (old('team_id') ? old('team_id') : $user->team->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}</option>
                                        @endforeach
                                    </select>
                                    @if($errors->has('team'))
                                        <span class="text-danger">{{ $errors->first('team') }}</span>
                                    @endif
                                    <span class="help-block">{{ trans('cruds.user.fields.team_helper') }}</span>
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-danger" type="submit">
                                        {{ trans('global.save') }}
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    @endsection
                  uuid: 13eab8fa59e7af07
                index.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')
                    @can('user_create')
                        <div style="margin-bottom: 10px;" class="row">
                            <div class="col-lg-12">
                                <a class="btn btn-success" href="{{ route('admin.users.create') }}">
                                    {{ trans('global.add') }} {{ trans('cruds.user.title_singular') }}
                                </a>
                            </div>
                        </div>
                    @endcan
                    <div class="card">
                        <div class="card-header">
                            {{ trans('cruds.user.title_singular') }} {{ trans('global.list') }}
                        </div>

                        <div class="card-body">
                            <table class=" table table-bordered table-striped table-hover ajaxTable datatable datatable-User">
                                <thead>
                                    <tr>
                                        <th width="10">

                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.name') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.email') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.email_verified_at') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.roles') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.aktif') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.user.fields.jabatan') }}
                                        </th>
                                        <th>
                                            {{ trans('cruds.jabatan.fields.aktif') }}
                                        </th>
                                        <th>
                                            &nbsp;
                                        </th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>



                    @endsection
                    @section('scripts')
                    @parent
                    <script>
                        $(function () {
                      let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)
                    @can('user_delete')
                      let deleteButtonTrans = '{{ trans('global.datatables.delete') }}';
                      let deleteButton = {
                        text: deleteButtonTrans,
                        url: "{{ route('admin.users.massDestroy') }}",
                        className: 'btn-danger',
                        action: function (e, dt, node, config) {
                          var ids = $.map(dt.rows({ selected: true }).data(), function (entry) {
                              return entry.id
                          });

                          if (ids.length === 0) {
                            alert('{{ trans('global.datatables.zero_selected') }}')

                            return
                          }

                          if (confirm('{{ trans('global.areYouSure') }}')) {
                            $.ajax({
                              headers: {'x-csrf-token': _token},
                              method: 'POST',
                              url: config.url,
                              data: { ids: ids, _method: 'DELETE' }})
                              .done(function () { location.reload() })
                          }
                        }
                      }
                      dtButtons.push(deleteButton)
                    @endcan

                      let dtOverrideGlobals = {
                        buttons: dtButtons,
                        processing: true,
                        serverSide: true,
                        retrieve: true,
                        aaSorting: [],
                        ajax: "{{ route('admin.users.index') }}",
                        columns: [
                          { data: 'placeholder', name: 'placeholder' },
                    { data: 'name', name: 'name' },
                    { data: 'email', name: 'email' },
                    { data: 'email_verified_at', name: 'email_verified_at' },
                    { data: 'roles', name: 'roles.title' },
                    { data: 'aktif', name: 'aktif' },
                    { data: 'jabatan_nama', name: 'jabatan.nama' },
                    { data: 'jabatan.aktif', name: 'jabatan.aktif' },
                    { data: 'actions', name: '{{ trans('global.actions') }}' }
                        ],
                        orderCellsTop: true,
                        order: [[ 1, 'desc' ]],
                        pageLength: 100,
                      };
                      let table = $('.datatable-User').DataTable(dtOverrideGlobals);
                      $('a[data-toggle="tab"]').on('shown.bs.tab click', function(e){
                          $($.fn.dataTable.tables(true)).DataTable()
                              .columns.adjust();
                      });
                      
                    });

                    </script>
                    @endsection
                  uuid: 88d6331584fb01af
                show.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="card">
                        <div class="card-header">
                            {{ trans('global.show') }} {{ trans('cruds.user.title') }}
                        </div>

                        <div class="card-body">
                            <div class="form-group">
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.users.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                                <table class="table table-bordered table-striped">
                                    <tbody>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.name') }}
                                            </th>
                                            <td>
                                                {{ $user->name }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.email') }}
                                            </th>
                                            <td>
                                                {{ $user->email }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.email_verified_at') }}
                                            </th>
                                            <td>
                                                {{ $user->email_verified_at }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.roles') }}
                                            </th>
                                            <td>
                                                @foreach($user->roles as $key => $roles)
                                                    <span class="label label-info">{{ $roles->title }}</span>
                                                @endforeach
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.aktif') }}
                                            </th>
                                            <td>
                                                <input type="checkbox" disabled="disabled" {{ $user->aktif ? 'checked' : '' }}>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>
                                                {{ trans('cruds.user.fields.jabatan') }}
                                            </th>
                                            <td>
                                                {{ $user->jabatan->nama ?? '' }}
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div class="form-group">
                                    <a class="btn btn-default" href="{{ route('admin.users.index') }}">
                                        {{ trans('global.back_to_list') }}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>



                    @endsection
                  uuid: 5b58daaba7132f22
              uuid: e67bb106fbe01965
          uuid: cbc70407bcfb9d03
        auth:
          isDir: true
          content:
            passwords:
              isDir: true
              content:
                confirm.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.app')

                    @section('styles')
                    <style>
                        .lockscreen-image-fallback {
                            width: 70px;
                            height: 70px;
                            background: #3c8dbc;
                            border-radius: 50%;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            font-size: 18px;
                        }
                        input[type="password"], button {
                            outline: none;
                            box-shadow:none !important;
                            border: 0;
                        }
                    </style>
                    @endsection

                    @section('content')

                    <div class="lockscreen">
                        <div class="lockscreen-wrapper">
                            <div class="lockscreen-logo">
                                <a href="{{ route('admin.home') }}">
                                    {{ trans('panel.site_title') }}
                                </a>
                            </div>

                            <div class="lockscreen-name">
                                {{ auth()->user()->name ?? '' }}
                            </div>

                            <div class="lockscreen-item">
                                <div class="lockscreen-image">
                                    {{-- <img src="https://adminlte.io/themes/AdminLTE/dist/img/user1-128x128.jpg" alt="User Image"> --}}

                                    <div class="lockscreen-image-fallback text-uppercase text-white">
                                        @if(auth()->user()->name)
                                            {{ substr(auth()->user()->name, 0, 2) }}
                                        @endif
                                    </div>
                                </div>

                                <form method="POST" action="{{ route('password.confirm') }}" class="lockscreen-credentials">
                                    @csrf

                                    <div class="input-group">
                                        <input id="password" type="password" name="password" class="form-control" placeholder="{{ __('Confirm Password') }}" required>

                                        <div class="input-group-append">
                                            <button type="submit" class="btn">
                                                <i class="fas fa-arrow-right text-muted"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>

                            @error('password')
                                <div class="help-block text-center text-danger">
                                    {{ $message }}
                                </div>
                            @enderror

                            <div class="help-block text-center">
                                {{ __('Please confirm your password before continuing.') }}
                            </div>

                            <div class="text-center">
                                @if(Route::has('password.request'))
                                    <a href="{{ route('password.request') }}">
                                        {{ trans('global.forgot_password') }}
                                    </a>
                                @endif
                            </div>
                        </div>
                    </div>

                    @endsection
                  uuid: a7c0e1ad42248ec9
                edit.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.admin')
                    @section('content')

                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    {{ trans('global.my_profile') }}
                                </div>

                                <div class="card-body">
                                    <form method="POST" action="{{ route("profile.password.updateProfile") }}">
                                        @csrf
                                        <div class="form-group">
                                            <label class="required" for="name">{{ trans('cruds.user.fields.name') }}</label>
                                            <input class="form-control {{ $errors->has('name') ? 'is-invalid' : '' }}" type="text" name="name" id="name" value="{{ old('name', auth()->user()->name) }}" required>
                                            @if($errors->has('name'))
                                                <div class="invalid-feedback">
                                                    {{ $errors->first('name') }}
                                                </div>
                                            @endif
                                        </div>
                                        <div class="form-group">
                                            <label class="required" for="title">{{ trans('cruds.user.fields.email') }}</label>
                                            <input class="form-control {{ $errors->has('email') ? 'is-invalid' : '' }}" type="text" name="email" id="email" value="{{ old('email', auth()->user()->email) }}" required>
                                            @if($errors->has('email'))
                                                <div class="invalid-feedback">
                                                    {{ $errors->first('email') }}
                                                </div>
                                            @endif
                                        </div>
                                        <div class="form-group">
                                            <button class="btn btn-danger" type="submit">
                                                {{ trans('global.save') }}
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    {{ trans('global.change_password') }}
                                </div>
                                <div class="card-body">
                                    <form method="POST" action="{{ route("profile.password.update") }}">
                                        @csrf
                                        <div class="form-group">
                                            <label class="required" for="password">New {{ trans('cruds.user.fields.password') }}</label>
                                            <input class="form-control {{ $errors->has('password') ? 'is-invalid' : '' }}" type="password" name="password" id="password" required>
                                            @if($errors->has('password'))
                                                <span class="text-danger">{{ $errors->first('password') }}</span>
                                            @endif
                                        </div>
                                        <div class="form-group">
                                            <label class="required" for="password_confirmation">Repeat New {{ trans('cruds.user.fields.password') }}</label>
                                            <input class="form-control {{ $errors->has('password_confirmation') ? 'is-invalid' : '' }}" type="password" name="password_confirmation" id="password_confirmation" required>
                                        </div>
                                        <div class="form-group">
                                            <button class="btn btn-danger" type="submit">
                                                {{ trans('global.save') }}
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    {{ trans('global.delete_account') }}
                                </div>

                                <div class="card-body">
                                    <form method="POST" action="{{ route("profile.password.destroyProfile") }}" onsubmit="return prompt('{{ __('global.delete_account_warning') }}') == '{{ auth()->user()->email }}'">
                                        @csrf
                                        <div class="form-group">
                                            <button class="btn btn-danger" type="submit">
                                                {{ trans('global.delete') }}
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                    </div>
                    @endsection
                  uuid: c129ffe9a469ef83
                email.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.app')
                    @section('content')
                    <div class="login-box">
                        <div class="login-logo">
                            <div class="login-logo">
                                <a href="{{ route('admin.home') }}">
                                    {{ trans('panel.site_title') }}
                                </a>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-body login-card-body">
                                <p class="login-box-msg">
                                    {{ trans('global.reset_password') }}
                                </p>

                                @if(session('status'))
                                    <div class="alert alert-success" role="alert">
                                        {{ session('status') }}
                                    </div>
                                @endif

                                <form method="POST" action="{{ route('password.email') }}">
                                    @csrf

                                    <div>
                                        <div class="form-group">
                                            <input id="email" type="email" class="form-control{{ $errors->has('email') ? ' is-invalid' : '' }}" name="email" required autocomplete="email" autofocus placeholder="{{ trans('global.login_email') }}" value="{{ old('email') }}">

                                            @if($errors->has('email'))
                                                <span class="text-danger">
                                                    {{ $errors->first('email') }}
                                                </span>
                                            @endif
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12 text-right">
                                            <button type="submit" class="btn btn-primary btn-flat btn-block">
                                                {{ trans('global.send_password') }}
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    @endsection
                  uuid: 1efec1b2f287f10a
                reset.blade.php:
                  isDir: false
                  content: |-
                    @extends('layouts.app')
                    @section('content')
                    <div class="login-box">
                        <div class="login-logo">
                            <div class="login-logo">
                                <a href="{{ route('admin.home') }}">
                                    {{ trans('panel.site_title') }}
                                </a>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-body login-card-body">
                                <p class="login-box-msg">
                                    {{ trans('global.reset_password') }}
                                </p>

                                <form method="POST" action="{{ route('password.request') }}">
                                    @csrf

                                    <input name="token" value="{{ $token }}" type="hidden">

                                    <div>
                                        <div class="form-group">
                                            <input id="email" type="email" class="form-control{{ $errors->has('email') ? ' is-invalid' : '' }}" name="email" value="{{ $email ?? old('email') }}" required autocomplete="email" autofocus placeholder="{{ trans('global.login_email') }}">

                                            @if($errors->has('email'))
                                                <span class="text-danger">
                                                    {{ $errors->first('email') }}
                                                </span>
                                            @endif
                                        </div>
                                        <div class="form-group">
                                            <input id="password" type="password" class="form-control{{ $errors->has('password') ? ' is-invalid' : '' }}" name="password" required placeholder="{{ trans('global.login_password') }}">

                                            @if($errors->has('password'))
                                                <span class="text-danger">
                                                    {{ $errors->first('password') }}
                                                </span>
                                            @endif
                                        </div>
                                        <div class="form-group">
                                            <input id="password-confirm" type="password" class="form-control" name="password_confirmation" required placeholder="{{ trans('global.login_password_confirmation') }}">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <button type="submit" class="btn btn-primary btn-flat btn-block">
                                                {{ trans('global.reset_password') }}
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    @endsection
                  uuid: d9789b0ba565e02d
              uuid: 1df1e0235a12d432
            login.blade.php:
              isDir: false
              content: |-
                @extends('layouts.app')
                @section('content')
                <div class="login-box">
                    <div class="login-logo">
                        <div class="login-logo">
                            <a href="{{ route('admin.home') }}">
                                {{ trans('panel.site_title') }}
                            </a>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body login-card-body">
                            <p class="login-box-msg">
                                {{ trans('global.login') }}
                            </p>

                            @if(session()->has('message'))
                                <p class="alert alert-info">
                                    {{ session()->get('message') }}
                                </p>
                            @endif

                            <form action="{{ route('login') }}" method="POST">
                                @csrf

                                <div class="form-group">
                                    <input id="email" type="email" class="form-control{{ $errors->has('email') ? ' is-invalid' : '' }}" required autocomplete="email" autofocus placeholder="{{ trans('global.login_email') }}" name="email" value="{{ old('email', null) }}">

                                    @if($errors->has('email'))
                                        <div class="invalid-feedback">
                                            {{ $errors->first('email') }}
                                        </div>
                                    @endif
                                </div>

                                <div class="form-group">
                                    <input id="password" type="password" class="form-control{{ $errors->has('password') ? ' is-invalid' : '' }}" name="password" required placeholder="{{ trans('global.login_password') }}">

                                    @if($errors->has('password'))
                                        <div class="invalid-feedback">
                                            {{ $errors->first('password') }}
                                        </div>
                                    @endif
                                </div>


                                <div class="row">
                                    <div class="col-8">
                                        <div class="icheck-primary">
                                            <input type="checkbox" name="remember" id="remember">
                                            <label for="remember">{{ trans('global.remember_me') }}</label>
                                        </div>
                                    </div>
                                    <!-- /.col -->
                                    <div class="col-4">
                                        <button type="submit" class="btn btn-primary btn-block btn-flat">
                                            {{ trans('global.login') }}
                                        </button>
                                    </div>
                                    <!-- /.col -->
                                </div>
                            </form>


                            @if(Route::has('password.request'))
                                <p class="mb-1">
                                    <a href="{{ route('password.request') }}">
                                        {{ trans('global.forgot_password') }}
                                    </a>
                                </p>
                            @endif
                            <p class="mb-1">
                                <a class="text-center" href="{{ route('register') }}">
                                    {{ trans('global.register') }}
                                </a>
                            </p>
                        </div>
                        <!-- /.login-card-body -->
                    </div>
                </div>
                @endsection
              uuid: 14931bc9d28b4960
            register.blade.php:
              isDir: false
              content: |-
                @extends('layouts.app')
                @section('content')
                <div class="login-box">
                    <div class="login-logo">
                        <div class="login-logo">
                            <a href="#">
                                {{ trans('panel.site_title') }}
                            </a>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body login-card-body">
                            <p class="login-box-msg">{{ trans('global.register') }}</p>
                            <form method="POST" action="{{ route('register') }}">
                                {{ csrf_field() }}

                                <div>
                                    {{ csrf_field() }}
                                    <div class="form-group">
                                        <input type="text" name="name" class="form-control {{ $errors->has('name') ? ' is-invalid' : '' }}" required autofocus placeholder="{{ trans('global.user_name') }}" value="{{ old('name', null) }}">
                                        @if($errors->has('name'))
                                            <div class="invalid-feedback">
                                                {{ $errors->first('name') }}
                                            </div>
                                        @endif
                                    </div>
                                    <div class="form-group">
                                        <input type="email" name="email" class="form-control{{ $errors->has('email') ? ' is-invalid' : '' }}" required placeholder="{{ trans('global.login_email') }}" value="{{ old('email', null) }}">
                                        @if($errors->has('email'))
                                            <div class="invalid-feedback">
                                                {{ $errors->first('email') }}
                                            </div>
                                        @endif
                                    </div>
                                    <div class="form-group">
                                        <input type="password" name="password" class="form-control{{ $errors->has('password') ? ' is-invalid' : '' }}" required placeholder="{{ trans('global.login_password') }}">
                                        @if($errors->has('password'))
                                            <div class="invalid-feedback">
                                                {{ $errors->first('password') }}
                                            </div>
                                        @endif
                                    </div>
                                    <div class="form-group">
                                        <input type="password" name="password_confirmation" class="form-control" required placeholder="{{ trans('global.login_password_confirmation') }}">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12 text-right">
                                        <button type="submit" class="btn btn-primary btn-block btn-flat">
                                            {{ trans('global.register') }}
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                @endsection
              uuid: c001d6eacd564752
            verify.blade.php:
              isDir: false
              content: |
                @extends('layouts.app')

                @section('content')
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-md-8">
                            <div class="card">
                                <div class="card-header">{{ __('Verify Your Email Address') }}</div>

                                <div class="card-body">
                                    @if (session('resent'))
                                        <div class="alert alert-success" role="alert">
                                            {{ __('A fresh verification link has been sent to your email address.') }}
                                        </div>
                                    @endif

                                    {{ __('Before proceeding, please check your email for a verification link.') }}
                                    {{ __('If you did not receive the email') }},
                                    <form class="d-inline" method="POST" action="{{ route('verification.resend') }}">
                                        @csrf
                                        <button type="submit" class="btn btn-link p-0 m-0 align-baseline">{{ __('click here to request another') }}</button>.
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @endsection
              uuid: e521e3f5d35f9425
          uuid: acb171de3a6653c0
        layouts:
          isDir: true
          content:
            admin.blade.php:
              isDir: false
              content: |-
                <!DOCTYPE html>
                <html>

                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
                    <meta http-equiv="X-UA-Compatible" content="ie=edge">
                    <meta name="csrf-token" content="{{ csrf_token() }}">

                    <title>{{ trans('panel.site_title') }}</title>
                    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" rel="stylesheet" />
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/css/select2.min.css" rel="stylesheet" />
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
                    <link href="{{ asset('css/adminltev3.css') }}" rel="stylesheet" />
                    <link href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" rel="stylesheet" />
                    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet" />
                    <link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
                    <link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
                    <link href="https://cdn.datatables.net/select/1.3.0/css/select.dataTables.min.css" rel="stylesheet" />
                    <link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css" rel="stylesheet" />
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.css" rel="stylesheet" />
                    <link href="{{ asset('css/custom.css') }}" rel="stylesheet" />
                    @yield('styles')
                </head>

                <body class="sidebar-mini layout-fixed" style="height: auto;">
                    <div class="wrapper">
                        <nav class="main-header navbar navbar-expand bg-white navbar-light border-bottom">
                            <!-- Left navbar links -->
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a class="nav-link" data-widget="pushmenu" href="#"><i class="fa fa-bars"></i></a>
                                </li>
                            </ul>

                            <!-- Right navbar links -->
                            @if(count(config('panel.available_languages', [])) > 1)
                                <ul class="navbar-nav ml-auto">
                                    <li class="nav-item dropdown">
                                        <a class="nav-link" data-toggle="dropdown" href="#">
                                            {{ strtoupper(app()->getLocale()) }}
                                        </a>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            @foreach(config('panel.available_languages') as $langLocale => $langName)
                                                <a class="dropdown-item" href="{{ url()->current() }}?change_language={{ $langLocale }}">{{ strtoupper($langLocale) }} ({{ $langName }})</a>
                                            @endforeach
                                        </div>
                                    </li>
                                </ul>
                            @endif

                        </nav>

                        @include('partials.menu')
                        <div class="content-wrapper" style="min-height: 917px;">
                            <!-- Main content -->
                            <section class="content" style="padding-top: 20px">
                                @if(session('message'))
                                    <div class="row mb-2">
                                        <div class="col-lg-12">
                                            <div class="alert alert-success" role="alert">{{ session('message') }}</div>
                                        </div>
                                    </div>
                                @endif
                                @if($errors->count() > 0)
                                    <div class="alert alert-danger">
                                        <ul class="list-unstyled">
                                            @foreach($errors->all() as $error)
                                                <li>{{ $error }}</li>
                                            @endforeach
                                        </ul>
                                    </div>
                                @endif
                                @yield('content')
                            </section>
                            <!-- /.content -->
                        </div>

                        <footer class="main-footer">
                            <div class="float-right d-none d-sm-block">
                                <b>Version</b> 3.0.0-alpha
                            </div>
                            <strong> &copy;</strong> {{ trans('global.allRightsReserved') }}
                        </footer>
                        <form id="logoutform" action="{{ route('logout') }}" method="POST" style="display: none;">
                            {{ csrf_field() }}
                        </form>
                    </div>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
                    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/js/select2.full.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
                    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
                    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
                    <script src="https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js"></script>
                    <script src="https://cdn.datatables.net/select/1.3.0/js/dataTables.select.min.js"></script>
                    <script src="//cdn.datatables.net/buttons/1.2.4/js/buttons.flash.min.js"></script>
                    <script src="https://cdn.datatables.net/buttons/1.2.4/js/buttons.html5.min.js"></script>
                    <script src="https://cdn.datatables.net/buttons/1.2.4/js/buttons.print.min.js"></script>
                    <script src="https://cdn.datatables.net/buttons/1.2.4/js/buttons.colVis.min.js"></script>
                    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
                    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
                    <script src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
                    <script src="https://cdn.ckeditor.com/ckeditor5/16.0.0/classic/ckeditor.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.js"></script>
                    <script src="{{ asset('js/main.js') }}"></script>
                    <script>
                        $(function() {
                  let copyButtonTrans = '{{ trans('global.datatables.copy') }}'
                  let csvButtonTrans = '{{ trans('global.datatables.csv') }}'
                  let excelButtonTrans = '{{ trans('global.datatables.excel') }}'
                  let pdfButtonTrans = '{{ trans('global.datatables.pdf') }}'
                  let printButtonTrans = '{{ trans('global.datatables.print') }}'
                  let colvisButtonTrans = '{{ trans('global.datatables.colvis') }}'
                  let selectAllButtonTrans = '{{ trans('global.select_all') }}'
                  let selectNoneButtonTrans = '{{ trans('global.deselect_all') }}'

                  let languages = {
                    'en': 'https://cdn.datatables.net/plug-ins/1.10.19/i18n/English.json',
                        'id': 'https://cdn.datatables.net/plug-ins/1.10.19/i18n/Indonesian.json'
                  };

                  $.extend(true, $.fn.dataTable.Buttons.defaults.dom.button, { className: 'btn' })
                  $.extend(true, $.fn.dataTable.defaults, {
                    language: {
                      url: languages['{{ app()->getLocale() }}']
                    },
                    columnDefs: [{
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    }, {
                        orderable: false,
                        searchable: false,
                        targets: -1
                    }],
                    select: {
                      style:    'multi+shift',
                      selector: 'td:first-child'
                    },
                    order: [],
                    scrollX: true,
                    pageLength: 100,
                    dom: 'lBfrtip<"actions">',
                    buttons: [
                      {
                        extend: 'selectAll',
                        className: 'btn-primary',
                        text: selectAllButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        },
                        action: function(e, dt) {
                          e.preventDefault()
                          dt.rows().deselect();
                          dt.rows({ search: 'applied' }).select();
                        }
                      },
                      {
                        extend: 'selectNone',
                        className: 'btn-primary',
                        text: selectNoneButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'copy',
                        className: 'btn-default',
                        text: copyButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'csv',
                        className: 'btn-default',
                        text: csvButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'excel',
                        className: 'btn-default',
                        text: excelButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'pdf',
                        className: 'btn-default',
                        text: pdfButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'print',
                        className: 'btn-default',
                        text: printButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      },
                      {
                        extend: 'colvis',
                        className: 'btn-default',
                        text: colvisButtonTrans,
                        exportOptions: {
                          columns: ':visible'
                        }
                      }
                    ]
                  });

                  $.fn.dataTable.ext.classes.sPageButton = '';
                });

                    </script>
                    <script>
                        /*!
                     * AdminLTE v3.0.0-alpha.2 (https://adminlte.io)
                     * Copyright 2014-2018 Abdullah Almsaeed <abdullah@almsaeedstudio.com>
                     * Licensed under MIT (https://github.com/almasaeed2010/AdminLTE/blob/master/LICENSE)
                     */
                    !function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.adminlte={})}(this,function(e){"use strict";var i,t,o,n,r,a,s,c,f,l,u,d,h,p,_,g,y,m,v,C,D,E,A,O,w,b,L,S,j,T,I,Q,R,P,x,B,M,k,H,N,Y,U,V,G,W,X,z,F,q,J,K,Z,$,ee,te,ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ie=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},oe=(i=jQuery,t="ControlSidebar",o="lte.control.sidebar",n=i.fn[t],r=".control-sidebar",a='[data-widget="control-sidebar"]',s=".main-header",c="control-sidebar-open",f="control-sidebar-slide-open",l={slide:!0},u=function(){function n(e,t){ie(this,n),this._element=e,this._config=this._getConfig(t)}return n.prototype.show=function(){this._config.slide?i("body").removeClass(f):i("body").removeClass(c)},n.prototype.collapse=function(){this._config.slide?i("body").addClass(f):i("body").addClass(c)},n.prototype.toggle=function(){this._setMargin(),i("body").hasClass(c)||i("body").hasClass(f)?this.show():this.collapse()},n.prototype._getConfig=function(e){return i.extend({},l,e)},n.prototype._setMargin=function(){i(r).css({top:i(s).outerHeight()})},n._jQueryInterface=function(t){return this.each(function(){var e=i(this).data(o);if(e||(e=new n(this,i(this).data()),i(this).data(o,e)),"undefined"===e[t])throw new Error(t+" is not a function");e[t]()})},n}(),i(document).on("click",a,function(e){e.preventDefault(),u._jQueryInterface.call(i(this),"toggle")}),i.fn[t]=u._jQueryInterface,i.fn[t].Constructor=u,i.fn[t].noConflict=function(){return i.fn[t]=n,u._jQueryInterface},u),re=(d=jQuery,h="Layout",p="lte.layout",_=d.fn[h],g=".main-sidebar",y=".main-header",m=".content-wrapper",v=".main-footer",C="hold-transition",D=function(){function n(e){ie(this,n),this._element=e,this._init()}return n.prototype.fixLayoutHeight=function(){var e={window:d(window).height(),header:d(y).outerHeight(),footer:d(v).outerHeight(),sidebar:d(g).height()},t=this._max(e);d(m).css("min-height",e.window-e.header-e.footer),d(g).css("min-height",e.window-e.header)},n.prototype._init=function(){var e=this;d("body").removeClass(C),this.fixLayoutHeight(),d(g).on("collapsed.lte.treeview expanded.lte.treeview collapsed.lte.pushmenu expanded.lte.pushmenu",function(){e.fixLayoutHeight()}),d(window).resize(function(){e.fixLayoutHeight()}),d("body, html").css("height","auto")},n.prototype._max=function(t){var n=0;return Object.keys(t).forEach(function(e){t[e]>n&&(n=t[e])}),n},n._jQueryInterface=function(t){return this.each(function(){var e=d(this).data(p);e||(e=new n(this),d(this).data(p,e)),t&&e[t]()})},n}(),d(window).on("load",function(){D._jQueryInterface.call(d("body"))}),d.fn[h]=D._jQueryInterface,d.fn[h].Constructor=D,d.fn[h].noConflict=function(){return d.fn[h]=_,D._jQueryInterface},D),ae=(E=jQuery,A="PushMenu",w="."+(O="lte.pushmenu"),b=E.fn[A],L={COLLAPSED:"collapsed"+w,SHOWN:"shown"+w},S={screenCollapseSize:768},j={TOGGLE_BUTTON:'[data-widget="pushmenu"]',SIDEBAR_MINI:".sidebar-mini",SIDEBAR_COLLAPSED:".sidebar-collapse",BODY:"body",OVERLAY:"#sidebar-overlay",WRAPPER:".wrapper"},T="sidebar-collapse",I="sidebar-open",Q=function(){function n(e,t){ie(this,n),this._element=e,this._options=E.extend({},S,t),E(j.OVERLAY).length||this._addOverlay()}return n.prototype.show=function(){E(j.BODY).addClass(I).removeClass(T);var e=E.Event(L.SHOWN);E(this._element).trigger(e)},n.prototype.collapse=function(){E(j.BODY).removeClass(I).addClass(T);var e=E.Event(L.COLLAPSED);E(this._element).trigger(e)},n.prototype.toggle=function(){(E(window).width()>=this._options.screenCollapseSize?!E(j.BODY).hasClass(T):E(j.BODY).hasClass(I))?this.collapse():this.show()},n.prototype._addOverlay=function(){var e=this,t=E("<div />",{id:"sidebar-overlay"});t.on("click",function(){e.collapse()}),E(j.WRAPPER).append(t)},n._jQueryInterface=function(t){return this.each(function(){var e=E(this).data(O);e||(e=new n(this),E(this).data(O,e)),t&&e[t]()})},n}(),E(document).on("click",j.TOGGLE_BUTTON,function(e){e.preventDefault();var t=e.currentTarget;"pushmenu"!==E(t).data("widget")&&(t=E(t).closest(j.TOGGLE_BUTTON)),Q._jQueryInterface.call(E(t),"toggle")}),E.fn[A]=Q._jQueryInterface,E.fn[A].Constructor=Q,E.fn[A].noConflict=function(){return E.fn[A]=b,Q._jQueryInterface},Q),se=(R=jQuery,P="Treeview",B="."+(x="lte.treeview"),M=R.fn[P],k={SELECTED:"selected"+B,EXPANDED:"expanded"+B,COLLAPSED:"collapsed"+B,LOAD_DATA_API:"load"+B},H=".nav-item",N=".nav-treeview",Y=".menu-open",V="menu-open",G={trigger:(U='[data-widget="treeview"]')+" "+".nav-link",animationSpeed:300,accordion:!0},W=function(){function i(e,t){ie(this,i),this._config=t,this._element=e}return i.prototype.init=function(){this._setupListeners()},i.prototype.expand=function(e,t){var n=this,i=R.Event(k.EXPANDED);if(this._config.accordion){var o=t.siblings(Y).first(),r=o.find(N).first();this.collapse(r,o)}e.slideDown(this._config.animationSpeed,function(){t.addClass(V),R(n._element).trigger(i)})},i.prototype.collapse=function(e,t){var n=this,i=R.Event(k.COLLAPSED);e.slideUp(this._config.animationSpeed,function(){t.removeClass(V),R(n._element).trigger(i),e.find(Y+" > "+N).slideUp(),e.find(Y).removeClass(V)})},i.prototype.toggle=function(e){var t=R(e.currentTarget),n=t.next();if(n.is(N)){e.preventDefault();var i=t.parents(H).first();i.hasClass(V)?this.collapse(R(n),i):this.expand(R(n),i)}},i.prototype._setupListeners=function(){var t=this;R(document).on("click",this._config.trigger,function(e){t.toggle(e)})},i._jQueryInterface=function(n){return this.each(function(){var e=R(this).data(x),t=R.extend({},G,R(this).data());e||(e=new i(R(this),t),R(this).data(x,e)),"init"===n&&e[n]()})},i}(),R(window).on(k.LOAD_DATA_API,function(){R(U).each(function(){W._jQueryInterface.call(R(this),"init")})}),R.fn[P]=W._jQueryInterface,R.fn[P].Constructor=W,R.fn[P].noConflict=function(){return R.fn[P]=M,W._jQueryInterface},W),ce=(X=jQuery,z="Widget",q="."+(F="lte.widget"),J=X.fn[z],K={EXPANDED:"expanded"+q,COLLAPSED:"collapsed"+q,REMOVED:"removed"+q},$="collapsed-card",ee={animationSpeed:"normal",collapseTrigger:(Z={DATA_REMOVE:'[data-widget="remove"]',DATA_COLLAPSE:'[data-widget="collapse"]',CARD:".card",CARD_HEADER:".card-header",CARD_BODY:".card-body",CARD_FOOTER:".card-footer",COLLAPSED:".collapsed-card"}).DATA_COLLAPSE,removeTrigger:Z.DATA_REMOVE},te=function(){function n(e,t){ie(this,n),this._element=e,this._parent=e.parents(Z.CARD).first(),this._settings=X.extend({},ee,t)}return n.prototype.collapse=function(){var e=this;this._parent.children(Z.CARD_BODY+", "+Z.CARD_FOOTER).slideUp(this._settings.animationSpeed,function(){e._parent.addClass($)});var t=X.Event(K.COLLAPSED);this._element.trigger(t,this._parent)},n.prototype.expand=function(){var e=this;this._parent.children(Z.CARD_BODY+", "+Z.CARD_FOOTER).slideDown(this._settings.animationSpeed,function(){e._parent.removeClass($)});var t=X.Event(K.EXPANDED);this._element.trigger(t,this._parent)},n.prototype.remove=function(){this._parent.slideUp();var e=X.Event(K.REMOVED);this._element.trigger(e,this._parent)},n.prototype.toggle=function(){this._parent.hasClass($)?this.expand():this.collapse()},n.prototype._init=function(e){var t=this;this._parent=e,X(this).find(this._settings.collapseTrigger).click(function(){t.toggle()}),X(this).find(this._settings.removeTrigger).click(function(){t.remove()})},n._jQueryInterface=function(t){return this.each(function(){var e=X(this).data(F);e||(e=new n(X(this),e),X(this).data(F,"string"==typeof t?e:t)),"string"==typeof t&&t.match(/remove|toggle/)?e[t]():"object"===("undefined"==typeof t?"undefined":ne(t))&&e._init(X(this))})},n}(),X(document).on("click",Z.DATA_COLLAPSE,function(e){e&&e.preventDefault(),te._jQueryInterface.call(X(this),"toggle")}),X(document).on("click",Z.DATA_REMOVE,function(e){e&&e.preventDefault(),te._jQueryInterface.call(X(this),"remove")}),X.fn[z]=te._jQueryInterface,X.fn[z].Constructor=te,X.fn[z].noConflict=function(){return X.fn[z]=J,te._jQueryInterface},te);e.ControlSidebar=oe,e.Layout=re,e.PushMenu=ae,e.Treeview=se,e.Widget=ce,Object.defineProperty(e,"__esModule",{value:!0})});
                    //# sourceMappingURL=adminlte.min.js.map

                    </script>
                    @yield('scripts')
                </body>

                </html>
              uuid: c3dc5f7a469cbd52
            app.blade.php:
              isDir: false
              content: >-
                <!DOCTYPE html>

                <html>


                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
                    <meta http-equiv="X-UA-Compatible" content="ie=edge">
                    <meta name="csrf-token" content="{{ csrf_token() }}">

                    <title>{{ trans('panel.site_title') }}</title>
                    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" rel="stylesheet" />
                    <link href="{{ asset('css/adminltev3.css') }}" rel="stylesheet" />
                    <link href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" rel="stylesheet" />
                    <link href="https://cdn.jsdelivr.net/npm/icheck-bootstrap@3.0.1/icheck-bootstrap.min.css" rel="stylesheet" />
                    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet" />
                    @yield('styles')
                </head>


                <body class="header-fixed sidebar-fixed aside-menu-fixed
                aside-menu-hidden login-page">
                    @yield('content')
                    @yield('scripts')
                </body>


                </html>
              uuid: 94d66c44581c9940
          uuid: f292e21acfe856c2
        partials:
          isDir: true
          content:
            datatablesActions.blade.php:
              isDir: false
              content: |-
                @can($viewGate)
                    <a class="btn btn-xs btn-primary" href="{{ route('admin.' . $crudRoutePart . '.show', $row->id) }}">
                        {{ trans('global.view') }}
                    </a>
                @endcan
                @can($editGate)
                    <a class="btn btn-xs btn-info" href="{{ route('admin.' . $crudRoutePart . '.edit', $row->id) }}">
                        {{ trans('global.edit') }}
                    </a>
                @endcan
                @can($deleteGate)
                    <form action="{{ route('admin.' . $crudRoutePart . '.destroy', $row->id) }}" method="POST" onsubmit="return confirm('{{ trans('global.areYouSure') }}');" style="display: inline-block;">
                        <input type="hidden" name="_method" value="DELETE">
                        <input type="hidden" name="_token" value="{{ csrf_token() }}">
                        <input type="submit" class="btn btn-xs btn-danger" value="{{ trans('global.delete') }}">
                    </form>
                @endcan
              uuid: 326350ca953348a0
            menu.blade.php:
              isDir: false
              content: >-
                <aside class="main-sidebar sidebar-dark-primary elevation-4"
                style="min-height: 917px;">
                    <!-- Brand Logo -->
                    <a href="#" class="brand-link">
                        <span class="brand-text font-weight-light">{{ trans('panel.site_title') }}</span>
                    </a>

                    <!-- Sidebar -->
                    <div class="sidebar">
                        <!-- Sidebar user (optional) -->

                        <!-- Sidebar Menu -->
                        <nav class="mt-2">
                            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                                <li class="nav-item">
                                    <a class="nav-link {{ request()->routeIs("admin.home") ? "active" : "" }}" href="{{ route("admin.home") }}">
                                        <i class="fas fa-fw fa-tachometer-alt nav-icon">
                                        </i>
                                        <p>
                                            {{ trans('global.dashboard') }}
                                        </p>
                                    </a>
                                </li>
                                @can('user_management_access')
                                    <li class="nav-item has-treeview {{ request()->is("admin/permissions*") ? "menu-open" : "" }} {{ request()->is("admin/roles*") ? "menu-open" : "" }} {{ request()->is("admin/users*") ? "menu-open" : "" }} {{ request()->is("admin/audit-logs*") ? "menu-open" : "" }} {{ request()->is("admin/teams*") ? "menu-open" : "" }}">
                                        <a class="nav-link nav-dropdown-toggle {{ request()->is("admin/permissions*") ? "active" : "" }} {{ request()->is("admin/roles*") ? "active" : "" }} {{ request()->is("admin/users*") ? "active" : "" }} {{ request()->is("admin/audit-logs*") ? "active" : "" }} {{ request()->is("admin/teams*") ? "active" : "" }}" href="#">
                                            <i class="fa-fw nav-icon fas fa-users">

                                            </i>
                                            <p>
                                                {{ trans('cruds.userManagement.title') }}
                                                <i class="right fa fa-fw fa-angle-left nav-icon"></i>
                                            </p>
                                        </a>
                                        <ul class="nav nav-treeview">
                                            @can('permission_access')
                                                <li class="nav-item">
                                                    <a href="{{ route("admin.permissions.index") }}" class="nav-link {{ request()->is("admin/permissions") || request()->is("admin/permissions/*") ? "active" : "" }}">
                                                        <i class="fa-fw nav-icon fas fa-unlock-alt">

                                                        </i>
                                                        <p>
                                                            {{ trans('cruds.permission.title') }}
                                                        </p>
                                                    </a>
                                                </li>
                                            @endcan
                                            @can('role_access')
                                                <li class="nav-item">
                                                    <a href="{{ route("admin.roles.index") }}" class="nav-link {{ request()->is("admin/roles") || request()->is("admin/roles/*") ? "active" : "" }}">
                                                        <i class="fa-fw nav-icon fas fa-briefcase">

                                                        </i>
                                                        <p>
                                                            {{ trans('cruds.role.title') }}
                                                        </p>
                                                    </a>
                                                </li>
                                            @endcan
                                            @can('user_access')
                                                <li class="nav-item">
                                                    <a href="{{ route("admin.users.index") }}" class="nav-link {{ request()->is("admin/users") || request()->is("admin/users/*") ? "active" : "" }}">
                                                        <i class="fa-fw nav-icon fas fa-user">

                                                        </i>
                                                        <p>
                                                            {{ trans('cruds.user.title') }}
                                                        </p>
                                                    </a>
                                                </li>
                                            @endcan
                                            @can('audit_log_access')
                                                <li class="nav-item">
                                                    <a href="{{ route("admin.audit-logs.index") }}" class="nav-link {{ request()->is("admin/audit-logs") || request()->is("admin/audit-logs/*") ? "active" : "" }}">
                                                        <i class="fa-fw nav-icon fas fa-file-alt">

                                                        </i>
                                                        <p>
                                                            {{ trans('cruds.auditLog.title') }}
                                                        </p>
                                                    </a>
                                                </li>
                                            @endcan
                                            @can('team_access')
                                                <li class="nav-item">
                                                    <a href="{{ route("admin.teams.index") }}" class="nav-link {{ request()->is("admin/teams") || request()->is("admin/teams/*") ? "active" : "" }}">
                                                        <i class="fa-fw nav-icon fas fa-users">

                                                        </i>
                                                        <p>
                                                            {{ trans('cruds.team.title') }}
                                                        </p>
                                                    </a>
                                                </li>
                                            @endcan
                                        </ul>
                                    </li>
                                @endcan
                                @can('jabatan_access')
                                    <li class="nav-item">
                                        <a href="{{ route("admin.jabatans.index") }}" class="nav-link {{ request()->is("admin/jabatans") || request()->is("admin/jabatans/*") ? "active" : "" }}">
                                            <i class="fa-fw nav-icon fas fa-cogs">

                                            </i>
                                            <p>
                                                {{ trans('cruds.jabatan.title') }}
                                            </p>
                                        </a>
                                    </li>
                                @endcan
                                @if(\Illuminate\Support\Facades\Schema::hasColumn('teams', 'owner_id') && \App\Models\Team::where('owner_id', auth()->user()->id)->exists())
                                    <li class="nav-item">
                                        <a class="{{ request()->is("admin/team-members") || request()->is("admin/team-members/*") ? "active" : "" }} nav-link" href="{{ route("admin.team-members.index") }}">
                                            <i class="fa-fw fa fa-users nav-icon">
                                            </i>
                                            <p>
                                                {{ trans("global.team-members") }}
                                            </p>
                                        </a>
                                    </li>
                                @endif
                                @if(file_exists(app_path('Http/Controllers/Auth/ChangePasswordController.php')))
                                    @can('profile_password_edit')
                                        <li class="nav-item">
                                            <a class="nav-link {{ request()->is('profile/password') || request()->is('profile/password/*') ? 'active' : '' }}" href="{{ route('profile.password.edit') }}">
                                                <i class="fa-fw fas fa-key nav-icon">
                                                </i>
                                                <p>
                                                    {{ trans('global.change_password') }}
                                                </p>
                                            </a>
                                        </li>
                                    @endcan
                                @endif
                                <li class="nav-item">
                                    <a href="#" class="nav-link" onclick="event.preventDefault(); document.getElementById('logoutform').submit();">
                                        <p>
                                            <i class="fas fa-fw fa-sign-out-alt nav-icon">

                                            </i>
                                            <p>{{ trans('global.logout') }}</p>
                                        </p>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        <!-- /.sidebar-menu -->
                    </div>
                    <!-- /.sidebar -->
                </aside>
              uuid: 3e5f35be553ab785
          uuid: 8982ce889427d842
        home.blade.php:
          isDir: false
          content: |-
            @extends('layouts.admin')
            @section('content')
            <div class="content">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                Dashboard
                            </div>

                            <div class="card-body">
                                @if(session('status'))
                                    <div class="alert alert-success" role="alert">
                                        {{ session('status') }}
                                    </div>
                                @endif

                                You are logged in!
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @endsection
            @section('scripts')
            @parent

            @endsection
          uuid: 9ef2e8c86df665ee
        welcome.blade.php:
          isDir: false
          content: |
            <!DOCTYPE html>
            <html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
                <head>
                    <meta charset="utf-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1">

                    <title>Laravel</title>

                    <!-- Fonts -->
                    <link rel="preconnect" href="https://fonts.bunny.net">
                    <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

                    <!-- Styles -->
                    <style>
                        /* ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, sans-serif;font-feature-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.relative{position:relative}.mx-auto{margin-left:auto;margin-right:auto}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.ml-4{margin-left:1rem}.mt-16{margin-top:4rem}.mt-6{margin-top:1.5rem}.mt-4{margin-top:1rem}.-mt-px{margin-top:-1px}.mr-1{margin-right:0.25rem}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.h-16{height:4rem}.h-7{height:1.75rem}.h-6{height:1.5rem}.h-5{height:1.25rem}.min-h-screen{min-height:100vh}.w-auto{width:auto}.w-16{width:4rem}.w-7{width:1.75rem}.w-6{width:1.5rem}.w-5{width:1.25rem}.max-w-7xl{max-width:80rem}.shrink-0{flex-shrink:0}.scale-100{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.gap-6{gap:1.5rem}.gap-4{gap:1rem}.self-center{align-self:center}.rounded-lg{border-radius:0.5rem}.rounded-full{border-radius:9999px}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242 / var(--tw-bg-opacity))}.bg-dots-darker{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(0,0,0,0.07)'/%3E%3C/svg%3E")}.from-gray-700\/50{--tw-gradient-from:rgb(55 65 81 / 0.5);--tw-gradient-to:rgb(55 65 81 / 0);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to:rgb(0 0 0 / 0);--tw-gradient-stops:var(--tw-gradient-from), transparent, var(--tw-gradient-to)}.bg-center{background-position:center}.stroke-red-500{stroke:#ef4444}.stroke-gray-400{stroke:#9ca3af}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.leading-relaxed{line-height:1.625}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 / 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-gray-500\/20{--tw-shadow-color:rgb(107 114 128 / 0.2);--tw-shadow:var(--tw-shadow-colored)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.selection\:bg-red-500 *::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-red-500::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity))}.focus\:rounded-sm:focus{border-radius:0.125rem}.focus\:outline:focus{outline-style:solid}.focus\:outline-2:focus{outline-width:2px}.focus\:outline-red-500:focus{outline-color:#ef4444}.group:hover .group-hover\:stroke-gray-600{stroke:#4b5563}@media (prefers-reduced-motion: no-preference){.motion-safe\:hover\:scale-\[1\.01\]:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (prefers-color-scheme: dark){.dark\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.dark\:bg-gray-800\/50{background-color:rgb(31 41 55 / 0.5)}.dark\:bg-red-800\/20{background-color:rgb(153 27 27 / 0.2)}.dark\:bg-dots-lighter{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(255,255,255,0.07)'/%3E%3C/svg%3E")}.dark\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left, var(--tw-gradient-stops))}.dark\:stroke-gray-600{stroke:#4b5563}.dark\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.dark\:ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dark\:ring-inset{--tw-ring-inset:inset}.dark\:ring-white\/5{--tw-ring-color:rgb(255 255 255 / 0.05)}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.group:hover .dark\:group-hover\:stroke-gray-400{stroke:#9ca3af}}@media (min-width: 640px){.sm\:fixed{position:fixed}.sm\:top-0{top:0px}.sm\:right-0{right:0px}.sm\:ml-0{margin-left:0px}.sm\:flex{display:flex}.sm\:items-center{align-items:center}.sm\:justify-center{justify-content:center}.sm\:justify-between{justify-content:space-between}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}@media (min-width: 1024px){.lg\:gap-8{gap:2rem}.lg\:p-8{padding:2rem}}
                    </style>
                </head>
                <body class="antialiased">
                    <div class="relative sm:flex sm:justify-center sm:items-center min-h-screen bg-dots-darker bg-center bg-gray-100 dark:bg-dots-lighter dark:bg-gray-900 selection:bg-red-500 selection:text-white">
                        @if (Route::has('login'))
                            <div class="sm:fixed sm:top-0 sm:right-0 p-6 text-right">
                                @auth
                                    <a href="{{ url('/home') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Home</a>
                                @else
                                    <a href="{{ route('login') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Log in</a>

                                    @if (Route::has('register'))
                                        <a href="{{ route('register') }}" class="ml-4 font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Register</a>
                                    @endif
                                @endauth
                            </div>
                        @endif

                        <div class="max-w-7xl mx-auto p-6 lg:p-8">
                            <div class="flex justify-center">
                                <svg viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto bg-gray-100 dark:bg-gray-900">
                                    <path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="#FF2D20"/>
                                </svg>
                            </div>

                            <div class="mt-16">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
                                    <a href="https://laravel.com/docs" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                                        <div>
                                            <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
                                                </svg>
                                            </div>

                                            <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Documentation</h2>

                                            <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                                Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                            </p>
                                        </div>

                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                                        </svg>
                                    </a>

                                    <a href="https://laracasts.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                                        <div>
                                            <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                                    <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
                                                </svg>
                                            </div>

                                            <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laracasts</h2>

                                            <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                                Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                            </p>
                                        </div>

                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                                        </svg>
                                    </a>

                                    <a href="https://laravel-news.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                                        <div>
                                            <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z" />
                                                </svg>
                                            </div>

                                            <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laravel News</h2>

                                            <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                                Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                            </p>
                                        </div>

                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                                        </svg>
                                    </a>

                                    <div class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                                        <div>
                                            <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64" />
                                                </svg>
                                            </div>

                                            <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Vibrant Ecosystem</h2>

                                            <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                                Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Forge</a>, <a href="https://vapor.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Vapor</a>, <a href="https://nova.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Nova</a>, and <a href="https://envoyer.io" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Telescope</a>, and more.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="flex justify-center mt-16 px-0 sm:items-center sm:justify-between">
                                <div class="text-center text-sm text-gray-500 dark:text-gray-400 sm:text-left">
                                    <div class="flex items-center gap-4">
                                        <a href="https://github.com/sponsors/taylorotwell" class="group inline-flex items-center hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="-mt-px mr-1 w-5 h-5 stroke-gray-400 dark:stroke-gray-600 group-hover:stroke-gray-600 dark:group-hover:stroke-gray-400">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
                                            </svg>
                                            Sponsor
                                        </a>
                                    </div>
                                </div>

                                <div class="ml-4 text-center text-sm text-gray-500 dark:text-gray-400 sm:text-right sm:ml-0">
                                    Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                                </div>
                            </div>
                        </div>
                    </div>
                </body>
            </html>
          uuid: 24c0adbf11c0c5d9
      uuid: c6bd40497e5eddb7
  uuid: d9744cf9c5b33826
routes:
  isDir: true
  content:
    api.php:
      isDir: false
      content: >
        <?php


        Route::group(['prefix' => 'v1', 'as' => 'api.', 'namespace' =>
        'Api\V1\Admin', 'middleware' => ['auth:sanctum']], function () {
            // Roles
            Route::apiResource('roles', 'RolesApiController');

            // Users
            Route::apiResource('users', 'UsersApiController');

            // Jabatan
            Route::apiResource('jabatans', 'JabatanApiController');
        });
      uuid: 0a3da7b3b6570571
    channels.php:
      isDir: false
      content: >
        <?php


        use Illuminate\Support\Facades\Broadcast;


        /*

        |--------------------------------------------------------------------------

        | Broadcast Channels

        |--------------------------------------------------------------------------

        |

        | Here you may register all of the event broadcasting channels that your

        | application supports. The given channel authorization callbacks are

        | used to check if an authenticated user can listen to the channel.

        |

        */


        Broadcast::channel('App.Models.User.{id}', function ($user, $id) {
            return (int) $user->id === (int) $id;
        });
      uuid: 21a0246f808716f2
    console.php:
      isDir: false
      content: >
        <?php


        use Illuminate\Foundation\Inspiring;

        use Illuminate\Support\Facades\Artisan;


        /*

        |--------------------------------------------------------------------------

        | Console Routes

        |--------------------------------------------------------------------------

        |

        | This file is where you may define all of your Closure based console

        | commands. Each Closure is bound to a command instance allowing a

        | simple approach to interacting with each command's IO methods.

        |

        */


        Artisan::command('inspire', function () {
            $this->comment(Inspiring::quote());
        })->purpose('Display an inspiring quote');
      uuid: 8b2c570450b3ad58
    web.php:
      isDir: false
      content: >
        <?php


        Route::redirect('/', '/login');

        Route::get('/home', function () {
            if (session('status')) {
                return redirect()->route('admin.home')->with('status', session('status'));
            }

            return redirect()->route('admin.home');
        });


        Auth::routes();


        Route::group(['prefix' => 'admin', 'as' => 'admin.', 'namespace' =>
        'Admin', 'middleware' => ['auth']], function () {
            Route::get('/', 'HomeController@index')->name('home');
            // Permissions
            Route::delete('permissions/destroy', 'PermissionsController@massDestroy')->name('permissions.massDestroy');
            Route::resource('permissions', 'PermissionsController');

            // Roles
            Route::delete('roles/destroy', 'RolesController@massDestroy')->name('roles.massDestroy');
            Route::resource('roles', 'RolesController');

            // Users
            Route::delete('users/destroy', 'UsersController@massDestroy')->name('users.massDestroy');
            Route::resource('users', 'UsersController');

            // Audit Logs
            Route::resource('audit-logs', 'AuditLogsController', ['except' => ['create', 'store', 'edit', 'update', 'destroy']]);

            // Team
            Route::delete('teams/destroy', 'TeamController@massDestroy')->name('teams.massDestroy');
            Route::resource('teams', 'TeamController');

            // Jabatan
            Route::delete('jabatans/destroy', 'JabatanController@massDestroy')->name('jabatans.massDestroy');
            Route::resource('jabatans', 'JabatanController');

            Route::get('team-members', 'TeamMembersController@index')->name('team-members.index');
            Route::post('team-members', 'TeamMembersController@invite')->name('team-members.invite');
        });

        Route::group(['prefix' => 'profile', 'as' => 'profile.', 'namespace' =>
        'Auth', 'middleware' => ['auth']], function () {
            // Change password
            if (file_exists(app_path('Http/Controllers/Auth/ChangePasswordController.php'))) {
                Route::get('password', 'ChangePasswordController@edit')->name('password.edit');
                Route::post('password', 'ChangePasswordController@update')->name('password.update');
                Route::post('profile', 'ChangePasswordController@updateProfile')->name('password.updateProfile');
                Route::post('profile/destroy', 'ChangePasswordController@destroy')->name('password.destroyProfile');
            }
        });
      uuid: daa58717063d5eb1
  uuid: 4a165a9eab9adaeb
tests:
  isDir: true
  content:
    Browser:
      isDir: true
      content:
        JabatanTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Browser;

            use Illuminate\Foundation\Testing\DatabaseMigrations;
            use Laravel\Dusk\Browser;
            use Tests\DuskTestCase;

            class JabatanTest extends DuskTestCase
            {
                public function testIndex()
                {
                    $admin = App\Models\User::find(1);
                    $this->browse(function (Browser $browser) use ($admin) {
                        $browser->loginAs($admin);
                        $browser->visit(route('admin.jabatan.index'));
                        $browser->assertRouteIs('admin.jabatan.index');
                    });
                }
            }
          uuid: c12902c158af4978
        PermissionsTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Browser;

            use Illuminate\Foundation\Testing\DatabaseMigrations;
            use Laravel\Dusk\Browser;
            use Tests\DuskTestCase;

            class PermissionsTest extends DuskTestCase
            {
                public function testIndex()
                {
                    $admin = App\Models\User::find(1);
                    $this->browse(function (Browser $browser) use ($admin) {
                        $browser->loginAs($admin);
                        $browser->visit(route('admin.permissions.index'));
                        $browser->assertRouteIs('admin.permissions.index');
                    });
                }
            }
          uuid: 3409dc0770ab2b0b
        RolesTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Browser;

            use Illuminate\Foundation\Testing\DatabaseMigrations;
            use Laravel\Dusk\Browser;
            use Tests\DuskTestCase;

            class RolesTest extends DuskTestCase
            {
                public function testIndex()
                {
                    $admin = App\Models\User::find(1);
                    $this->browse(function (Browser $browser) use ($admin) {
                        $browser->loginAs($admin);
                        $browser->visit(route('admin.roles.index'));
                        $browser->assertRouteIs('admin.roles.index');
                    });
                }
            }
          uuid: 3ecc36f96de4e147
        TeamTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Browser;

            use Illuminate\Foundation\Testing\DatabaseMigrations;
            use Laravel\Dusk\Browser;
            use Tests\DuskTestCase;

            class TeamTest extends DuskTestCase
            {
                public function testIndex()
                {
                    $admin = App\Models\User::find(1);
                    $this->browse(function (Browser $browser) use ($admin) {
                        $browser->loginAs($admin);
                        $browser->visit(route('admin.team.index'));
                        $browser->assertRouteIs('admin.team.index');
                    });
                }
            }
          uuid: 87695a887992f7e9
        UsersTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Browser;

            use Illuminate\Foundation\Testing\DatabaseMigrations;
            use Laravel\Dusk\Browser;
            use Tests\DuskTestCase;

            class UsersTest extends DuskTestCase
            {
                public function testIndex()
                {
                    $admin = App\Models\User::find(1);
                    $this->browse(function (Browser $browser) use ($admin) {
                        $browser->loginAs($admin);
                        $browser->visit(route('admin.users.index'));
                        $browser->assertRouteIs('admin.users.index');
                    });
                }
            }
          uuid: 65ee06089f8ccb1b
      uuid: f47a13bb8fb025a7
    Feature:
      isDir: true
      content:
        ExampleTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Feature;

            // use Illuminate\Foundation\Testing\RefreshDatabase;
            use Tests\TestCase;

            class ExampleTest extends TestCase
            {
                /**
                 * A basic test example.
                 */
                public function test_the_application_returns_a_successful_response(): void
                {
                    $response = $this->get('/');

                    $response->assertStatus(200);
                }
            }
          uuid: 6d72f00224624fcc
      uuid: 65206c73acf8dbb6
    Unit:
      isDir: true
      content:
        ExampleTest.php:
          isDir: false
          content: |
            <?php

            namespace Tests\Unit;

            use PHPUnit\Framework\TestCase;

            class ExampleTest extends TestCase
            {
                /**
                 * A basic test example.
                 */
                public function test_that_true_is_true(): void
                {
                    $this->assertTrue(true);
                }
            }
          uuid: 73bf3ac77a2f06e5
      uuid: adcb808afcdf9bdf
    CreatesApplication.php:
      isDir: false
      content: |
        <?php

        namespace Tests;

        use Illuminate\Contracts\Console\Kernel;
        use Illuminate\Foundation\Application;

        trait CreatesApplication
        {
            /**
             * Creates the application.
             */
            public function createApplication(): Application
            {
                $app = require __DIR__.'/../bootstrap/app.php';

                $app->make(Kernel::class)->bootstrap();

                return $app;
            }
        }
      uuid: aa1fe8f98d3d5f8f
    TestCase.php:
      isDir: false
      content: |
        <?php

        namespace Tests;

        use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

        abstract class TestCase extends BaseTestCase
        {
            use CreatesApplication;
        }
      uuid: a1cdf439478776e2
  uuid: c6ae3e055ad04260
composer.json:
  isDir: false
  content: |
    {
        "name": "laravel/laravel",
        "type": "project",
        "description": "The Laravel Framework.",
        "keywords": ["framework", "laravel"],
        "license": "MIT",
        "require": {
            "php": "^8.1",
            "guzzlehttp/guzzle": "^7.2",
            "laravel/framework": "^10.0",
            "laravel/sanctum": "^3.2",
            "laravel/tinker": "^2.8",
            "yajra/laravel-datatables-oracle": "^10.3"
        },
        "require-dev": {
            "fakerphp/faker": "^1.9.1",
            "laravel/pint": "^1.0",
            "laravel/sail": "^1.18",
            "laravel/ui": "^4.2",
            "mockery/mockery": "^1.4.4",
            "nunomaduro/collision": "^7.0",
            "phpunit/phpunit": "^10.0",
            "spatie/laravel-ignition": "^2.0"
        },
        "autoload": {
            "psr-4": {
                "App\\": "app/",
                "Database\\Factories\\": "database/factories/",
                "Database\\Seeders\\": "database/seeders/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Tests\\": "tests/"
            }
        },
        "scripts": {
            "post-autoload-dump": [
                "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
                "@php artisan package:discover --ansi"
            ],
            "post-update-cmd": [
                "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
            ],
            "post-root-package-install": [
                "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
            ],
            "post-create-project-cmd": [
                "@php artisan key:generate --ansi"
            ]
        },
        "extra": {
            "branch-alias": {
                "dev-master": "10.x-dev"
            },
            "laravel": {
                "dont-discover": []
            }
        },
        "config": {
            "optimize-autoloader": true,
            "preferred-install": "dist",
            "sort-packages": true,
            "allow-plugins": {
                "pestphp/pest-plugin": true
            }
        },
        "minimum-stability": "stable",
        "prefer-stable": true
    }
  uuid: cd223f7acb91c569
package.json:
  isDir: false
  content: |
    {
        "private": true,
        "scripts": {
            "dev": "vite",
            "build": "vite build"
        },
        "devDependencies": {
            "axios": "^1.1.2",
            "laravel-vite-plugin": "^0.7.2",
            "vite": "^4.0.0"
        }
    }
  uuid: 461ec6219a3c4275
vite.config.js:
  isDir: false
  content: |
    import { defineConfig } from 'vite';
    import laravel from 'laravel-vite-plugin';

    export default defineConfig({
        plugins: [
            laravel({
                input: ['resources/css/app.css', 'resources/js/app.js'],
                refresh: true,
            }),
        ],
    });
  uuid: 580f1eef49aed288
